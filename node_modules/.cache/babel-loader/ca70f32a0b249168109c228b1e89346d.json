{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.replacePathSepForRegex = exports.escapeStrForRegex = exports.escapePathForRegex = void 0;\n\nvar _path = require('path');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nconst escapePathForRegex = dir => {\n  if (_path.sep === '\\\\') {\n    // Replace \"\\\" with \"/\" so it's not escaped by escapeStrForRegex.\n    // replacePathSepForRegex will convert it back.\n    dir = dir.replace(/\\\\/g, '/');\n  }\n\n  return replacePathSepForRegex(escapeStrForRegex(dir));\n};\n\nexports.escapePathForRegex = escapePathForRegex;\n\nconst escapeStrForRegex = string => string.replace(/[[\\]{}()*+?.\\\\^$|]/g, '\\\\$&');\n\nexports.escapeStrForRegex = escapeStrForRegex;\n\nconst replacePathSepForRegex = string => {\n  if (_path.sep === '\\\\') {\n    return string.replace(/(\\/|(.)?\\\\(?![[\\]{}()*+?.^$|\\\\]))/g, (_match, _, p2) => p2 && p2 !== '\\\\' ? p2 + '\\\\\\\\' : '\\\\\\\\');\n  }\n\n  return string;\n};\n\nexports.replacePathSepForRegex = replacePathSepForRegex;","map":{"version":3,"names":["Object","defineProperty","exports","value","replacePathSepForRegex","escapeStrForRegex","escapePathForRegex","_path","require","dir","sep","replace","string","_match","_","p2"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-regex-util/build/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.replacePathSepForRegex =\n  exports.escapeStrForRegex =\n  exports.escapePathForRegex =\n    void 0;\n\nvar _path = require('path');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst escapePathForRegex = dir => {\n  if (_path.sep === '\\\\') {\n    // Replace \"\\\" with \"/\" so it's not escaped by escapeStrForRegex.\n    // replacePathSepForRegex will convert it back.\n    dir = dir.replace(/\\\\/g, '/');\n  }\n\n  return replacePathSepForRegex(escapeStrForRegex(dir));\n};\n\nexports.escapePathForRegex = escapePathForRegex;\n\nconst escapeStrForRegex = string =>\n  string.replace(/[[\\]{}()*+?.\\\\^$|]/g, '\\\\$&');\n\nexports.escapeStrForRegex = escapeStrForRegex;\n\nconst replacePathSepForRegex = string => {\n  if (_path.sep === '\\\\') {\n    return string.replace(\n      /(\\/|(.)?\\\\(?![[\\]{}()*+?.^$|\\\\]))/g,\n      (_match, _, p2) => (p2 && p2 !== '\\\\' ? p2 + '\\\\\\\\' : '\\\\\\\\')\n    );\n  }\n\n  return string;\n};\n\nexports.replacePathSepForRegex = replacePathSepForRegex;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GACEF,OAAO,CAACG,iBAAR,GACAH,OAAO,CAACI,kBAAR,GACE,KAAK,CAHT;;AAKA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMF,kBAAkB,GAAGG,GAAG,IAAI;EAChC,IAAIF,KAAK,CAACG,GAAN,KAAc,IAAlB,EAAwB;IACtB;IACA;IACAD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAAN;EACD;;EAED,OAAOP,sBAAsB,CAACC,iBAAiB,CAACI,GAAD,CAAlB,CAA7B;AACD,CARD;;AAUAP,OAAO,CAACI,kBAAR,GAA6BA,kBAA7B;;AAEA,MAAMD,iBAAiB,GAAGO,MAAM,IAC9BA,MAAM,CAACD,OAAP,CAAe,qBAAf,EAAsC,MAAtC,CADF;;AAGAT,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;;AAEA,MAAMD,sBAAsB,GAAGQ,MAAM,IAAI;EACvC,IAAIL,KAAK,CAACG,GAAN,KAAc,IAAlB,EAAwB;IACtB,OAAOE,MAAM,CAACD,OAAP,CACL,oCADK,EAEL,CAACE,MAAD,EAASC,CAAT,EAAYC,EAAZ,KAAoBA,EAAE,IAAIA,EAAE,KAAK,IAAb,GAAoBA,EAAE,GAAG,MAAzB,GAAkC,MAFjD,CAAP;EAID;;EAED,OAAOH,MAAP;AACD,CATD;;AAWAV,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC"},"metadata":{},"sourceType":"script"}