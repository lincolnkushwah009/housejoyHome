{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getPath = getPath;\nexports.interpolateVariables = void 0;\n\nfunction _jestGetType() {\n  const data = require('jest-get-type');\n\n  _jestGetType = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = require('pretty-format');\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nconst interpolateVariables = (title, template, index) => Object.keys(template).reduce(getMatchingKeyPaths(title), []) // aka flatMap\n.reduce(replaceKeyPathWithValue(template), title).replace('$#', '' + index);\n\nexports.interpolateVariables = interpolateVariables;\n\nconst getMatchingKeyPaths = title => (matches, key) => matches.concat(title.match(new RegExp(`\\\\$${key}[\\\\.\\\\w]*`, 'g')) || []);\n\nconst replaceKeyPathWithValue = template => (title, match) => {\n  const keyPath = match.replace('$', '').split('.');\n  const value = getPath(template, keyPath);\n\n  if ((0, _jestGetType().isPrimitive)(value)) {\n    return title.replace(match, String(value));\n  }\n\n  return title.replace(match, (0, _prettyFormat().format)(value, {\n    maxDepth: 1,\n    min: true\n  }));\n};\n/* eslint import/export: 0*/\n\n\nfunction getPath(template, _ref) {\n  let [head, ...tail] = _ref;\n  if (!head || !template.hasOwnProperty || !template.hasOwnProperty(head)) return template;\n  return getPath(template[head], tail);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getPath","interpolateVariables","_jestGetType","data","require","_prettyFormat","title","template","index","keys","reduce","getMatchingKeyPaths","replaceKeyPathWithValue","replace","matches","key","concat","match","RegExp","keyPath","split","isPrimitive","String","format","maxDepth","min","head","tail","hasOwnProperty"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-each/build/table/interpolation.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getPath = getPath;\nexports.interpolateVariables = void 0;\n\nfunction _jestGetType() {\n  const data = require('jest-get-type');\n\n  _jestGetType = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = require('pretty-format');\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst interpolateVariables = (title, template, index) =>\n  Object.keys(template)\n    .reduce(getMatchingKeyPaths(title), []) // aka flatMap\n    .reduce(replaceKeyPathWithValue(template), title)\n    .replace('$#', '' + index);\n\nexports.interpolateVariables = interpolateVariables;\n\nconst getMatchingKeyPaths = title => (matches, key) =>\n  matches.concat(title.match(new RegExp(`\\\\$${key}[\\\\.\\\\w]*`, 'g')) || []);\n\nconst replaceKeyPathWithValue = template => (title, match) => {\n  const keyPath = match.replace('$', '').split('.');\n  const value = getPath(template, keyPath);\n\n  if ((0, _jestGetType().isPrimitive)(value)) {\n    return title.replace(match, String(value));\n  }\n\n  return title.replace(\n    match,\n    (0, _prettyFormat().format)(value, {\n      maxDepth: 1,\n      min: true\n    })\n  );\n};\n/* eslint import/export: 0*/\n\nfunction getPath(template, [head, ...tail]) {\n  if (!head || !template.hasOwnProperty || !template.hasOwnProperty(head))\n    return template;\n  return getPath(template[head], tail);\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBA,OAAlB;AACAF,OAAO,CAACG,oBAAR,GAA+B,KAAK,CAApC;;AAEA,SAASC,YAAT,GAAwB;EACtB,MAAMC,IAAI,GAAGC,OAAO,CAAC,eAAD,CAApB;;EAEAF,YAAY,GAAG,YAAY;IACzB,OAAOC,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASE,aAAT,GAAyB;EACvB,MAAMF,IAAI,GAAGC,OAAO,CAAC,eAAD,CAApB;;EAEAC,aAAa,GAAG,YAAY;IAC1B,OAAOF,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMF,oBAAoB,GAAG,CAACK,KAAD,EAAQC,QAAR,EAAkBC,KAAlB,KAC3BZ,MAAM,CAACa,IAAP,CAAYF,QAAZ,EACGG,MADH,CACUC,mBAAmB,CAACL,KAAD,CAD7B,EACsC,EADtC,EAC0C;AAD1C,CAEGI,MAFH,CAEUE,uBAAuB,CAACL,QAAD,CAFjC,EAE6CD,KAF7C,EAGGO,OAHH,CAGW,IAHX,EAGiB,KAAKL,KAHtB,CADF;;AAMAV,OAAO,CAACG,oBAAR,GAA+BA,oBAA/B;;AAEA,MAAMU,mBAAmB,GAAGL,KAAK,IAAI,CAACQ,OAAD,EAAUC,GAAV,KACnCD,OAAO,CAACE,MAAR,CAAeV,KAAK,CAACW,KAAN,CAAY,IAAIC,MAAJ,CAAY,MAAKH,GAAI,WAArB,EAAiC,GAAjC,CAAZ,KAAsD,EAArE,CADF;;AAGA,MAAMH,uBAAuB,GAAGL,QAAQ,IAAI,CAACD,KAAD,EAAQW,KAAR,KAAkB;EAC5D,MAAME,OAAO,GAAGF,KAAK,CAACJ,OAAN,CAAc,GAAd,EAAmB,EAAnB,EAAuBO,KAAvB,CAA6B,GAA7B,CAAhB;EACA,MAAMrB,KAAK,GAAGC,OAAO,CAACO,QAAD,EAAWY,OAAX,CAArB;;EAEA,IAAI,CAAC,GAAGjB,YAAY,GAAGmB,WAAnB,EAAgCtB,KAAhC,CAAJ,EAA4C;IAC1C,OAAOO,KAAK,CAACO,OAAN,CAAcI,KAAd,EAAqBK,MAAM,CAACvB,KAAD,CAA3B,CAAP;EACD;;EAED,OAAOO,KAAK,CAACO,OAAN,CACLI,KADK,EAEL,CAAC,GAAGZ,aAAa,GAAGkB,MAApB,EAA4BxB,KAA5B,EAAmC;IACjCyB,QAAQ,EAAE,CADuB;IAEjCC,GAAG,EAAE;EAF4B,CAAnC,CAFK,CAAP;AAOD,CAfD;AAgBA;;;AAEA,SAASzB,OAAT,CAAiBO,QAAjB,QAA4C;EAAA,IAAjB,CAACmB,IAAD,EAAO,GAAGC,IAAV,CAAiB;EAC1C,IAAI,CAACD,IAAD,IAAS,CAACnB,QAAQ,CAACqB,cAAnB,IAAqC,CAACrB,QAAQ,CAACqB,cAAT,CAAwBF,IAAxB,CAA1C,EACE,OAAOnB,QAAP;EACF,OAAOP,OAAO,CAACO,QAAQ,CAACmB,IAAD,CAAT,EAAiBC,IAAjB,CAAd;AACD"},"metadata":{},"sourceType":"script"}