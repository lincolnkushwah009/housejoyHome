{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.makeEmptyAggregatedTestResult = exports.createEmptyTestResult = exports.buildFailureTestResult = exports.addResult = void 0;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst makeEmptyAggregatedTestResult = () => ({\n  numFailedTestSuites: 0,\n  numFailedTests: 0,\n  numPassedTestSuites: 0,\n  numPassedTests: 0,\n  numPendingTestSuites: 0,\n  numPendingTests: 0,\n  numRuntimeErrorTestSuites: 0,\n  numTodoTests: 0,\n  numTotalTestSuites: 0,\n  numTotalTests: 0,\n  openHandles: [],\n  snapshot: {\n    added: 0,\n    didUpdate: false,\n    // is set only after the full run\n    failure: false,\n    filesAdded: 0,\n    // combines individual test results + removed files after the full run\n    filesRemoved: 0,\n    filesRemovedList: [],\n    filesUnmatched: 0,\n    filesUpdated: 0,\n    matched: 0,\n    total: 0,\n    unchecked: 0,\n    uncheckedKeysByFile: [],\n    unmatched: 0,\n    updated: 0\n  },\n  startTime: 0,\n  success: true,\n  testResults: [],\n  wasInterrupted: false\n});\n\nexports.makeEmptyAggregatedTestResult = makeEmptyAggregatedTestResult;\n\nconst buildFailureTestResult = (testPath, err) => ({\n  console: undefined,\n  displayName: undefined,\n  failureMessage: null,\n  leaks: false,\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testExecError: err,\n  testFilePath: testPath,\n  testResults: []\n}); // Add individual test result to an aggregated test result\n\n\nexports.buildFailureTestResult = buildFailureTestResult;\n\nconst addResult = (aggregatedResults, testResult) => {\n  // `todos` are new as of Jest 24, and not all runners return it.\n  // Set it to `0` to avoid `NaN`\n  if (!testResult.numTodoTests) {\n    testResult.numTodoTests = 0;\n  }\n\n  aggregatedResults.testResults.push(testResult);\n  aggregatedResults.numTotalTests += testResult.numPassingTests + testResult.numFailingTests + testResult.numPendingTests + testResult.numTodoTests;\n  aggregatedResults.numFailedTests += testResult.numFailingTests;\n  aggregatedResults.numPassedTests += testResult.numPassingTests;\n  aggregatedResults.numPendingTests += testResult.numPendingTests;\n  aggregatedResults.numTodoTests += testResult.numTodoTests;\n\n  if (testResult.testExecError) {\n    aggregatedResults.numRuntimeErrorTestSuites++;\n  }\n\n  if (testResult.skipped) {\n    aggregatedResults.numPendingTestSuites++;\n  } else if (testResult.numFailingTests > 0 || testResult.testExecError) {\n    aggregatedResults.numFailedTestSuites++;\n  } else {\n    aggregatedResults.numPassedTestSuites++;\n  } // Snapshot data\n\n\n  if (testResult.snapshot.added) {\n    aggregatedResults.snapshot.filesAdded++;\n  }\n\n  if (testResult.snapshot.fileDeleted) {\n    aggregatedResults.snapshot.filesRemoved++;\n  }\n\n  if (testResult.snapshot.unmatched) {\n    aggregatedResults.snapshot.filesUnmatched++;\n  }\n\n  if (testResult.snapshot.updated) {\n    aggregatedResults.snapshot.filesUpdated++;\n  }\n\n  aggregatedResults.snapshot.added += testResult.snapshot.added;\n  aggregatedResults.snapshot.matched += testResult.snapshot.matched;\n  aggregatedResults.snapshot.unchecked += testResult.snapshot.unchecked;\n\n  if (testResult.snapshot.uncheckedKeys && testResult.snapshot.uncheckedKeys.length > 0) {\n    aggregatedResults.snapshot.uncheckedKeysByFile.push({\n      filePath: testResult.testFilePath,\n      keys: testResult.snapshot.uncheckedKeys\n    });\n  }\n\n  aggregatedResults.snapshot.unmatched += testResult.snapshot.unmatched;\n  aggregatedResults.snapshot.updated += testResult.snapshot.updated;\n  aggregatedResults.snapshot.total += testResult.snapshot.added + testResult.snapshot.matched + testResult.snapshot.unmatched + testResult.snapshot.updated;\n};\n\nexports.addResult = addResult;\n\nconst createEmptyTestResult = () => ({\n  leaks: false,\n  // That's legacy code, just adding it as needed for typing\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testFilePath: '',\n  testResults: []\n});\n\nexports.createEmptyTestResult = createEmptyTestResult;","map":{"version":3,"names":["Object","defineProperty","exports","value","makeEmptyAggregatedTestResult","createEmptyTestResult","buildFailureTestResult","addResult","numFailedTestSuites","numFailedTests","numPassedTestSuites","numPassedTests","numPendingTestSuites","numPendingTests","numRuntimeErrorTestSuites","numTodoTests","numTotalTestSuites","numTotalTests","openHandles","snapshot","added","didUpdate","failure","filesAdded","filesRemoved","filesRemovedList","filesUnmatched","filesUpdated","matched","total","unchecked","uncheckedKeysByFile","unmatched","updated","startTime","success","testResults","wasInterrupted","testPath","err","console","undefined","displayName","failureMessage","leaks","numFailingTests","numPassingTests","perfStats","end","runtime","slow","start","skipped","fileDeleted","uncheckedKeys","testExecError","testFilePath","aggregatedResults","testResult","push","length","filePath","keys"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/@jest/test-result/build/helpers.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.makeEmptyAggregatedTestResult =\n  exports.createEmptyTestResult =\n  exports.buildFailureTestResult =\n  exports.addResult =\n    void 0;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst makeEmptyAggregatedTestResult = () => ({\n  numFailedTestSuites: 0,\n  numFailedTests: 0,\n  numPassedTestSuites: 0,\n  numPassedTests: 0,\n  numPendingTestSuites: 0,\n  numPendingTests: 0,\n  numRuntimeErrorTestSuites: 0,\n  numTodoTests: 0,\n  numTotalTestSuites: 0,\n  numTotalTests: 0,\n  openHandles: [],\n  snapshot: {\n    added: 0,\n    didUpdate: false,\n    // is set only after the full run\n    failure: false,\n    filesAdded: 0,\n    // combines individual test results + removed files after the full run\n    filesRemoved: 0,\n    filesRemovedList: [],\n    filesUnmatched: 0,\n    filesUpdated: 0,\n    matched: 0,\n    total: 0,\n    unchecked: 0,\n    uncheckedKeysByFile: [],\n    unmatched: 0,\n    updated: 0\n  },\n  startTime: 0,\n  success: true,\n  testResults: [],\n  wasInterrupted: false\n});\n\nexports.makeEmptyAggregatedTestResult = makeEmptyAggregatedTestResult;\n\nconst buildFailureTestResult = (testPath, err) => ({\n  console: undefined,\n  displayName: undefined,\n  failureMessage: null,\n  leaks: false,\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testExecError: err,\n  testFilePath: testPath,\n  testResults: []\n}); // Add individual test result to an aggregated test result\n\nexports.buildFailureTestResult = buildFailureTestResult;\n\nconst addResult = (aggregatedResults, testResult) => {\n  // `todos` are new as of Jest 24, and not all runners return it.\n  // Set it to `0` to avoid `NaN`\n  if (!testResult.numTodoTests) {\n    testResult.numTodoTests = 0;\n  }\n\n  aggregatedResults.testResults.push(testResult);\n  aggregatedResults.numTotalTests +=\n    testResult.numPassingTests +\n    testResult.numFailingTests +\n    testResult.numPendingTests +\n    testResult.numTodoTests;\n  aggregatedResults.numFailedTests += testResult.numFailingTests;\n  aggregatedResults.numPassedTests += testResult.numPassingTests;\n  aggregatedResults.numPendingTests += testResult.numPendingTests;\n  aggregatedResults.numTodoTests += testResult.numTodoTests;\n\n  if (testResult.testExecError) {\n    aggregatedResults.numRuntimeErrorTestSuites++;\n  }\n\n  if (testResult.skipped) {\n    aggregatedResults.numPendingTestSuites++;\n  } else if (testResult.numFailingTests > 0 || testResult.testExecError) {\n    aggregatedResults.numFailedTestSuites++;\n  } else {\n    aggregatedResults.numPassedTestSuites++;\n  } // Snapshot data\n\n  if (testResult.snapshot.added) {\n    aggregatedResults.snapshot.filesAdded++;\n  }\n\n  if (testResult.snapshot.fileDeleted) {\n    aggregatedResults.snapshot.filesRemoved++;\n  }\n\n  if (testResult.snapshot.unmatched) {\n    aggregatedResults.snapshot.filesUnmatched++;\n  }\n\n  if (testResult.snapshot.updated) {\n    aggregatedResults.snapshot.filesUpdated++;\n  }\n\n  aggregatedResults.snapshot.added += testResult.snapshot.added;\n  aggregatedResults.snapshot.matched += testResult.snapshot.matched;\n  aggregatedResults.snapshot.unchecked += testResult.snapshot.unchecked;\n\n  if (\n    testResult.snapshot.uncheckedKeys &&\n    testResult.snapshot.uncheckedKeys.length > 0\n  ) {\n    aggregatedResults.snapshot.uncheckedKeysByFile.push({\n      filePath: testResult.testFilePath,\n      keys: testResult.snapshot.uncheckedKeys\n    });\n  }\n\n  aggregatedResults.snapshot.unmatched += testResult.snapshot.unmatched;\n  aggregatedResults.snapshot.updated += testResult.snapshot.updated;\n  aggregatedResults.snapshot.total +=\n    testResult.snapshot.added +\n    testResult.snapshot.matched +\n    testResult.snapshot.unmatched +\n    testResult.snapshot.updated;\n};\n\nexports.addResult = addResult;\n\nconst createEmptyTestResult = () => ({\n  leaks: false,\n  // That's legacy code, just adding it as needed for typing\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    runtime: 0,\n    slow: false,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  testFilePath: '',\n  testResults: []\n});\n\nexports.createEmptyTestResult = createEmptyTestResult;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}