{"ast":null,"code":"/* Determine browser vs node environment by testing the default top level context. Solution courtesy of: https://stackoverflow.com/questions/17575790/environment-detection-node-js-or-browser */\nconst isBrowserEnvironment = function () {\n  // eslint-disable-next-line no-undef\n  return typeof window !== \"undefined\" && this === window;\n}.call();\n\nif (isBrowserEnvironment) {\n  // Web version of reading a wasm file into an array buffer.\n  let mappingsWasm = null;\n\n  module.exports = function readWasm() {\n    if (typeof mappingsWasm === \"string\") {\n      return fetch(mappingsWasm).then(response => response.arrayBuffer());\n    }\n\n    if (mappingsWasm instanceof ArrayBuffer) {\n      return Promise.resolve(mappingsWasm);\n    }\n\n    throw new Error(\"You must provide the string URL or ArrayBuffer contents \" + \"of lib/mappings.wasm by calling \" + \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" + \"before using SourceMapConsumer\");\n  };\n\n  module.exports.initialize = input => mappingsWasm = input;\n} else {\n  // Node version of reading a wasm file into an array buffer.\n  const fs = require(\"fs\");\n\n  const path = require(\"path\");\n\n  module.exports = function readWasm() {\n    return new Promise((resolve, reject) => {\n      const wasmPath = path.join(__dirname, \"mappings.wasm\");\n      fs.readFile(wasmPath, null, (error, data) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(data.buffer);\n      });\n    });\n  };\n\n  module.exports.initialize = _ => {\n    console.debug(\"SourceMapConsumer.initialize is a no-op when running in node.js\");\n  };\n}","map":{"version":3,"names":["isBrowserEnvironment","window","call","mappingsWasm","module","exports","readWasm","fetch","then","response","arrayBuffer","ArrayBuffer","Promise","resolve","Error","initialize","input","fs","require","path","reject","wasmPath","join","__dirname","readFile","error","data","buffer","_","console","debug"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/v8-to-istanbul/node_modules/source-map/lib/read-wasm.js"],"sourcesContent":["/* Determine browser vs node environment by testing the default top level context. Solution courtesy of: https://stackoverflow.com/questions/17575790/environment-detection-node-js-or-browser */\nconst isBrowserEnvironment = (function() {\n    // eslint-disable-next-line no-undef\n    return (typeof window !== \"undefined\") && (this === window);\n}).call();\n\nif (isBrowserEnvironment) {\n  // Web version of reading a wasm file into an array buffer.\n\n  let mappingsWasm = null;\n\n  module.exports = function readWasm() {\n    if (typeof mappingsWasm === \"string\") {\n      return fetch(mappingsWasm)\n        .then(response => response.arrayBuffer());\n    }\n    if (mappingsWasm instanceof ArrayBuffer) {\n      return Promise.resolve(mappingsWasm);\n    }\n    throw new Error(\"You must provide the string URL or ArrayBuffer contents \" +\n                    \"of lib/mappings.wasm by calling \" +\n                    \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" +\n                    \"before using SourceMapConsumer\");\n  };\n\n  module.exports.initialize = input => mappingsWasm = input;\n} else {\n  // Node version of reading a wasm file into an array buffer.\n  const fs = require(\"fs\");\n  const path = require(\"path\");\n\n  module.exports = function readWasm() {\n    return new Promise((resolve, reject) => {\n      const wasmPath = path.join(__dirname, \"mappings.wasm\");\n      fs.readFile(wasmPath, null, (error, data) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(data.buffer);\n      });\n    });\n  };\n\n  module.exports.initialize = _ => {\n    console.debug(\"SourceMapConsumer.initialize is a no-op when running in node.js\");\n  };\n}\n"],"mappings":"AAAA;AACA,MAAMA,oBAAoB,GAAI,YAAW;EACrC;EACA,OAAQ,OAAOC,MAAP,KAAkB,WAAnB,IAAoC,SAASA,MAApD;AACH,CAH4B,CAG1BC,IAH0B,EAA7B;;AAKA,IAAIF,oBAAJ,EAA0B;EACxB;EAEA,IAAIG,YAAY,GAAG,IAAnB;;EAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,GAAoB;IACnC,IAAI,OAAOH,YAAP,KAAwB,QAA5B,EAAsC;MACpC,OAAOI,KAAK,CAACJ,YAAD,CAAL,CACJK,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,WAAT,EADb,CAAP;IAED;;IACD,IAAIP,YAAY,YAAYQ,WAA5B,EAAyC;MACvC,OAAOC,OAAO,CAACC,OAAR,CAAgBV,YAAhB,CAAP;IACD;;IACD,MAAM,IAAIW,KAAJ,CAAU,6DACA,kCADA,GAEA,6DAFA,GAGA,gCAHV,CAAN;EAID,CAZD;;EAcAV,MAAM,CAACC,OAAP,CAAeU,UAAf,GAA4BC,KAAK,IAAIb,YAAY,GAAGa,KAApD;AACD,CApBD,MAoBO;EACL;EACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;EACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;EAEAd,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,GAAoB;IACnC,OAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUO,MAAV,KAAqB;MACtC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAjB;MACAN,EAAE,CAACO,QAAH,CAAYH,QAAZ,EAAsB,IAAtB,EAA4B,CAACI,KAAD,EAAQC,IAAR,KAAiB;QAC3C,IAAID,KAAJ,EAAW;UACTL,MAAM,CAACK,KAAD,CAAN;UACA;QACD;;QAEDZ,OAAO,CAACa,IAAI,CAACC,MAAN,CAAP;MACD,CAPD;IAQD,CAVM,CAAP;EAWD,CAZD;;EAcAvB,MAAM,CAACC,OAAP,CAAeU,UAAf,GAA4Ba,CAAC,IAAI;IAC/BC,OAAO,CAACC,KAAR,CAAc,iEAAd;EACD,CAFD;AAGD"},"metadata":{},"sourceType":"script"}