{"ast":null,"code":"/* jshint browser: true */\n(function () {\n  // We'll copy the properties below into the mirror div.\n  // Note that some browsers, such as Firefox, do not concatenate properties\n  // into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n  // so we have to list every single property explicitly.\n  var properties = ['direction', // RTL support\n  'boxSizing', 'width', // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height', 'overflowX', 'overflowY', // copy the scrollbar for IE\n  'borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch', 'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily', 'textAlign', 'textTransform', 'textIndent', 'textDecoration', // might not make a difference, but better be safe\n  'letterSpacing', 'wordSpacing', 'tabSize', 'MozTabSize'];\n  var isBrowser = typeof window !== 'undefined';\n  var isFirefox = isBrowser && window.mozInnerScreenX != null;\n\n  function getCaretCoordinates(element, position, options) {\n    if (!isBrowser) {\n      throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n    }\n\n    var debug = options && options.debug || false;\n\n    if (debug) {\n      var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n      if (el) el.parentNode.removeChild(el);\n    } // The mirror div will replicate the textarea's style\n\n\n    var div = document.createElement('div');\n    div.id = 'input-textarea-caret-position-mirror-div';\n    document.body.appendChild(div);\n    var style = div.style;\n    var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle; // currentStyle for IE < 9\n\n    var isInput = element.nodeName === 'INPUT'; // Default textarea styles\n\n    style.whiteSpace = 'pre-wrap';\n    if (!isInput) style.wordWrap = 'break-word'; // only for textarea-s\n    // Position off-screen\n\n    style.position = 'absolute'; // required to return coordinates properly\n\n    if (!debug) style.visibility = 'hidden'; // not 'display: none' because we want rendering\n    // Transfer the element's properties to the div\n\n    properties.forEach(function (prop) {\n      if (isInput && prop === 'lineHeight') {\n        // Special case for <input>s because text is rendered centered and line height may be != height\n        style.lineHeight = computed.height;\n      } else {\n        style[prop] = computed[prop];\n      }\n    });\n\n    if (isFirefox) {\n      // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n      if (element.scrollHeight > parseInt(computed.height)) style.overflowY = 'scroll';\n    } else {\n      style.overflow = 'hidden'; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n    }\n\n    div.textContent = element.value.substring(0, position); // The second special handling for input type=\"text\" vs textarea:\n    // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n\n    if (isInput) div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n    var span = document.createElement('span'); // Wrapping must be replicated *exactly*, including when a long word gets\n    // onto the next line, with whitespace at the end of the line before (#7).\n    // The  *only* reliable way to do that is to copy the *entire* rest of the\n    // textarea's content into the <span> created at the caret position.\n    // For inputs, just '.' would be enough, but no need to bother.\n\n    span.textContent = element.value.substring(position) || '.'; // || because a completely empty faux span doesn't render at all\n\n    div.appendChild(span);\n    var coordinates = {\n      top: span.offsetTop + parseInt(computed['borderTopWidth']),\n      left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n      height: parseInt(computed['lineHeight'])\n    };\n\n    if (debug) {\n      span.style.backgroundColor = '#aaa';\n    } else {\n      document.body.removeChild(div);\n    }\n\n    return coordinates;\n  }\n\n  if (typeof module != 'undefined' && typeof module.exports != 'undefined') {\n    module.exports = getCaretCoordinates;\n  } else if (isBrowser) {\n    window.getCaretCoordinates = getCaretCoordinates;\n  }\n})();","map":{"version":3,"names":["properties","isBrowser","window","isFirefox","mozInnerScreenX","getCaretCoordinates","element","position","options","Error","debug","el","document","querySelector","parentNode","removeChild","div","createElement","id","body","appendChild","style","computed","getComputedStyle","currentStyle","isInput","nodeName","whiteSpace","wordWrap","visibility","forEach","prop","lineHeight","height","scrollHeight","parseInt","overflowY","overflow","textContent","value","substring","replace","span","coordinates","top","offsetTop","left","offsetLeft","backgroundColor","module","exports"],"sources":["/Users/lincolnkushwah/Desktop/housejoyHome/node_modules/textarea-caret/index.js"],"sourcesContent":["/* jshint browser: true */\n\n(function () {\n\n// We'll copy the properties below into the mirror div.\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nvar properties = [\n  'direction',  // RTL support\n  'boxSizing',\n  'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height',\n  'overflowX',\n  'overflowY',  // copy the scrollbar for IE\n\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderStyle',\n\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'fontStretch',\n  'fontSize',\n  'fontSizeAdjust',\n  'lineHeight',\n  'fontFamily',\n\n  'textAlign',\n  'textTransform',\n  'textIndent',\n  'textDecoration',  // might not make a difference, but better be safe\n\n  'letterSpacing',\n  'wordSpacing',\n\n  'tabSize',\n  'MozTabSize'\n\n];\n\nvar isBrowser = (typeof window !== 'undefined');\nvar isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\nfunction getCaretCoordinates(element, position, options) {\n  if (!isBrowser) {\n    throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n  }\n\n  var debug = options && options.debug || false;\n  if (debug) {\n    var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n    if (el) el.parentNode.removeChild(el);\n  }\n\n  // The mirror div will replicate the textarea's style\n  var div = document.createElement('div');\n  div.id = 'input-textarea-caret-position-mirror-div';\n  document.body.appendChild(div);\n\n  var style = div.style;\n  var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n  var isInput = element.nodeName === 'INPUT';\n\n  // Default textarea styles\n  style.whiteSpace = 'pre-wrap';\n  if (!isInput)\n    style.wordWrap = 'break-word';  // only for textarea-s\n\n  // Position off-screen\n  style.position = 'absolute';  // required to return coordinates properly\n  if (!debug)\n    style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n  // Transfer the element's properties to the div\n  properties.forEach(function (prop) {\n    if (isInput && prop === 'lineHeight') {\n      // Special case for <input>s because text is rendered centered and line height may be != height\n      style.lineHeight = computed.height;\n    } else {\n      style[prop] = computed[prop];\n    }\n  });\n\n  if (isFirefox) {\n    // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n    if (element.scrollHeight > parseInt(computed.height))\n      style.overflowY = 'scroll';\n  } else {\n    style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n  }\n\n  div.textContent = element.value.substring(0, position);\n  // The second special handling for input type=\"text\" vs textarea:\n  // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n  if (isInput)\n    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n  var span = document.createElement('span');\n  // Wrapping must be replicated *exactly*, including when a long word gets\n  // onto the next line, with whitespace at the end of the line before (#7).\n  // The  *only* reliable way to do that is to copy the *entire* rest of the\n  // textarea's content into the <span> created at the caret position.\n  // For inputs, just '.' would be enough, but no need to bother.\n  span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n  div.appendChild(span);\n\n  var coordinates = {\n    top: span.offsetTop + parseInt(computed['borderTopWidth']),\n    left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n    height: parseInt(computed['lineHeight'])\n  };\n\n  if (debug) {\n    span.style.backgroundColor = '#aaa';\n  } else {\n    document.body.removeChild(div);\n  }\n\n  return coordinates;\n}\n\nif (typeof module != 'undefined' && typeof module.exports != 'undefined') {\n  module.exports = getCaretCoordinates;\n} else if(isBrowser) {\n  window.getCaretCoordinates = getCaretCoordinates;\n}\n\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}