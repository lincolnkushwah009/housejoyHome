{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.clearCachedLookups = clearCachedLookups;\nexports.default = cachedShouldLoadAsEsm;\n\nfunction _path() {\n  const data = require('path');\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _vm() {\n  const data = require('vm');\n\n  _vm = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _fileWalkers = require('./fileWalkers');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @ts-expect-error: experimental, not added to the types\n\n\nconst runtimeSupportsVmModules = typeof _vm().SyntheticModule === 'function';\nconst cachedFileLookups = new Map();\nconst cachedDirLookups = new Map();\nconst cachedChecks = new Map();\n\nfunction clearCachedLookups() {\n  cachedFileLookups.clear();\n  cachedDirLookups.clear();\n  cachedChecks.clear();\n}\n\nfunction cachedShouldLoadAsEsm(path, extensionsToTreatAsEsm) {\n  if (!runtimeSupportsVmModules) {\n    return false;\n  }\n\n  let cachedLookup = cachedFileLookups.get(path);\n\n  if (cachedLookup === undefined) {\n    cachedLookup = shouldLoadAsEsm(path, extensionsToTreatAsEsm);\n    cachedFileLookups.set(path, cachedLookup);\n  }\n\n  return cachedLookup;\n} // this is a bad version of what https://github.com/nodejs/modules/issues/393 would provide\n\n\nfunction shouldLoadAsEsm(path, extensionsToTreatAsEsm) {\n  const extension = (0, _path().extname)(path);\n\n  if (extension === '.mjs') {\n    return true;\n  }\n\n  if (extension === '.cjs') {\n    return false;\n  }\n\n  if (extension !== '.js') {\n    return extensionsToTreatAsEsm.includes(extension);\n  }\n\n  const cwd = (0, _path().dirname)(path);\n  let cachedLookup = cachedDirLookups.get(cwd);\n\n  if (cachedLookup === undefined) {\n    cachedLookup = cachedPkgCheck(cwd);\n    cachedFileLookups.set(cwd, cachedLookup);\n  }\n\n  return cachedLookup;\n}\n\nfunction cachedPkgCheck(cwd) {\n  const pkgPath = (0, _fileWalkers.findClosestPackageJson)(cwd);\n\n  if (!pkgPath) {\n    return false;\n  }\n\n  let hasModuleField = cachedChecks.get(pkgPath);\n\n  if (hasModuleField != null) {\n    return hasModuleField;\n  }\n\n  try {\n    const pkg = (0, _fileWalkers.readPackageCached)(pkgPath);\n    hasModuleField = pkg.type === 'module';\n  } catch {\n    hasModuleField = false;\n  }\n\n  cachedChecks.set(pkgPath, hasModuleField);\n  return hasModuleField;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","clearCachedLookups","default","cachedShouldLoadAsEsm","_path","data","require","_vm","_fileWalkers","runtimeSupportsVmModules","SyntheticModule","cachedFileLookups","Map","cachedDirLookups","cachedChecks","clear","path","extensionsToTreatAsEsm","cachedLookup","get","undefined","shouldLoadAsEsm","set","extension","extname","includes","cwd","dirname","cachedPkgCheck","pkgPath","findClosestPackageJson","hasModuleField","pkg","readPackageCached","type"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-resolve/build/shouldLoadAsEsm.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.clearCachedLookups = clearCachedLookups;\nexports.default = cachedShouldLoadAsEsm;\n\nfunction _path() {\n  const data = require('path');\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _vm() {\n  const data = require('vm');\n\n  _vm = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _fileWalkers = require('./fileWalkers');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @ts-expect-error: experimental, not added to the types\nconst runtimeSupportsVmModules = typeof _vm().SyntheticModule === 'function';\nconst cachedFileLookups = new Map();\nconst cachedDirLookups = new Map();\nconst cachedChecks = new Map();\n\nfunction clearCachedLookups() {\n  cachedFileLookups.clear();\n  cachedDirLookups.clear();\n  cachedChecks.clear();\n}\n\nfunction cachedShouldLoadAsEsm(path, extensionsToTreatAsEsm) {\n  if (!runtimeSupportsVmModules) {\n    return false;\n  }\n\n  let cachedLookup = cachedFileLookups.get(path);\n\n  if (cachedLookup === undefined) {\n    cachedLookup = shouldLoadAsEsm(path, extensionsToTreatAsEsm);\n    cachedFileLookups.set(path, cachedLookup);\n  }\n\n  return cachedLookup;\n} // this is a bad version of what https://github.com/nodejs/modules/issues/393 would provide\n\nfunction shouldLoadAsEsm(path, extensionsToTreatAsEsm) {\n  const extension = (0, _path().extname)(path);\n\n  if (extension === '.mjs') {\n    return true;\n  }\n\n  if (extension === '.cjs') {\n    return false;\n  }\n\n  if (extension !== '.js') {\n    return extensionsToTreatAsEsm.includes(extension);\n  }\n\n  const cwd = (0, _path().dirname)(path);\n  let cachedLookup = cachedDirLookups.get(cwd);\n\n  if (cachedLookup === undefined) {\n    cachedLookup = cachedPkgCheck(cwd);\n    cachedFileLookups.set(cwd, cachedLookup);\n  }\n\n  return cachedLookup;\n}\n\nfunction cachedPkgCheck(cwd) {\n  const pkgPath = (0, _fileWalkers.findClosestPackageJson)(cwd);\n\n  if (!pkgPath) {\n    return false;\n  }\n\n  let hasModuleField = cachedChecks.get(pkgPath);\n\n  if (hasModuleField != null) {\n    return hasModuleField;\n  }\n\n  try {\n    const pkg = (0, _fileWalkers.readPackageCached)(pkgPath);\n    hasModuleField = pkg.type === 'module';\n  } catch {\n    hasModuleField = false;\n  }\n\n  cachedChecks.set(pkgPath, hasModuleField);\n  return hasModuleField;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}