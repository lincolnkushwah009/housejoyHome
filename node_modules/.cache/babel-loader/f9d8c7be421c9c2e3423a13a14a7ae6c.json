{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction nativeModule() {\n  const data = _interopRequireWildcard(require('module'));\n\n  nativeModule = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _url() {\n  const data = require('url');\n\n  _url = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _vm() {\n  const data = require('vm');\n\n  _vm = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cjsModuleLexer() {\n  const data = require('cjs-module-lexer');\n\n  _cjsModuleLexer = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _collectV8Coverage() {\n  const data = require('collect-v8-coverage');\n\n  _collectV8Coverage = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _execa() {\n  const data = _interopRequireDefault(require('execa'));\n\n  _execa = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fs() {\n  const data = _interopRequireWildcard(require('graceful-fs'));\n\n  fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _stripBom() {\n  const data = _interopRequireDefault(require('strip-bom'));\n\n  _stripBom = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _transform() {\n  const data = require('@jest/transform');\n\n  _transform = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestHasteMap() {\n  const data = _interopRequireDefault(require('jest-haste-map'));\n\n  _jestHasteMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestResolve() {\n  const data = _interopRequireDefault(require('jest-resolve'));\n\n  _jestResolve = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestSnapshot() {\n  const data = _interopRequireDefault(require('jest-snapshot'));\n\n  _jestSnapshot = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _helpers = require('./helpers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst esmIsAvailable = typeof _vm().SourceTextModule === 'function';\nconst defaultTransformOptions = {\n  isInternalModule: false,\n  supportsDynamicImport: esmIsAvailable,\n  supportsExportNamespaceFrom: false,\n  supportsStaticESM: false,\n  supportsTopLevelAwait: false\n}; // These are modules that we know\n// * are safe to require from the outside (not stateful, not prone to errors passing in instances from different realms), and\n// * take sufficiently long to require to warrant an optimization.\n// When required from the outside, they use the worker's require cache and are thus\n// only loaded once per worker, not once per test file.\n// Use /benchmarks/test-file-overhead to measure the impact.\n// Note that this only applies when they are required in an internal context;\n// users who require one of these modules in their tests will still get the module from inside the VM.\n// Prefer listing a module here only if it is impractical to use the jest-resolve-outside-vm-option where it is required,\n// e.g. because there are many require sites spread across the dependency graph.\n\nconst INTERNAL_MODULE_REQUIRE_OUTSIDE_OPTIMIZED_MODULES = new Set(['chalk']);\nconst JEST_RESOLVE_OUTSIDE_VM_OPTION = Symbol.for('jest-resolve-outside-vm-option');\nconst testTimeoutSymbol = Symbol.for('TEST_TIMEOUT_SYMBOL');\nconst retryTimesSymbol = Symbol.for('RETRY_TIMES');\nconst NODE_MODULES = path().sep + 'node_modules' + path().sep;\n\nconst getModuleNameMapper = config => {\n  if (Array.isArray(config.moduleNameMapper) && config.moduleNameMapper.length) {\n    return config.moduleNameMapper.map(_ref => {\n      let [regex, moduleName] = _ref;\n      return {\n        moduleName,\n        regex: new RegExp(regex)\n      };\n    });\n  }\n\n  return null;\n};\n\nconst unmockRegExpCache = new WeakMap();\nconst EVAL_RESULT_VARIABLE = 'Object.<anonymous>';\nconst runtimeSupportsVmModules = typeof _vm().SyntheticModule === 'function';\n\nconst supportsTopLevelAwait = runtimeSupportsVmModules && (() => {\n  try {\n    // eslint-disable-next-line no-new\n    new (_vm().SourceTextModule)('await Promise.resolve()');\n    return true;\n  } catch {\n    return false;\n  }\n})();\n\nconst supportsNodeColonModulePrefixInRequire = (() => {\n  try {\n    require('node:fs');\n\n    return true;\n  } catch {\n    return false;\n  }\n})();\n\nconst supportsNodeColonModulePrefixInImport = (() => {\n  const {\n    stdout\n  } = _execa().default.sync('node', ['--eval', 'import(\"node:fs\").then(() => console.log(true), () => console.log(false));'], {\n    reject: false\n  });\n\n  return stdout === 'true';\n})();\n\nclass Runtime {\n  constructor(config, environment, resolver, transformer, cacheFS, coverageOptions, testPath) {\n    var _this$_environment$ex, _this$_environment$ex2, _this$_environment;\n\n    _defineProperty(this, '_cacheFS', void 0);\n\n    _defineProperty(this, '_config', void 0);\n\n    _defineProperty(this, '_coverageOptions', void 0);\n\n    _defineProperty(this, '_currentlyExecutingModulePath', void 0);\n\n    _defineProperty(this, '_environment', void 0);\n\n    _defineProperty(this, '_explicitShouldMock', void 0);\n\n    _defineProperty(this, '_explicitShouldMockModule', void 0);\n\n    _defineProperty(this, '_fakeTimersImplementation', void 0);\n\n    _defineProperty(this, '_internalModuleRegistry', void 0);\n\n    _defineProperty(this, '_isCurrentlyExecutingManualMock', void 0);\n\n    _defineProperty(this, '_mainModule', void 0);\n\n    _defineProperty(this, '_mockFactories', void 0);\n\n    _defineProperty(this, '_mockMetaDataCache', void 0);\n\n    _defineProperty(this, '_mockRegistry', void 0);\n\n    _defineProperty(this, '_isolatedMockRegistry', void 0);\n\n    _defineProperty(this, '_moduleMockRegistry', void 0);\n\n    _defineProperty(this, '_moduleMockFactories', void 0);\n\n    _defineProperty(this, '_moduleMocker', void 0);\n\n    _defineProperty(this, '_isolatedModuleRegistry', void 0);\n\n    _defineProperty(this, '_moduleRegistry', void 0);\n\n    _defineProperty(this, '_esmoduleRegistry', void 0);\n\n    _defineProperty(this, '_cjsNamedExports', void 0);\n\n    _defineProperty(this, '_esmModuleLinkingMap', void 0);\n\n    _defineProperty(this, '_testPath', void 0);\n\n    _defineProperty(this, '_resolver', void 0);\n\n    _defineProperty(this, '_shouldAutoMock', void 0);\n\n    _defineProperty(this, '_shouldMockModuleCache', void 0);\n\n    _defineProperty(this, '_shouldUnmockTransitiveDependenciesCache', void 0);\n\n    _defineProperty(this, '_sourceMapRegistry', void 0);\n\n    _defineProperty(this, '_scriptTransformer', void 0);\n\n    _defineProperty(this, '_fileTransforms', void 0);\n\n    _defineProperty(this, '_fileTransformsMutex', void 0);\n\n    _defineProperty(this, '_v8CoverageInstrumenter', void 0);\n\n    _defineProperty(this, '_v8CoverageResult', void 0);\n\n    _defineProperty(this, '_transitiveShouldMock', void 0);\n\n    _defineProperty(this, '_unmockList', void 0);\n\n    _defineProperty(this, '_virtualMocks', void 0);\n\n    _defineProperty(this, '_virtualModuleMocks', void 0);\n\n    _defineProperty(this, '_moduleImplementation', void 0);\n\n    _defineProperty(this, 'jestObjectCaches', void 0);\n\n    _defineProperty(this, 'jestGlobals', void 0);\n\n    _defineProperty(this, 'esmConditions', void 0);\n\n    _defineProperty(this, 'cjsConditions', void 0);\n\n    _defineProperty(this, 'isTornDown', false);\n\n    this._cacheFS = cacheFS;\n    this._config = config;\n    this._coverageOptions = coverageOptions;\n    this._currentlyExecutingModulePath = '';\n    this._environment = environment;\n    this._explicitShouldMock = new Map();\n    this._explicitShouldMockModule = new Map();\n    this._internalModuleRegistry = new Map();\n    this._isCurrentlyExecutingManualMock = null;\n    this._mainModule = null;\n    this._mockFactories = new Map();\n    this._mockRegistry = new Map();\n    this._moduleMockRegistry = new Map();\n    this._moduleMockFactories = new Map();\n    invariant(this._environment.moduleMocker, '`moduleMocker` must be set on an environment when created');\n    this._moduleMocker = this._environment.moduleMocker;\n    this._isolatedModuleRegistry = null;\n    this._isolatedMockRegistry = null;\n    this._moduleRegistry = new Map();\n    this._esmoduleRegistry = new Map();\n    this._cjsNamedExports = new Map();\n    this._esmModuleLinkingMap = new WeakMap();\n    this._testPath = testPath;\n    this._resolver = resolver;\n    this._scriptTransformer = transformer;\n    this._shouldAutoMock = config.automock;\n    this._sourceMapRegistry = new Map();\n    this._fileTransforms = new Map();\n    this._fileTransformsMutex = new Map();\n    this._virtualMocks = new Map();\n    this._virtualModuleMocks = new Map();\n    this.jestObjectCaches = new Map();\n    this._mockMetaDataCache = new Map();\n    this._shouldMockModuleCache = new Map();\n    this._shouldUnmockTransitiveDependenciesCache = new Map();\n    this._transitiveShouldMock = new Map();\n    this._fakeTimersImplementation = config.timers === 'legacy' ? this._environment.fakeTimers : this._environment.fakeTimersModern;\n    this._unmockList = unmockRegExpCache.get(config);\n\n    if (!this._unmockList && config.unmockedModulePathPatterns) {\n      this._unmockList = new RegExp(config.unmockedModulePathPatterns.join('|'));\n      unmockRegExpCache.set(config, this._unmockList);\n    }\n\n    const envExportConditions = (_this$_environment$ex = (_this$_environment$ex2 = (_this$_environment = this._environment).exportConditions) === null || _this$_environment$ex2 === void 0 ? void 0 : _this$_environment$ex2.call(_this$_environment)) !== null && _this$_environment$ex !== void 0 ? _this$_environment$ex : [];\n    this.esmConditions = Array.from(new Set(['import', 'default', ...envExportConditions]));\n    this.cjsConditions = Array.from(new Set(['require', 'default', ...envExportConditions]));\n\n    if (config.automock) {\n      config.setupFiles.forEach(filePath => {\n        if (filePath.includes(NODE_MODULES)) {\n          const moduleID = this._resolver.getModuleID(this._virtualMocks, filePath, undefined, // shouldn't really matter, but in theory this will make sure the caching is correct\n          {\n            conditions: this.unstable_shouldLoadAsEsm(filePath) ? this.esmConditions : this.cjsConditions\n          });\n\n          this._transitiveShouldMock.set(moduleID, false);\n        }\n      });\n    }\n\n    this.resetModules();\n  }\n\n  static async createContext(config, options) {\n    (0, _jestUtil().createDirectory)(config.cacheDirectory);\n    const instance = Runtime.createHasteMap(config, {\n      console: options.console,\n      maxWorkers: options.maxWorkers,\n      resetCache: !config.cache,\n      watch: options.watch,\n      watchman: options.watchman\n    });\n    const hasteMap = await instance.build();\n    return {\n      config,\n      hasteFS: hasteMap.hasteFS,\n      moduleMap: hasteMap.moduleMap,\n      resolver: Runtime.createResolver(config, hasteMap.moduleMap)\n    };\n  }\n\n  static createHasteMap(config, options) {\n    const ignorePatternParts = [...config.modulePathIgnorePatterns, ...(options && options.watch ? config.watchPathIgnorePatterns : []), config.cacheDirectory.startsWith(config.rootDir + path().sep) && config.cacheDirectory].filter(Boolean);\n    const ignorePattern = ignorePatternParts.length > 0 ? new RegExp(ignorePatternParts.join('|')) : undefined;\n    return _jestHasteMap().default.create({\n      cacheDirectory: config.cacheDirectory,\n      computeSha1: config.haste.computeSha1,\n      console: options === null || options === void 0 ? void 0 : options.console,\n      dependencyExtractor: config.dependencyExtractor,\n      enableSymlinks: config.haste.enableSymlinks,\n      extensions: [_jestSnapshot().default.EXTENSION].concat(config.moduleFileExtensions),\n      forceNodeFilesystemAPI: config.haste.forceNodeFilesystemAPI,\n      hasteImplModulePath: config.haste.hasteImplModulePath,\n      hasteMapModulePath: config.haste.hasteMapModulePath,\n      ignorePattern,\n      maxWorkers: (options === null || options === void 0 ? void 0 : options.maxWorkers) || 1,\n      mocksPattern: (0, _jestRegexUtil().escapePathForRegex)(path().sep + '__mocks__' + path().sep),\n      name: config.name,\n      platforms: config.haste.platforms || ['ios', 'android'],\n      resetCache: options === null || options === void 0 ? void 0 : options.resetCache,\n      retainAllFiles: false,\n      rootDir: config.rootDir,\n      roots: config.roots,\n      throwOnModuleCollision: config.haste.throwOnModuleCollision,\n      useWatchman: options === null || options === void 0 ? void 0 : options.watchman,\n      watch: options === null || options === void 0 ? void 0 : options.watch\n    });\n  }\n\n  static createResolver(config, moduleMap) {\n    return new (_jestResolve().default)(moduleMap, {\n      defaultPlatform: config.haste.defaultPlatform,\n      extensions: config.moduleFileExtensions.map(extension => '.' + extension),\n      hasCoreModules: true,\n      moduleDirectories: config.moduleDirectories,\n      moduleNameMapper: getModuleNameMapper(config),\n      modulePaths: config.modulePaths,\n      platforms: config.haste.platforms,\n      resolver: config.resolver,\n      rootDir: config.rootDir\n    });\n  }\n\n  static async runCLI() {\n    throw new Error('The jest-runtime CLI has been moved into jest-repl');\n  }\n\n  static getCLIOptions() {\n    throw new Error('The jest-runtime CLI has been moved into jest-repl');\n  } // unstable as it should be replaced by https://github.com/nodejs/modules/issues/393, and we don't want people to use it\n\n\n  unstable_shouldLoadAsEsm(path) {\n    return _jestResolve().default.unstable_shouldLoadAsEsm(path, this._config.extensionsToTreatAsEsm);\n  } // not async _now_, but transform will be\n\n\n  async loadEsmModule(modulePath) {\n    let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const cacheKey = modulePath + query;\n\n    if (this._fileTransformsMutex.has(cacheKey)) {\n      await this._fileTransformsMutex.get(cacheKey);\n    }\n\n    if (!this._esmoduleRegistry.has(cacheKey)) {\n      invariant(typeof this._environment.getVmContext === 'function', 'ES Modules are only supported if your test environment has the `getVmContext` function');\n\n      const context = this._environment.getVmContext();\n\n      invariant(context, 'Test environment has been torn down');\n      let transformResolve;\n      let transformReject;\n\n      this._fileTransformsMutex.set(cacheKey, new Promise((resolve, reject) => {\n        transformResolve = resolve;\n        transformReject = reject;\n      }));\n\n      invariant(transformResolve && transformReject, 'Promise initialization should be sync - please report this bug to Jest!');\n\n      if (this._resolver.isCoreModule(modulePath)) {\n        const core = this._importCoreModule(modulePath, context);\n\n        this._esmoduleRegistry.set(cacheKey, core);\n\n        transformResolve();\n        return core;\n      }\n\n      const transformedCode = await this.transformFileAsync(modulePath, {\n        isInternalModule: false,\n        supportsDynamicImport: true,\n        supportsExportNamespaceFrom: true,\n        supportsStaticESM: true,\n        supportsTopLevelAwait\n      });\n\n      try {\n        const module = new (_vm().SourceTextModule)(transformedCode, {\n          context,\n          identifier: modulePath,\n          importModuleDynamically: async (specifier, referencingModule) => {\n            invariant(runtimeSupportsVmModules, 'You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules');\n            const module = await this.resolveModule(specifier, referencingModule.identifier, referencingModule.context);\n            return this.linkAndEvaluateModule(module);\n          },\n\n          initializeImportMeta(meta) {\n            meta.url = (0, _url().pathToFileURL)(modulePath).href;\n          }\n\n        });\n        invariant(!this._esmoduleRegistry.has(cacheKey), `Module cache already has entry ${cacheKey}. This is a bug in Jest, please report it!`);\n\n        this._esmoduleRegistry.set(cacheKey, module);\n\n        transformResolve();\n      } catch (error) {\n        transformReject(error);\n        throw error;\n      }\n    }\n\n    const module = this._esmoduleRegistry.get(cacheKey);\n\n    invariant(module, 'Module cache does not contain module. This is a bug in Jest, please open up an issue');\n    return module;\n  }\n\n  resolveModule(specifier, referencingIdentifier, context) {\n    if (this.isTornDown) {\n      this._logFormattedReferenceError('You are trying to `import` a file after the Jest environment has been torn down.');\n\n      process.exitCode = 1;\n      return;\n    }\n\n    if (specifier === '@jest/globals') {\n      const fromCache = this._esmoduleRegistry.get('@jest/globals');\n\n      if (fromCache) {\n        return fromCache;\n      }\n\n      const globals = this.getGlobalsForEsm(referencingIdentifier, context);\n\n      this._esmoduleRegistry.set('@jest/globals', globals);\n\n      return globals;\n    }\n\n    if (specifier.startsWith('file://')) {\n      specifier = (0, _url().fileURLToPath)(specifier);\n    }\n\n    const [path, query] = specifier.split('?');\n\n    if (this._shouldMock(referencingIdentifier, path, this._explicitShouldMockModule, {\n      conditions: this.esmConditions\n    })) {\n      return this.importMock(referencingIdentifier, path, context);\n    }\n\n    const resolved = this._resolveModule(referencingIdentifier, path, {\n      conditions: this.esmConditions\n    });\n\n    if (this._resolver.isCoreModule(resolved) || this.unstable_shouldLoadAsEsm(resolved)) {\n      return this.loadEsmModule(resolved, query);\n    }\n\n    return this.loadCjsAsEsm(referencingIdentifier, resolved, context);\n  }\n\n  async linkAndEvaluateModule(module) {\n    if (this.isTornDown) {\n      this._logFormattedReferenceError('You are trying to `import` a file after the Jest environment has been torn down.');\n\n      process.exitCode = 1;\n      return;\n    }\n\n    if (module.status === 'unlinked') {\n      // since we might attempt to link the same module in parallel, stick the promise in a weak map so every call to\n      // this method can await it\n      this._esmModuleLinkingMap.set(module, module.link((specifier, referencingModule) => this.resolveModule(specifier, referencingModule.identifier, referencingModule.context)));\n    }\n\n    await this._esmModuleLinkingMap.get(module);\n\n    if (module.status === 'linked') {\n      await module.evaluate();\n    }\n\n    return module;\n  }\n\n  async unstable_importModule(from, moduleName) {\n    invariant(runtimeSupportsVmModules, 'You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules');\n    const [path, query] = (moduleName !== null && moduleName !== void 0 ? moduleName : '').split('?');\n\n    const modulePath = this._resolveModule(from, path, {\n      conditions: this.esmConditions\n    });\n\n    const module = await this.loadEsmModule(modulePath, query);\n    return this.linkAndEvaluateModule(module);\n  }\n\n  loadCjsAsEsm(from, modulePath, context) {\n    // CJS loaded via `import` should share cache with other CJS: https://github.com/nodejs/modules/issues/503\n    const cjs = this.requireModuleOrMock(from, modulePath);\n    const parsedExports = this.getExportsOfCjs(modulePath);\n    const cjsExports = [...parsedExports].filter(exportName => {\n      // we don't wanna respect any exports _named_ default as a named export\n      if (exportName === 'default') {\n        return false;\n      }\n\n      return Object.hasOwnProperty.call(cjs, exportName);\n    });\n    const module = new (_vm().SyntheticModule)([...cjsExports, 'default'], function () {\n      cjsExports.forEach(exportName => {\n        // @ts-expect-error\n        this.setExport(exportName, cjs[exportName]);\n      }); // @ts-expect-error: TS doesn't know what `this` is\n\n      this.setExport('default', cjs);\n    }, {\n      context,\n      identifier: modulePath\n    });\n    return evaluateSyntheticModule(module);\n  }\n\n  async importMock(from, moduleName, context) {\n    const moduleID = this._resolver.getModuleID(this._virtualModuleMocks, from, moduleName, {\n      conditions: this.esmConditions\n    });\n\n    if (this._moduleMockRegistry.has(moduleID)) {\n      return this._moduleMockRegistry.get(moduleID);\n    }\n\n    if (this._moduleMockFactories.has(moduleID)) {\n      const invokedFactory = await this._moduleMockFactories.get(moduleID // has check above makes this ok\n      )();\n      const module = new (_vm().SyntheticModule)(Object.keys(invokedFactory), function () {\n        Object.entries(invokedFactory).forEach(_ref2 => {\n          let [key, value] = _ref2;\n          // @ts-expect-error: TS doesn't know what `this` is\n          this.setExport(key, value);\n        });\n      }, {\n        context,\n        identifier: moduleName\n      });\n\n      this._moduleMockRegistry.set(moduleID, module);\n\n      return evaluateSyntheticModule(module);\n    }\n\n    throw new Error('Attempting to import a mock without a factory');\n  }\n\n  getExportsOfCjs(modulePath) {\n    var _this$_fileTransforms, _this$_fileTransforms2;\n\n    const cachedNamedExports = this._cjsNamedExports.get(modulePath);\n\n    if (cachedNamedExports) {\n      return cachedNamedExports;\n    }\n\n    const transformedCode = (_this$_fileTransforms = (_this$_fileTransforms2 = this._fileTransforms.get(modulePath)) === null || _this$_fileTransforms2 === void 0 ? void 0 : _this$_fileTransforms2.code) !== null && _this$_fileTransforms !== void 0 ? _this$_fileTransforms : this.readFile(modulePath);\n    const {\n      exports,\n      reexports\n    } = (0, _cjsModuleLexer().parse)(transformedCode);\n    const namedExports = new Set(exports);\n    reexports.forEach(reexport => {\n      const resolved = this._resolveModule(modulePath, reexport, {\n        conditions: this.esmConditions\n      });\n\n      const exports = this.getExportsOfCjs(resolved);\n      exports.forEach(namedExports.add, namedExports);\n    });\n\n    this._cjsNamedExports.set(modulePath, namedExports);\n\n    return namedExports;\n  }\n\n  requireModule(from, moduleName, options) {\n    let isRequireActual = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    var _options$isInternalMo;\n\n    const isInternal = (_options$isInternalMo = options === null || options === void 0 ? void 0 : options.isInternalModule) !== null && _options$isInternalMo !== void 0 ? _options$isInternalMo : false;\n\n    const moduleID = this._resolver.getModuleID(this._virtualMocks, from, moduleName, isInternal ? undefined : {\n      conditions: this.cjsConditions\n    });\n\n    let modulePath; // Some old tests rely on this mocking behavior. Ideally we'll change this\n    // to be more explicit.\n\n    const moduleResource = moduleName && this._resolver.getModule(moduleName);\n\n    const manualMock = moduleName && this._resolver.getMockModule(from, moduleName);\n\n    if (!(options !== null && options !== void 0 && options.isInternalModule) && !isRequireActual && !moduleResource && manualMock && manualMock !== this._isCurrentlyExecutingManualMock && this._explicitShouldMock.get(moduleID) !== false) {\n      modulePath = manualMock;\n    }\n\n    if (moduleName && this._resolver.isCoreModule(moduleName)) {\n      return this._requireCoreModule(moduleName, supportsNodeColonModulePrefixInRequire);\n    }\n\n    if (!modulePath) {\n      modulePath = this._resolveModule(from, moduleName, isInternal ? undefined : {\n        conditions: this.cjsConditions\n      });\n    }\n\n    if (this.unstable_shouldLoadAsEsm(modulePath)) {\n      // Node includes more info in the message\n      const error = new Error(`Must use import to load ES Module: ${modulePath}`); // @ts-expect-error: `code` is not defined\n\n      error.code = 'ERR_REQUIRE_ESM';\n      throw error;\n    }\n\n    let moduleRegistry;\n\n    if (isInternal) {\n      moduleRegistry = this._internalModuleRegistry;\n    } else if (this._isolatedModuleRegistry) {\n      moduleRegistry = this._isolatedModuleRegistry;\n    } else {\n      moduleRegistry = this._moduleRegistry;\n    }\n\n    const module = moduleRegistry.get(modulePath);\n\n    if (module) {\n      return module.exports;\n    } // We must register the pre-allocated module object first so that any\n    // circular dependencies that may arise while evaluating the module can\n    // be satisfied.\n\n\n    const localModule = {\n      children: [],\n      exports: {},\n      filename: modulePath,\n      id: modulePath,\n      loaded: false,\n      path: path().dirname(modulePath)\n    };\n    moduleRegistry.set(modulePath, localModule);\n\n    try {\n      this._loadModule(localModule, from, moduleName, modulePath, options, moduleRegistry);\n    } catch (error) {\n      moduleRegistry.delete(modulePath);\n      throw error;\n    }\n\n    return localModule.exports;\n  }\n\n  requireInternalModule(from, to) {\n    if (to) {\n      var _nativeModule$createR;\n\n      const require = ((_nativeModule$createR = nativeModule().createRequire) !== null && _nativeModule$createR !== void 0 ? _nativeModule$createR : nativeModule().createRequireFromPath)(from);\n\n      if (INTERNAL_MODULE_REQUIRE_OUTSIDE_OPTIMIZED_MODULES.has(to)) {\n        return require(to);\n      }\n\n      const outsideJestVmPath = (0, _helpers.decodePossibleOutsideJestVmPath)(to);\n\n      if (outsideJestVmPath) {\n        return require(outsideJestVmPath);\n      }\n    }\n\n    return this.requireModule(from, to, {\n      isInternalModule: true,\n      supportsDynamicImport: esmIsAvailable,\n      supportsExportNamespaceFrom: false,\n      supportsStaticESM: false,\n      supportsTopLevelAwait: false\n    });\n  }\n\n  requireActual(from, moduleName) {\n    return this.requireModule(from, moduleName, undefined, true);\n  }\n\n  requireMock(from, moduleName) {\n    var _this$_isolatedMockRe;\n\n    const moduleID = this._resolver.getModuleID(this._virtualMocks, from, moduleName, {\n      conditions: this.cjsConditions\n    });\n\n    if ((_this$_isolatedMockRe = this._isolatedMockRegistry) !== null && _this$_isolatedMockRe !== void 0 && _this$_isolatedMockRe.has(moduleID)) {\n      return this._isolatedMockRegistry.get(moduleID);\n    } else if (this._mockRegistry.has(moduleID)) {\n      return this._mockRegistry.get(moduleID);\n    }\n\n    const mockRegistry = this._isolatedMockRegistry || this._mockRegistry;\n\n    if (this._mockFactories.has(moduleID)) {\n      // has check above makes this ok\n      const module = this._mockFactories.get(moduleID)();\n\n      mockRegistry.set(moduleID, module);\n      return module;\n    }\n\n    const manualMockOrStub = this._resolver.getMockModule(from, moduleName);\n\n    let modulePath = this._resolver.getMockModule(from, moduleName) || this._resolveModule(from, moduleName, {\n      conditions: this.cjsConditions\n    });\n\n    let isManualMock = manualMockOrStub && !this._resolver.resolveStubModuleName(from, moduleName);\n\n    if (!isManualMock) {\n      // If the actual module file has a __mocks__ dir sitting immediately next\n      // to it, look to see if there is a manual mock for this file.\n      //\n      // subDir1/my_module.js\n      // subDir1/__mocks__/my_module.js\n      // subDir2/my_module.js\n      // subDir2/__mocks__/my_module.js\n      //\n      // Where some other module does a relative require into each of the\n      // respective subDir{1,2} directories and expects a manual mock\n      // corresponding to that particular my_module.js file.\n      const moduleDir = path().dirname(modulePath);\n      const moduleFileName = path().basename(modulePath);\n      const potentialManualMock = path().join(moduleDir, '__mocks__', moduleFileName);\n\n      if (fs().existsSync(potentialManualMock)) {\n        isManualMock = true;\n        modulePath = potentialManualMock;\n      }\n    }\n\n    if (isManualMock) {\n      const localModule = {\n        children: [],\n        exports: {},\n        filename: modulePath,\n        id: modulePath,\n        loaded: false,\n        path: path().dirname(modulePath)\n      };\n\n      this._loadModule(localModule, from, moduleName, modulePath, undefined, mockRegistry);\n\n      mockRegistry.set(moduleID, localModule.exports);\n    } else {\n      // Look for a real module to generate an automock from\n      mockRegistry.set(moduleID, this._generateMock(from, moduleName));\n    }\n\n    return mockRegistry.get(moduleID);\n  }\n\n  _loadModule(localModule, from, moduleName, modulePath, options, moduleRegistry) {\n    if (path().extname(modulePath) === '.json') {\n      const text = (0, _stripBom().default)(this.readFile(modulePath));\n\n      const transformedFile = this._scriptTransformer.transformJson(modulePath, this._getFullTransformationOptions(options), text);\n\n      localModule.exports = this._environment.global.JSON.parse(transformedFile);\n    } else if (path().extname(modulePath) === '.node') {\n      localModule.exports = require(modulePath);\n    } else {\n      // Only include the fromPath if a moduleName is given. Else treat as root.\n      const fromPath = moduleName ? from : null;\n\n      this._execModule(localModule, options, moduleRegistry, fromPath);\n    }\n\n    localModule.loaded = true;\n  }\n\n  _getFullTransformationOptions() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultTransformOptions;\n    return { ...options,\n      ...this._coverageOptions\n    };\n  }\n\n  requireModuleOrMock(from, moduleName) {\n    // this module is unmockable\n    if (moduleName === '@jest/globals') {\n      // @ts-expect-error: we don't care that it's not assignable to T\n      return this.getGlobalsForCjs(from);\n    }\n\n    try {\n      if (this._shouldMock(from, moduleName, this._explicitShouldMock, {\n        conditions: this.cjsConditions\n      })) {\n        return this.requireMock(from, moduleName);\n      } else {\n        return this.requireModule(from, moduleName);\n      }\n    } catch (e) {\n      const moduleNotFound = _jestResolve().default.tryCastModuleNotFoundError(e);\n\n      if (moduleNotFound) {\n        if (moduleNotFound.siblingWithSimilarExtensionFound === null || moduleNotFound.siblingWithSimilarExtensionFound === undefined) {\n          moduleNotFound.hint = (0, _helpers.findSiblingsWithFileExtension)(this._config.moduleFileExtensions, from, moduleNotFound.moduleName || moduleName);\n          moduleNotFound.siblingWithSimilarExtensionFound = Boolean(moduleNotFound.hint);\n        }\n\n        moduleNotFound.buildMessage(this._config.rootDir);\n        throw moduleNotFound;\n      }\n\n      throw e;\n    }\n  }\n\n  isolateModules(fn) {\n    if (this._isolatedModuleRegistry || this._isolatedMockRegistry) {\n      throw new Error('isolateModules cannot be nested inside another isolateModules.');\n    }\n\n    this._isolatedModuleRegistry = new Map();\n    this._isolatedMockRegistry = new Map();\n\n    try {\n      fn();\n    } finally {\n      var _this$_isolatedModule, _this$_isolatedMockRe2; // might be cleared within the callback\n\n\n      (_this$_isolatedModule = this._isolatedModuleRegistry) === null || _this$_isolatedModule === void 0 ? void 0 : _this$_isolatedModule.clear();\n      (_this$_isolatedMockRe2 = this._isolatedMockRegistry) === null || _this$_isolatedMockRe2 === void 0 ? void 0 : _this$_isolatedMockRe2.clear();\n      this._isolatedModuleRegistry = null;\n      this._isolatedMockRegistry = null;\n    }\n  }\n\n  resetModules() {\n    var _this$_isolatedModule2, _this$_isolatedMockRe3;\n\n    (_this$_isolatedModule2 = this._isolatedModuleRegistry) === null || _this$_isolatedModule2 === void 0 ? void 0 : _this$_isolatedModule2.clear();\n    (_this$_isolatedMockRe3 = this._isolatedMockRegistry) === null || _this$_isolatedMockRe3 === void 0 ? void 0 : _this$_isolatedMockRe3.clear();\n    this._isolatedModuleRegistry = null;\n    this._isolatedMockRegistry = null;\n\n    this._mockRegistry.clear();\n\n    this._moduleRegistry.clear();\n\n    this._esmoduleRegistry.clear();\n\n    this._cjsNamedExports.clear();\n\n    this._moduleMockRegistry.clear();\n\n    if (this._environment) {\n      if (this._environment.global) {\n        const envGlobal = this._environment.global;\n        Object.keys(envGlobal).forEach(key => {\n          const globalMock = envGlobal[key];\n\n          if ((typeof globalMock === 'object' && globalMock !== null || typeof globalMock === 'function') && globalMock._isMockFunction === true) {\n            globalMock.mockClear();\n          }\n        });\n      }\n\n      if (this._environment.fakeTimers) {\n        this._environment.fakeTimers.clearAllTimers();\n      }\n    }\n  }\n\n  async collectV8Coverage() {\n    this._v8CoverageInstrumenter = new (_collectV8Coverage().CoverageInstrumenter)();\n    await this._v8CoverageInstrumenter.startInstrumenting();\n  }\n\n  async stopCollectingV8Coverage() {\n    if (!this._v8CoverageInstrumenter) {\n      throw new Error('You need to call `collectV8Coverage` first.');\n    }\n\n    this._v8CoverageResult = await this._v8CoverageInstrumenter.stopInstrumenting();\n  }\n\n  getAllCoverageInfoCopy() {\n    return (0, _jestUtil().deepCyclicCopy)(this._environment.global.__coverage__);\n  }\n\n  getAllV8CoverageInfoCopy() {\n    if (!this._v8CoverageResult) {\n      throw new Error('You need to `stopCollectingV8Coverage` first');\n    }\n\n    return this._v8CoverageResult.filter(res => res.url.startsWith('file://')).map(res => ({ ...res,\n      url: (0, _url().fileURLToPath)(res.url)\n    })).filter((res // TODO: will this work on windows? It might be better if `shouldInstrument` deals with it anyways\n    ) => res.url.startsWith(this._config.rootDir) && this._fileTransforms.has(res.url) && (0, _transform().shouldInstrument)(res.url, this._coverageOptions, this._config)).map(result => {\n      const transformedFile = this._fileTransforms.get(result.url);\n\n      return {\n        codeTransformResult: transformedFile,\n        result\n      };\n    });\n  }\n\n  getSourceMaps() {\n    return this._sourceMapRegistry;\n  }\n\n  setMock(from, moduleName, mockFactory, options) {\n    if (options !== null && options !== void 0 && options.virtual) {\n      const mockPath = this._resolver.getModulePath(from, moduleName);\n\n      this._virtualMocks.set(mockPath, true);\n    }\n\n    const moduleID = this._resolver.getModuleID(this._virtualMocks, from, moduleName, {\n      conditions: this.cjsConditions\n    });\n\n    this._explicitShouldMock.set(moduleID, true);\n\n    this._mockFactories.set(moduleID, mockFactory);\n  }\n\n  setModuleMock(from, moduleName, mockFactory, options) {\n    if (options !== null && options !== void 0 && options.virtual) {\n      const mockPath = this._resolver.getModulePath(from, moduleName);\n\n      this._virtualModuleMocks.set(mockPath, true);\n    }\n\n    const moduleID = this._resolver.getModuleID(this._virtualModuleMocks, from, moduleName, {\n      conditions: this.esmConditions\n    });\n\n    this._explicitShouldMockModule.set(moduleID, true);\n\n    this._moduleMockFactories.set(moduleID, mockFactory);\n  }\n\n  restoreAllMocks() {\n    this._moduleMocker.restoreAllMocks();\n  }\n\n  resetAllMocks() {\n    this._moduleMocker.resetAllMocks();\n  }\n\n  clearAllMocks() {\n    this._moduleMocker.clearAllMocks();\n  }\n\n  teardown() {\n    this.restoreAllMocks();\n    this.resetAllMocks();\n    this.resetModules();\n\n    this._internalModuleRegistry.clear();\n\n    this._mainModule = null;\n\n    this._mockFactories.clear();\n\n    this._moduleMockFactories.clear();\n\n    this._mockMetaDataCache.clear();\n\n    this._shouldMockModuleCache.clear();\n\n    this._shouldUnmockTransitiveDependenciesCache.clear();\n\n    this._explicitShouldMock.clear();\n\n    this._explicitShouldMockModule.clear();\n\n    this._transitiveShouldMock.clear();\n\n    this._virtualMocks.clear();\n\n    this._virtualModuleMocks.clear();\n\n    this._cacheFS.clear();\n\n    this._unmockList = undefined;\n\n    this._sourceMapRegistry.clear();\n\n    this._fileTransforms.clear();\n\n    this._fileTransformsMutex.clear();\n\n    this.jestObjectCaches.clear();\n    this._v8CoverageResult = [];\n    this._v8CoverageInstrumenter = undefined;\n    this._moduleImplementation = undefined;\n    this.isTornDown = true;\n  }\n\n  _resolveModule(from, to, options) {\n    return to ? this._resolver.resolveModule(from, to, options) : from;\n  }\n\n  _requireResolve(from, moduleName) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (moduleName == null) {\n      throw new Error('The first argument to require.resolve must be a string. Received null or undefined.');\n    }\n\n    if (path().isAbsolute(moduleName)) {\n      const module = this._resolver.resolveModuleFromDirIfExists(moduleName, moduleName, {\n        conditions: this.cjsConditions,\n        paths: []\n      });\n\n      if (module) {\n        return module;\n      }\n    } else {\n      const {\n        paths\n      } = options;\n\n      if (paths) {\n        for (const p of paths) {\n          const absolutePath = path().resolve(from, '..', p);\n\n          const module = this._resolver.resolveModuleFromDirIfExists(absolutePath, moduleName, // required to also resolve files without leading './' directly in the path\n          {\n            conditions: this.cjsConditions,\n            paths: [absolutePath]\n          });\n\n          if (module) {\n            return module;\n          }\n        }\n\n        throw new (_jestResolve().default.ModuleNotFoundError)(`Cannot resolve module '${moduleName}' from paths ['${paths.join(\"', '\")}'] from ${from}`);\n      }\n    }\n\n    try {\n      return this._resolveModule(from, moduleName, {\n        conditions: this.cjsConditions\n      });\n    } catch (err) {\n      const module = this._resolver.getMockModule(from, moduleName);\n\n      if (module) {\n        return module;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  _requireResolvePaths(from, moduleName) {\n    if (moduleName == null) {\n      throw new Error('The first argument to require.resolve.paths must be a string. Received null or undefined.');\n    }\n\n    if (!moduleName.length) {\n      throw new Error('The first argument to require.resolve.paths must not be the empty string.');\n    }\n\n    if (moduleName[0] === '.') {\n      return [path().resolve(from, '..')];\n    }\n\n    if (this._resolver.isCoreModule(moduleName)) {\n      return null;\n    }\n\n    return this._resolver.getModulePaths(path().resolve(from, '..'));\n  }\n\n  _execModule(localModule, options, moduleRegistry, from) {\n    if (this.isTornDown) {\n      this._logFormattedReferenceError('You are trying to `import` a file after the Jest environment has been torn down.');\n\n      process.exitCode = 1;\n      return;\n    } // If the environment was disposed, prevent this module from being executed.\n\n\n    if (!this._environment.global) {\n      return;\n    }\n\n    const module = localModule;\n    const filename = module.filename;\n    const lastExecutingModulePath = this._currentlyExecutingModulePath;\n    this._currentlyExecutingModulePath = filename;\n    const origCurrExecutingManualMock = this._isCurrentlyExecutingManualMock;\n    this._isCurrentlyExecutingManualMock = filename;\n    module.children = [];\n    Object.defineProperty(module, 'parent', {\n      enumerable: true,\n\n      get() {\n        const key = from || '';\n        return moduleRegistry.get(key) || null;\n      }\n\n    });\n    module.paths = this._resolver.getModulePaths(module.path);\n    Object.defineProperty(module, 'require', {\n      value: this._createRequireImplementation(module, options)\n    });\n    const transformedCode = this.transformFile(filename, options);\n    let compiledFunction = null;\n    const script = this.createScriptFromCode(transformedCode, filename);\n    let runScript = null;\n\n    const vmContext = this._environment.getVmContext();\n\n    if (vmContext) {\n      runScript = script.runInContext(vmContext, {\n        filename\n      });\n    }\n\n    if (runScript !== null) {\n      compiledFunction = runScript[EVAL_RESULT_VARIABLE];\n    }\n\n    if (compiledFunction === null) {\n      this._logFormattedReferenceError('You are trying to `import` a file after the Jest environment has been torn down.');\n\n      process.exitCode = 1;\n      return;\n    }\n\n    const jestObject = this._createJestObjectFor(filename);\n\n    this.jestObjectCaches.set(filename, jestObject);\n    const lastArgs = [this._config.injectGlobals ? jestObject : undefined, // jest object\n    ...this._config.extraGlobals.map(globalVariable => {\n      if (this._environment.global[globalVariable]) {\n        return this._environment.global[globalVariable];\n      }\n\n      throw new Error(`You have requested '${globalVariable}' as a global variable, but it was not present. Please check your config or your global environment.`);\n    })];\n\n    if (!this._mainModule && filename === this._testPath) {\n      this._mainModule = module;\n    }\n\n    Object.defineProperty(module, 'main', {\n      enumerable: true,\n      value: this._mainModule\n    });\n\n    try {\n      compiledFunction.call(module.exports, module, // module object\n      module.exports, // module exports\n      module.require, // require implementation\n      module.path, // __dirname\n      module.filename, // __filename\n      // @ts-expect-error\n      ...lastArgs.filter(notEmpty));\n    } catch (error) {\n      this.handleExecutionError(error, module);\n    }\n\n    this._isCurrentlyExecutingManualMock = origCurrExecutingManualMock;\n    this._currentlyExecutingModulePath = lastExecutingModulePath;\n  }\n\n  transformFile(filename, options) {\n    const source = this.readFile(filename);\n\n    if (options !== null && options !== void 0 && options.isInternalModule) {\n      return source;\n    }\n\n    let transformedFile = this._fileTransforms.get(filename);\n\n    if (transformedFile) {\n      return transformedFile.code;\n    }\n\n    transformedFile = this._scriptTransformer.transform(filename, this._getFullTransformationOptions(options), source);\n\n    this._fileTransforms.set(filename, { ...transformedFile,\n      wrapperLength: this.constructModuleWrapperStart().length\n    });\n\n    if (transformedFile.sourceMapPath) {\n      this._sourceMapRegistry.set(filename, transformedFile.sourceMapPath);\n    }\n\n    return transformedFile.code;\n  }\n\n  async transformFileAsync(filename, options) {\n    const source = this.readFile(filename);\n\n    if (options !== null && options !== void 0 && options.isInternalModule) {\n      return source;\n    }\n\n    let transformedFile = this._fileTransforms.get(filename);\n\n    if (transformedFile) {\n      return transformedFile.code;\n    }\n\n    transformedFile = await this._scriptTransformer.transformAsync(filename, this._getFullTransformationOptions(options), source);\n\n    this._fileTransforms.set(filename, { ...transformedFile,\n      wrapperLength: 0\n    });\n\n    if (transformedFile.sourceMapPath) {\n      this._sourceMapRegistry.set(filename, transformedFile.sourceMapPath);\n    }\n\n    return transformedFile.code;\n  }\n\n  createScriptFromCode(scriptSource, filename) {\n    try {\n      const scriptFilename = this._resolver.isCoreModule(filename) ? `jest-nodejs-core-${filename}` : filename;\n      return new (_vm().Script)(this.wrapCodeInModuleWrapper(scriptSource), {\n        displayErrors: true,\n        filename: scriptFilename,\n        // @ts-expect-error: Experimental ESM API\n        importModuleDynamically: async specifier => {\n          var _this$_environment$ge, _this$_environment2;\n\n          invariant(runtimeSupportsVmModules, 'You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules');\n          const context = (_this$_environment$ge = (_this$_environment2 = this._environment).getVmContext) === null || _this$_environment$ge === void 0 ? void 0 : _this$_environment$ge.call(_this$_environment2);\n          invariant(context, 'Test environment has been torn down');\n          const module = await this.resolveModule(specifier, scriptFilename, context);\n          return this.linkAndEvaluateModule(module);\n        }\n      });\n    } catch (e) {\n      throw (0, _transform().handlePotentialSyntaxError)(e);\n    }\n  }\n\n  _requireCoreModule(moduleName, supportPrefix) {\n    const moduleWithoutNodePrefix = supportPrefix && moduleName.startsWith('node:') ? moduleName.slice('node:'.length) : moduleName;\n\n    if (moduleWithoutNodePrefix === 'process') {\n      return this._environment.global.process;\n    }\n\n    if (moduleWithoutNodePrefix === 'module') {\n      return this._getMockedNativeModule();\n    }\n\n    return require(moduleWithoutNodePrefix);\n  }\n\n  _importCoreModule(moduleName, context) {\n    const required = this._requireCoreModule(moduleName, supportsNodeColonModulePrefixInImport);\n\n    const module = new (_vm().SyntheticModule)(['default', ...Object.keys(required)], function () {\n      // @ts-expect-error: TS doesn't know what `this` is\n      this.setExport('default', required);\n      Object.entries(required).forEach(_ref3 => {\n        let [key, value] = _ref3;\n        // @ts-expect-error: TS doesn't know what `this` is\n        this.setExport(key, value);\n      });\n    }, // should identifier be `node://${moduleName}`?\n    {\n      context,\n      identifier: moduleName\n    });\n    return evaluateSyntheticModule(module);\n  }\n\n  _getMockedNativeModule() {\n    if (this._moduleImplementation) {\n      return this._moduleImplementation;\n    }\n\n    const createRequire = modulePath => {\n      const filename = typeof modulePath === 'string' ? modulePath.startsWith('file:///') ? (0, _url().fileURLToPath)(new (_url().URL)(modulePath)) : modulePath : (0, _url().fileURLToPath)(modulePath);\n\n      if (!path().isAbsolute(filename)) {\n        const error = new TypeError(`The argument 'filename' must be a file URL object, file URL string, or absolute path string. Received '${filename}'`); // @ts-expect-error\n\n        error.code = 'ERR_INVALID_ARG_TYPE';\n        throw error;\n      }\n\n      return this._createRequireImplementation({\n        children: [],\n        exports: {},\n        filename,\n        id: filename,\n        loaded: false,\n        path: path().dirname(filename)\n      });\n    }; // should we implement the class ourselves?\n\n\n    class Module extends nativeModule().Module {}\n\n    Object.entries(nativeModule().Module).forEach(_ref4 => {\n      let [key, value] = _ref4;\n      // @ts-expect-error\n      Module[key] = value;\n    });\n    Module.Module = Module;\n\n    if ('createRequire' in nativeModule()) {\n      Module.createRequire = createRequire;\n    }\n\n    if ('createRequireFromPath' in nativeModule()) {\n      Module.createRequireFromPath = function createRequireFromPath(filename) {\n        if (typeof filename !== 'string') {\n          const error = new TypeError(`The argument 'filename' must be string. Received '${filename}'.${filename instanceof _url().URL ? ' Use createRequire for URL filename.' : ''}`); // @ts-expect-error\n\n          error.code = 'ERR_INVALID_ARG_TYPE';\n          throw error;\n        }\n\n        return createRequire(filename);\n      };\n    }\n\n    if ('syncBuiltinESMExports' in nativeModule()) {\n      // cast since TS seems very confused about whether it exists or not\n      Module.syncBuiltinESMExports = function syncBuiltinESMExports() {};\n    }\n\n    this._moduleImplementation = Module;\n    return Module;\n  }\n\n  _generateMock(from, moduleName) {\n    const modulePath = this._resolver.resolveStubModuleName(from, moduleName) || this._resolveModule(from, moduleName, {\n      conditions: this.cjsConditions\n    });\n\n    if (!this._mockMetaDataCache.has(modulePath)) {\n      // This allows us to handle circular dependencies while generating an\n      // automock\n      this._mockMetaDataCache.set(modulePath, this._moduleMocker.getMetadata({}) || {}); // In order to avoid it being possible for automocking to potentially\n      // cause side-effects within the module environment, we need to execute\n      // the module in isolation. This could cause issues if the module being\n      // mocked has calls into side-effectful APIs on another module.\n\n\n      const origMockRegistry = this._mockRegistry;\n      const origModuleRegistry = this._moduleRegistry;\n      this._mockRegistry = new Map();\n      this._moduleRegistry = new Map();\n      const moduleExports = this.requireModule(from, moduleName); // Restore the \"real\" module/mock registries\n\n      this._mockRegistry = origMockRegistry;\n      this._moduleRegistry = origModuleRegistry;\n\n      const mockMetadata = this._moduleMocker.getMetadata(moduleExports);\n\n      if (mockMetadata == null) {\n        throw new Error(`Failed to get mock metadata: ${modulePath}\\n\\n` + 'See: https://jestjs.io/docs/manual-mocks#content');\n      }\n\n      this._mockMetaDataCache.set(modulePath, mockMetadata);\n    }\n\n    return this._moduleMocker.generateFromMetadata( // added above if missing\n    this._mockMetaDataCache.get(modulePath));\n  }\n\n  _shouldMock(from, moduleName, explicitShouldMock, options) {\n    const moduleID = this._resolver.getModuleID(this._virtualMocks, from, moduleName, options);\n\n    const key = from + path().delimiter + moduleID;\n\n    if (explicitShouldMock.has(moduleID)) {\n      // guaranteed by `has` above\n      return explicitShouldMock.get(moduleID);\n    }\n\n    if (!this._shouldAutoMock || this._resolver.isCoreModule(moduleName) || this._shouldUnmockTransitiveDependenciesCache.get(key)) {\n      return false;\n    }\n\n    if (this._shouldMockModuleCache.has(moduleID)) {\n      // guaranteed by `has` above\n      return this._shouldMockModuleCache.get(moduleID);\n    }\n\n    let modulePath;\n\n    try {\n      modulePath = this._resolveModule(from, moduleName, options);\n    } catch (e) {\n      const manualMock = this._resolver.getMockModule(from, moduleName);\n\n      if (manualMock) {\n        this._shouldMockModuleCache.set(moduleID, true);\n\n        return true;\n      }\n\n      throw e;\n    }\n\n    if (this._unmockList && this._unmockList.test(modulePath)) {\n      this._shouldMockModuleCache.set(moduleID, false);\n\n      return false;\n    } // transitive unmocking for package managers that store flat packages (npm3)\n\n\n    const currentModuleID = this._resolver.getModuleID(this._virtualMocks, from, undefined, options);\n\n    if (this._transitiveShouldMock.get(currentModuleID) === false || from.includes(NODE_MODULES) && modulePath.includes(NODE_MODULES) && (this._unmockList && this._unmockList.test(from) || explicitShouldMock.get(currentModuleID) === false)) {\n      this._transitiveShouldMock.set(moduleID, false);\n\n      this._shouldUnmockTransitiveDependenciesCache.set(key, true);\n\n      return false;\n    }\n\n    this._shouldMockModuleCache.set(moduleID, true);\n\n    return true;\n  }\n\n  _createRequireImplementation(from, options) {\n    const resolve = (moduleName, resolveOptions) => {\n      const resolved = this._requireResolve(from.filename, moduleName, resolveOptions);\n\n      if (resolveOptions !== null && resolveOptions !== void 0 && resolveOptions[JEST_RESOLVE_OUTSIDE_VM_OPTION] && options !== null && options !== void 0 && options.isInternalModule) {\n        return (0, _helpers.createOutsideJestVmPath)(resolved);\n      }\n\n      return resolved;\n    };\n\n    resolve.paths = moduleName => this._requireResolvePaths(from.filename, moduleName);\n\n    const moduleRequire = options !== null && options !== void 0 && options.isInternalModule ? moduleName => this.requireInternalModule(from.filename, moduleName) : this.requireModuleOrMock.bind(this, from.filename);\n    moduleRequire.extensions = Object.create(null);\n    moduleRequire.resolve = resolve;\n\n    moduleRequire.cache = (() => {\n      // TODO: consider warning somehow that this does nothing. We should support deletions, anyways\n      const notPermittedMethod = () => true;\n\n      return new Proxy(Object.create(null), {\n        defineProperty: notPermittedMethod,\n        deleteProperty: notPermittedMethod,\n        get: (_target, key) => typeof key === 'string' ? this._moduleRegistry.get(key) : undefined,\n\n        getOwnPropertyDescriptor() {\n          return {\n            configurable: true,\n            enumerable: true\n          };\n        },\n\n        has: (_target, key) => typeof key === 'string' && this._moduleRegistry.has(key),\n        ownKeys: () => Array.from(this._moduleRegistry.keys()),\n        set: notPermittedMethod\n      });\n    })();\n\n    Object.defineProperty(moduleRequire, 'main', {\n      enumerable: true,\n      value: this._mainModule\n    });\n    return moduleRequire;\n  }\n\n  _createJestObjectFor(from) {\n    var _this = this;\n\n    var _this$_moduleMocker$m, _this$_moduleMocker$m2;\n\n    const disableAutomock = () => {\n      this._shouldAutoMock = false;\n      return jestObject;\n    };\n\n    const enableAutomock = () => {\n      this._shouldAutoMock = true;\n      return jestObject;\n    };\n\n    const unmock = moduleName => {\n      const moduleID = this._resolver.getModuleID(this._virtualMocks, from, moduleName, {\n        conditions: this.cjsConditions\n      });\n\n      this._explicitShouldMock.set(moduleID, false);\n\n      return jestObject;\n    };\n\n    const deepUnmock = moduleName => {\n      const moduleID = this._resolver.getModuleID(this._virtualMocks, from, moduleName, {\n        conditions: this.cjsConditions\n      });\n\n      this._explicitShouldMock.set(moduleID, false);\n\n      this._transitiveShouldMock.set(moduleID, false);\n\n      return jestObject;\n    };\n\n    const mock = (moduleName, mockFactory, options) => {\n      if (mockFactory !== undefined) {\n        return setMockFactory(moduleName, mockFactory, options);\n      }\n\n      const moduleID = this._resolver.getModuleID(this._virtualMocks, from, moduleName, {\n        conditions: this.cjsConditions\n      });\n\n      this._explicitShouldMock.set(moduleID, true);\n\n      return jestObject;\n    };\n\n    const setMockFactory = (moduleName, mockFactory, options) => {\n      this.setMock(from, moduleName, mockFactory, options);\n      return jestObject;\n    };\n\n    const mockModule = (moduleName, mockFactory, options) => {\n      if (typeof mockFactory !== 'function') {\n        throw new Error('`unstable_mockModule` must be passed a mock factory');\n      }\n\n      this.setModuleMock(from, moduleName, mockFactory, options);\n      return jestObject;\n    };\n\n    const clearAllMocks = () => {\n      this.clearAllMocks();\n      return jestObject;\n    };\n\n    const resetAllMocks = () => {\n      this.resetAllMocks();\n      return jestObject;\n    };\n\n    const restoreAllMocks = () => {\n      this.restoreAllMocks();\n      return jestObject;\n    };\n\n    const _getFakeTimers = () => {\n      if (this.isTornDown || !(this._environment.fakeTimers || this._environment.fakeTimersModern)) {\n        this._logFormattedReferenceError('You are trying to access a property or method of the Jest environment after it has been torn down.');\n\n        process.exitCode = 1;\n      }\n\n      return this._fakeTimersImplementation;\n    };\n\n    const useFakeTimers = function () {\n      let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'modern';\n\n      if (type === 'legacy') {\n        _this._fakeTimersImplementation = _this._environment.fakeTimers;\n      } else {\n        _this._fakeTimersImplementation = _this._environment.fakeTimersModern;\n      }\n\n      _this._fakeTimersImplementation.useFakeTimers();\n\n      return jestObject;\n    };\n\n    const useRealTimers = () => {\n      _getFakeTimers().useRealTimers();\n\n      return jestObject;\n    };\n\n    const resetModules = () => {\n      this.resetModules();\n      return jestObject;\n    };\n\n    const isolateModules = fn => {\n      this.isolateModules(fn);\n      return jestObject;\n    };\n\n    const fn = this._moduleMocker.fn.bind(this._moduleMocker);\n\n    const spyOn = this._moduleMocker.spyOn.bind(this._moduleMocker);\n\n    const mocked = (_this$_moduleMocker$m = (_this$_moduleMocker$m2 = this._moduleMocker.mocked) === null || _this$_moduleMocker$m2 === void 0 ? void 0 : _this$_moduleMocker$m2.bind(this._moduleMocker)) !== null && _this$_moduleMocker$m !== void 0 ? _this$_moduleMocker$m : () => {\n      throw new Error('Your test environment does not support `mocked`, please update it.');\n    };\n\n    const setTimeout = timeout => {\n      if (this._environment.global.jasmine) {\n        this._environment.global.jasmine._DEFAULT_TIMEOUT_INTERVAL = timeout;\n      } else {\n        // @ts-expect-error: https://github.com/Microsoft/TypeScript/issues/24587\n        this._environment.global[testTimeoutSymbol] = timeout;\n      }\n\n      return jestObject;\n    };\n\n    const retryTimes = numTestRetries => {\n      // @ts-expect-error: https://github.com/Microsoft/TypeScript/issues/24587\n      this._environment.global[retryTimesSymbol] = numTestRetries;\n      return jestObject;\n    };\n\n    const jestObject = {\n      advanceTimersByTime: msToRun => _getFakeTimers().advanceTimersByTime(msToRun),\n      advanceTimersToNextTimer: steps => _getFakeTimers().advanceTimersToNextTimer(steps),\n      autoMockOff: disableAutomock,\n      autoMockOn: enableAutomock,\n      clearAllMocks,\n      clearAllTimers: () => _getFakeTimers().clearAllTimers(),\n      createMockFromModule: moduleName => this._generateMock(from, moduleName),\n      deepUnmock,\n      disableAutomock,\n      doMock: mock,\n      dontMock: unmock,\n      enableAutomock,\n      fn,\n      genMockFromModule: moduleName => this._generateMock(from, moduleName),\n      getRealSystemTime: () => {\n        const fakeTimers = _getFakeTimers();\n\n        if (fakeTimers === this._environment.fakeTimersModern) {\n          return fakeTimers.getRealSystemTime();\n        } else {\n          throw new TypeError('getRealSystemTime is not available when not using modern timers');\n        }\n      },\n      getTimerCount: () => _getFakeTimers().getTimerCount(),\n      isMockFunction: this._moduleMocker.isMockFunction,\n      isolateModules,\n      mock,\n      mocked,\n      requireActual: this.requireActual.bind(this, from),\n      requireMock: this.requireMock.bind(this, from),\n      resetAllMocks,\n      resetModules,\n      restoreAllMocks,\n      retryTimes,\n      runAllImmediates: () => {\n        const fakeTimers = _getFakeTimers();\n\n        if (fakeTimers === this._environment.fakeTimers) {\n          fakeTimers.runAllImmediates();\n        } else {\n          throw new TypeError('runAllImmediates is not available when using modern timers');\n        }\n      },\n      runAllTicks: () => _getFakeTimers().runAllTicks(),\n      runAllTimers: () => _getFakeTimers().runAllTimers(),\n      runOnlyPendingTimers: () => _getFakeTimers().runOnlyPendingTimers(),\n      setMock: (moduleName, mock) => setMockFactory(moduleName, () => mock),\n      setSystemTime: now => {\n        const fakeTimers = _getFakeTimers();\n\n        if (fakeTimers === this._environment.fakeTimersModern) {\n          fakeTimers.setSystemTime(now);\n        } else {\n          throw new TypeError('setSystemTime is not available when not using modern timers');\n        }\n      },\n      setTimeout,\n      spyOn,\n      unmock,\n      unstable_mockModule: mockModule,\n      useFakeTimers,\n      useRealTimers\n    };\n    return jestObject;\n  }\n\n  _logFormattedReferenceError(errorMessage) {\n    const testPath = this._testPath ? ` From ${(0, _slash().default)(path().relative(this._config.rootDir, this._testPath))}.` : '';\n    const originalStack = new ReferenceError(`${errorMessage}${testPath}`).stack.split('\\n') // Remove this file from the stack (jest-message-utils will keep one line)\n    .filter(line => line.indexOf(__filename) === -1).join('\\n');\n    const {\n      message,\n      stack\n    } = (0, _jestMessageUtil().separateMessageFromStack)(originalStack);\n    console.error(`\\n${message}\\n` + (0, _jestMessageUtil().formatStackTrace)(stack, this._config, {\n      noStackTrace: false\n    }));\n  }\n\n  wrapCodeInModuleWrapper(content) {\n    return this.constructModuleWrapperStart() + content + '\\n}});';\n  }\n\n  constructModuleWrapperStart() {\n    const args = this.constructInjectedModuleParameters();\n    return '({\"' + EVAL_RESULT_VARIABLE + `\":function(${args.join(',')}){`;\n  }\n\n  constructInjectedModuleParameters() {\n    return ['module', 'exports', 'require', '__dirname', '__filename', this._config.injectGlobals ? 'jest' : undefined, ...this._config.extraGlobals].filter(notEmpty);\n  }\n\n  handleExecutionError(e, module) {\n    const moduleNotFoundError = _jestResolve().default.tryCastModuleNotFoundError(e);\n\n    if (moduleNotFoundError) {\n      if (!moduleNotFoundError.requireStack) {\n        moduleNotFoundError.requireStack = [module.filename || module.id];\n\n        for (let cursor = module.parent; cursor; cursor = cursor.parent) {\n          moduleNotFoundError.requireStack.push(cursor.filename || cursor.id);\n        }\n\n        moduleNotFoundError.buildMessage(this._config.rootDir);\n      }\n\n      throw moduleNotFoundError;\n    }\n\n    throw e;\n  }\n\n  getGlobalsForCjs(from) {\n    const jest = this.jestObjectCaches.get(from);\n    invariant(jest, 'There should always be a Jest object already');\n    return { ...this.getGlobalsFromEnvironment(),\n      jest\n    };\n  }\n\n  getGlobalsForEsm(from, context) {\n    let jest = this.jestObjectCaches.get(from);\n\n    if (!jest) {\n      jest = this._createJestObjectFor(from);\n      this.jestObjectCaches.set(from, jest);\n    }\n\n    const globals = { ...this.getGlobalsFromEnvironment(),\n      jest\n    };\n    const module = new (_vm().SyntheticModule)(Object.keys(globals), function () {\n      Object.entries(globals).forEach(_ref5 => {\n        let [key, value] = _ref5;\n        // @ts-expect-error: TS doesn't know what `this` is\n        this.setExport(key, value);\n      });\n    }, {\n      context,\n      identifier: '@jest/globals'\n    });\n    return evaluateSyntheticModule(module);\n  }\n\n  getGlobalsFromEnvironment() {\n    if (this.jestGlobals) {\n      return { ...this.jestGlobals\n      };\n    }\n\n    return {\n      afterAll: this._environment.global.afterAll,\n      afterEach: this._environment.global.afterEach,\n      beforeAll: this._environment.global.beforeAll,\n      beforeEach: this._environment.global.beforeEach,\n      describe: this._environment.global.describe,\n      expect: this._environment.global.expect,\n      fdescribe: this._environment.global.fdescribe,\n      fit: this._environment.global.fit,\n      it: this._environment.global.it,\n      test: this._environment.global.test,\n      xdescribe: this._environment.global.xdescribe,\n      xit: this._environment.global.xit,\n      xtest: this._environment.global.xtest\n    };\n  }\n\n  readFile(filename) {\n    let source = this._cacheFS.get(filename);\n\n    if (!source) {\n      source = fs().readFileSync(filename, 'utf8');\n\n      this._cacheFS.set(filename, source);\n    }\n\n    return source;\n  }\n\n  setGlobalsForRuntime(globals) {\n    this.jestGlobals = globals;\n  }\n\n}\n\nexports.default = Runtime;\n\n_defineProperty(Runtime, 'shouldInstrument', _transform().shouldInstrument);\n\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nfunction notEmpty(value) {\n  return value !== null && value !== undefined;\n}\n\nasync function evaluateSyntheticModule(module) {\n  await module.link(() => {\n    throw new Error('This should never happen');\n  });\n  await module.evaluate();\n  return module;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","nativeModule","data","_interopRequireWildcard","require","path","_url","_vm","_cjsModuleLexer","_collectV8Coverage","_execa","_interopRequireDefault","fs","_slash","_stripBom","_transform","_jestHasteMap","_jestMessageUtil","_jestRegexUtil","_jestResolve","_jestSnapshot","_jestUtil","_helpers","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","esmIsAvailable","SourceTextModule","defaultTransformOptions","isInternalModule","supportsDynamicImport","supportsExportNamespaceFrom","supportsStaticESM","supportsTopLevelAwait","INTERNAL_MODULE_REQUIRE_OUTSIDE_OPTIMIZED_MODULES","Set","JEST_RESOLVE_OUTSIDE_VM_OPTION","Symbol","for","testTimeoutSymbol","retryTimesSymbol","NODE_MODULES","sep","getModuleNameMapper","config","Array","isArray","moduleNameMapper","length","map","regex","moduleName","RegExp","unmockRegExpCache","EVAL_RESULT_VARIABLE","runtimeSupportsVmModules","SyntheticModule","supportsNodeColonModulePrefixInRequire","supportsNodeColonModulePrefixInImport","stdout","sync","reject","Runtime","constructor","environment","resolver","transformer","cacheFS","coverageOptions","testPath","_this$_environment$ex","_this$_environment$ex2","_this$_environment","_cacheFS","_config","_coverageOptions","_currentlyExecutingModulePath","_environment","_explicitShouldMock","Map","_explicitShouldMockModule","_internalModuleRegistry","_isCurrentlyExecutingManualMock","_mainModule","_mockFactories","_mockRegistry","_moduleMockRegistry","_moduleMockFactories","invariant","moduleMocker","_moduleMocker","_isolatedModuleRegistry","_isolatedMockRegistry","_moduleRegistry","_esmoduleRegistry","_cjsNamedExports","_esmModuleLinkingMap","_testPath","_resolver","_scriptTransformer","_shouldAutoMock","automock","_sourceMapRegistry","_fileTransforms","_fileTransformsMutex","_virtualMocks","_virtualModuleMocks","jestObjectCaches","_mockMetaDataCache","_shouldMockModuleCache","_shouldUnmockTransitiveDependenciesCache","_transitiveShouldMock","_fakeTimersImplementation","timers","fakeTimers","fakeTimersModern","_unmockList","unmockedModulePathPatterns","join","envExportConditions","exportConditions","esmConditions","from","cjsConditions","setupFiles","forEach","filePath","includes","moduleID","getModuleID","undefined","conditions","unstable_shouldLoadAsEsm","resetModules","createContext","options","createDirectory","cacheDirectory","instance","createHasteMap","console","maxWorkers","resetCache","watch","watchman","hasteMap","build","hasteFS","moduleMap","createResolver","ignorePatternParts","modulePathIgnorePatterns","watchPathIgnorePatterns","startsWith","rootDir","filter","Boolean","ignorePattern","create","computeSha1","haste","dependencyExtractor","enableSymlinks","extensions","EXTENSION","concat","moduleFileExtensions","forceNodeFilesystemAPI","hasteImplModulePath","hasteMapModulePath","mocksPattern","escapePathForRegex","name","platforms","retainAllFiles","roots","throwOnModuleCollision","useWatchman","defaultPlatform","extension","hasCoreModules","moduleDirectories","modulePaths","runCLI","Error","getCLIOptions","extensionsToTreatAsEsm","loadEsmModule","modulePath","query","cacheKey","getVmContext","context","transformResolve","transformReject","Promise","resolve","isCoreModule","core","_importCoreModule","transformedCode","transformFileAsync","module","identifier","importModuleDynamically","specifier","referencingModule","resolveModule","linkAndEvaluateModule","initializeImportMeta","meta","url","pathToFileURL","href","error","referencingIdentifier","isTornDown","_logFormattedReferenceError","process","exitCode","fromCache","globals","getGlobalsForEsm","fileURLToPath","split","_shouldMock","importMock","resolved","_resolveModule","loadCjsAsEsm","status","link","evaluate","unstable_importModule","cjs","requireModuleOrMock","parsedExports","getExportsOfCjs","cjsExports","exportName","setExport","evaluateSyntheticModule","invokedFactory","keys","entries","_this$_fileTransforms","_this$_fileTransforms2","cachedNamedExports","code","readFile","reexports","parse","namedExports","reexport","add","requireModule","isRequireActual","_options$isInternalMo","isInternal","moduleResource","getModule","manualMock","getMockModule","_requireCoreModule","moduleRegistry","localModule","children","filename","id","loaded","dirname","_loadModule","delete","requireInternalModule","to","_nativeModule$createR","createRequire","createRequireFromPath","outsideJestVmPath","decodePossibleOutsideJestVmPath","requireActual","requireMock","_this$_isolatedMockRe","mockRegistry","manualMockOrStub","isManualMock","resolveStubModuleName","moduleDir","moduleFileName","basename","potentialManualMock","existsSync","_generateMock","extname","text","transformedFile","transformJson","_getFullTransformationOptions","global","JSON","fromPath","_execModule","getGlobalsForCjs","e","moduleNotFound","tryCastModuleNotFoundError","siblingWithSimilarExtensionFound","hint","findSiblingsWithFileExtension","buildMessage","isolateModules","fn","_this$_isolatedModule","_this$_isolatedMockRe2","clear","_this$_isolatedModule2","_this$_isolatedMockRe3","envGlobal","globalMock","_isMockFunction","mockClear","clearAllTimers","collectV8Coverage","_v8CoverageInstrumenter","CoverageInstrumenter","startInstrumenting","stopCollectingV8Coverage","_v8CoverageResult","stopInstrumenting","getAllCoverageInfoCopy","deepCyclicCopy","__coverage__","getAllV8CoverageInfoCopy","res","shouldInstrument","result","codeTransformResult","getSourceMaps","setMock","mockFactory","virtual","mockPath","getModulePath","setModuleMock","restoreAllMocks","resetAllMocks","clearAllMocks","teardown","_moduleImplementation","_requireResolve","isAbsolute","resolveModuleFromDirIfExists","paths","p","absolutePath","ModuleNotFoundError","err","_requireResolvePaths","getModulePaths","lastExecutingModulePath","origCurrExecutingManualMock","_createRequireImplementation","transformFile","compiledFunction","script","createScriptFromCode","runScript","vmContext","runInContext","jestObject","_createJestObjectFor","lastArgs","injectGlobals","extraGlobals","globalVariable","notEmpty","handleExecutionError","source","transform","wrapperLength","constructModuleWrapperStart","sourceMapPath","transformAsync","scriptSource","scriptFilename","Script","wrapCodeInModuleWrapper","displayErrors","_this$_environment$ge","_this$_environment2","handlePotentialSyntaxError","supportPrefix","moduleWithoutNodePrefix","slice","_getMockedNativeModule","required","URL","TypeError","Module","syncBuiltinESMExports","getMetadata","origMockRegistry","origModuleRegistry","moduleExports","mockMetadata","generateFromMetadata","explicitShouldMock","delimiter","test","currentModuleID","resolveOptions","createOutsideJestVmPath","moduleRequire","bind","notPermittedMethod","Proxy","deleteProperty","_target","ownKeys","_this$_moduleMocker$m","_this$_moduleMocker$m2","disableAutomock","enableAutomock","unmock","deepUnmock","mock","setMockFactory","mockModule","_getFakeTimers","useFakeTimers","type","useRealTimers","spyOn","mocked","setTimeout","timeout","jasmine","_DEFAULT_TIMEOUT_INTERVAL","retryTimes","numTestRetries","advanceTimersByTime","msToRun","advanceTimersToNextTimer","steps","autoMockOff","autoMockOn","createMockFromModule","doMock","dontMock","genMockFromModule","getRealSystemTime","getTimerCount","isMockFunction","runAllImmediates","runAllTicks","runAllTimers","runOnlyPendingTimers","setSystemTime","now","unstable_mockModule","errorMessage","relative","originalStack","ReferenceError","stack","line","indexOf","__filename","message","separateMessageFromStack","formatStackTrace","noStackTrace","content","args","constructInjectedModuleParameters","moduleNotFoundError","requireStack","cursor","parent","push","jest","getGlobalsFromEnvironment","jestGlobals","afterAll","afterEach","beforeAll","beforeEach","describe","expect","fdescribe","fit","it","xdescribe","xit","xtest","readFileSync","setGlobalsForRuntime","condition"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-runtime/build/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction nativeModule() {\n  const data = _interopRequireWildcard(require('module'));\n\n  nativeModule = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _url() {\n  const data = require('url');\n\n  _url = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _vm() {\n  const data = require('vm');\n\n  _vm = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _cjsModuleLexer() {\n  const data = require('cjs-module-lexer');\n\n  _cjsModuleLexer = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _collectV8Coverage() {\n  const data = require('collect-v8-coverage');\n\n  _collectV8Coverage = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _execa() {\n  const data = _interopRequireDefault(require('execa'));\n\n  _execa = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fs() {\n  const data = _interopRequireWildcard(require('graceful-fs'));\n\n  fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _stripBom() {\n  const data = _interopRequireDefault(require('strip-bom'));\n\n  _stripBom = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _transform() {\n  const data = require('@jest/transform');\n\n  _transform = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestHasteMap() {\n  const data = _interopRequireDefault(require('jest-haste-map'));\n\n  _jestHasteMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRegexUtil() {\n  const data = require('jest-regex-util');\n\n  _jestRegexUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestResolve() {\n  const data = _interopRequireDefault(require('jest-resolve'));\n\n  _jestResolve = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestSnapshot() {\n  const data = _interopRequireDefault(require('jest-snapshot'));\n\n  _jestSnapshot = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _helpers = require('./helpers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst esmIsAvailable = typeof _vm().SourceTextModule === 'function';\nconst defaultTransformOptions = {\n  isInternalModule: false,\n  supportsDynamicImport: esmIsAvailable,\n  supportsExportNamespaceFrom: false,\n  supportsStaticESM: false,\n  supportsTopLevelAwait: false\n};\n// These are modules that we know\n// * are safe to require from the outside (not stateful, not prone to errors passing in instances from different realms), and\n// * take sufficiently long to require to warrant an optimization.\n// When required from the outside, they use the worker's require cache and are thus\n// only loaded once per worker, not once per test file.\n// Use /benchmarks/test-file-overhead to measure the impact.\n// Note that this only applies when they are required in an internal context;\n// users who require one of these modules in their tests will still get the module from inside the VM.\n// Prefer listing a module here only if it is impractical to use the jest-resolve-outside-vm-option where it is required,\n// e.g. because there are many require sites spread across the dependency graph.\nconst INTERNAL_MODULE_REQUIRE_OUTSIDE_OPTIMIZED_MODULES = new Set(['chalk']);\nconst JEST_RESOLVE_OUTSIDE_VM_OPTION = Symbol.for(\n  'jest-resolve-outside-vm-option'\n);\nconst testTimeoutSymbol = Symbol.for('TEST_TIMEOUT_SYMBOL');\nconst retryTimesSymbol = Symbol.for('RETRY_TIMES');\nconst NODE_MODULES = path().sep + 'node_modules' + path().sep;\n\nconst getModuleNameMapper = config => {\n  if (\n    Array.isArray(config.moduleNameMapper) &&\n    config.moduleNameMapper.length\n  ) {\n    return config.moduleNameMapper.map(([regex, moduleName]) => ({\n      moduleName,\n      regex: new RegExp(regex)\n    }));\n  }\n\n  return null;\n};\n\nconst unmockRegExpCache = new WeakMap();\nconst EVAL_RESULT_VARIABLE = 'Object.<anonymous>';\nconst runtimeSupportsVmModules = typeof _vm().SyntheticModule === 'function';\n\nconst supportsTopLevelAwait =\n  runtimeSupportsVmModules &&\n  (() => {\n    try {\n      // eslint-disable-next-line no-new\n      new (_vm().SourceTextModule)('await Promise.resolve()');\n      return true;\n    } catch {\n      return false;\n    }\n  })();\n\nconst supportsNodeColonModulePrefixInRequire = (() => {\n  try {\n    require('node:fs');\n\n    return true;\n  } catch {\n    return false;\n  }\n})();\n\nconst supportsNodeColonModulePrefixInImport = (() => {\n  const {stdout} = _execa().default.sync(\n    'node',\n    [\n      '--eval',\n      'import(\"node:fs\").then(() => console.log(true), () => console.log(false));'\n    ],\n    {\n      reject: false\n    }\n  );\n\n  return stdout === 'true';\n})();\n\nclass Runtime {\n  constructor(\n    config,\n    environment,\n    resolver,\n    transformer,\n    cacheFS,\n    coverageOptions,\n    testPath\n  ) {\n    var _this$_environment$ex, _this$_environment$ex2, _this$_environment;\n\n    _defineProperty(this, '_cacheFS', void 0);\n\n    _defineProperty(this, '_config', void 0);\n\n    _defineProperty(this, '_coverageOptions', void 0);\n\n    _defineProperty(this, '_currentlyExecutingModulePath', void 0);\n\n    _defineProperty(this, '_environment', void 0);\n\n    _defineProperty(this, '_explicitShouldMock', void 0);\n\n    _defineProperty(this, '_explicitShouldMockModule', void 0);\n\n    _defineProperty(this, '_fakeTimersImplementation', void 0);\n\n    _defineProperty(this, '_internalModuleRegistry', void 0);\n\n    _defineProperty(this, '_isCurrentlyExecutingManualMock', void 0);\n\n    _defineProperty(this, '_mainModule', void 0);\n\n    _defineProperty(this, '_mockFactories', void 0);\n\n    _defineProperty(this, '_mockMetaDataCache', void 0);\n\n    _defineProperty(this, '_mockRegistry', void 0);\n\n    _defineProperty(this, '_isolatedMockRegistry', void 0);\n\n    _defineProperty(this, '_moduleMockRegistry', void 0);\n\n    _defineProperty(this, '_moduleMockFactories', void 0);\n\n    _defineProperty(this, '_moduleMocker', void 0);\n\n    _defineProperty(this, '_isolatedModuleRegistry', void 0);\n\n    _defineProperty(this, '_moduleRegistry', void 0);\n\n    _defineProperty(this, '_esmoduleRegistry', void 0);\n\n    _defineProperty(this, '_cjsNamedExports', void 0);\n\n    _defineProperty(this, '_esmModuleLinkingMap', void 0);\n\n    _defineProperty(this, '_testPath', void 0);\n\n    _defineProperty(this, '_resolver', void 0);\n\n    _defineProperty(this, '_shouldAutoMock', void 0);\n\n    _defineProperty(this, '_shouldMockModuleCache', void 0);\n\n    _defineProperty(this, '_shouldUnmockTransitiveDependenciesCache', void 0);\n\n    _defineProperty(this, '_sourceMapRegistry', void 0);\n\n    _defineProperty(this, '_scriptTransformer', void 0);\n\n    _defineProperty(this, '_fileTransforms', void 0);\n\n    _defineProperty(this, '_fileTransformsMutex', void 0);\n\n    _defineProperty(this, '_v8CoverageInstrumenter', void 0);\n\n    _defineProperty(this, '_v8CoverageResult', void 0);\n\n    _defineProperty(this, '_transitiveShouldMock', void 0);\n\n    _defineProperty(this, '_unmockList', void 0);\n\n    _defineProperty(this, '_virtualMocks', void 0);\n\n    _defineProperty(this, '_virtualModuleMocks', void 0);\n\n    _defineProperty(this, '_moduleImplementation', void 0);\n\n    _defineProperty(this, 'jestObjectCaches', void 0);\n\n    _defineProperty(this, 'jestGlobals', void 0);\n\n    _defineProperty(this, 'esmConditions', void 0);\n\n    _defineProperty(this, 'cjsConditions', void 0);\n\n    _defineProperty(this, 'isTornDown', false);\n\n    this._cacheFS = cacheFS;\n    this._config = config;\n    this._coverageOptions = coverageOptions;\n    this._currentlyExecutingModulePath = '';\n    this._environment = environment;\n    this._explicitShouldMock = new Map();\n    this._explicitShouldMockModule = new Map();\n    this._internalModuleRegistry = new Map();\n    this._isCurrentlyExecutingManualMock = null;\n    this._mainModule = null;\n    this._mockFactories = new Map();\n    this._mockRegistry = new Map();\n    this._moduleMockRegistry = new Map();\n    this._moduleMockFactories = new Map();\n    invariant(\n      this._environment.moduleMocker,\n      '`moduleMocker` must be set on an environment when created'\n    );\n    this._moduleMocker = this._environment.moduleMocker;\n    this._isolatedModuleRegistry = null;\n    this._isolatedMockRegistry = null;\n    this._moduleRegistry = new Map();\n    this._esmoduleRegistry = new Map();\n    this._cjsNamedExports = new Map();\n    this._esmModuleLinkingMap = new WeakMap();\n    this._testPath = testPath;\n    this._resolver = resolver;\n    this._scriptTransformer = transformer;\n    this._shouldAutoMock = config.automock;\n    this._sourceMapRegistry = new Map();\n    this._fileTransforms = new Map();\n    this._fileTransformsMutex = new Map();\n    this._virtualMocks = new Map();\n    this._virtualModuleMocks = new Map();\n    this.jestObjectCaches = new Map();\n    this._mockMetaDataCache = new Map();\n    this._shouldMockModuleCache = new Map();\n    this._shouldUnmockTransitiveDependenciesCache = new Map();\n    this._transitiveShouldMock = new Map();\n    this._fakeTimersImplementation =\n      config.timers === 'legacy'\n        ? this._environment.fakeTimers\n        : this._environment.fakeTimersModern;\n    this._unmockList = unmockRegExpCache.get(config);\n\n    if (!this._unmockList && config.unmockedModulePathPatterns) {\n      this._unmockList = new RegExp(\n        config.unmockedModulePathPatterns.join('|')\n      );\n      unmockRegExpCache.set(config, this._unmockList);\n    }\n\n    const envExportConditions =\n      (_this$_environment$ex =\n        (_this$_environment$ex2 = (_this$_environment = this._environment)\n          .exportConditions) === null || _this$_environment$ex2 === void 0\n          ? void 0\n          : _this$_environment$ex2.call(_this$_environment)) !== null &&\n      _this$_environment$ex !== void 0\n        ? _this$_environment$ex\n        : [];\n    this.esmConditions = Array.from(\n      new Set(['import', 'default', ...envExportConditions])\n    );\n    this.cjsConditions = Array.from(\n      new Set(['require', 'default', ...envExportConditions])\n    );\n\n    if (config.automock) {\n      config.setupFiles.forEach(filePath => {\n        if (filePath.includes(NODE_MODULES)) {\n          const moduleID = this._resolver.getModuleID(\n            this._virtualMocks,\n            filePath,\n            undefined, // shouldn't really matter, but in theory this will make sure the caching is correct\n            {\n              conditions: this.unstable_shouldLoadAsEsm(filePath)\n                ? this.esmConditions\n                : this.cjsConditions\n            }\n          );\n\n          this._transitiveShouldMock.set(moduleID, false);\n        }\n      });\n    }\n\n    this.resetModules();\n  }\n\n  static async createContext(config, options) {\n    (0, _jestUtil().createDirectory)(config.cacheDirectory);\n    const instance = Runtime.createHasteMap(config, {\n      console: options.console,\n      maxWorkers: options.maxWorkers,\n      resetCache: !config.cache,\n      watch: options.watch,\n      watchman: options.watchman\n    });\n    const hasteMap = await instance.build();\n    return {\n      config,\n      hasteFS: hasteMap.hasteFS,\n      moduleMap: hasteMap.moduleMap,\n      resolver: Runtime.createResolver(config, hasteMap.moduleMap)\n    };\n  }\n\n  static createHasteMap(config, options) {\n    const ignorePatternParts = [\n      ...config.modulePathIgnorePatterns,\n      ...(options && options.watch ? config.watchPathIgnorePatterns : []),\n      config.cacheDirectory.startsWith(config.rootDir + path().sep) &&\n        config.cacheDirectory\n    ].filter(Boolean);\n    const ignorePattern =\n      ignorePatternParts.length > 0\n        ? new RegExp(ignorePatternParts.join('|'))\n        : undefined;\n    return _jestHasteMap().default.create({\n      cacheDirectory: config.cacheDirectory,\n      computeSha1: config.haste.computeSha1,\n      console:\n        options === null || options === void 0 ? void 0 : options.console,\n      dependencyExtractor: config.dependencyExtractor,\n      enableSymlinks: config.haste.enableSymlinks,\n      extensions: [_jestSnapshot().default.EXTENSION].concat(\n        config.moduleFileExtensions\n      ),\n      forceNodeFilesystemAPI: config.haste.forceNodeFilesystemAPI,\n      hasteImplModulePath: config.haste.hasteImplModulePath,\n      hasteMapModulePath: config.haste.hasteMapModulePath,\n      ignorePattern,\n      maxWorkers:\n        (options === null || options === void 0\n          ? void 0\n          : options.maxWorkers) || 1,\n      mocksPattern: (0, _jestRegexUtil().escapePathForRegex)(\n        path().sep + '__mocks__' + path().sep\n      ),\n      name: config.name,\n      platforms: config.haste.platforms || ['ios', 'android'],\n      resetCache:\n        options === null || options === void 0 ? void 0 : options.resetCache,\n      retainAllFiles: false,\n      rootDir: config.rootDir,\n      roots: config.roots,\n      throwOnModuleCollision: config.haste.throwOnModuleCollision,\n      useWatchman:\n        options === null || options === void 0 ? void 0 : options.watchman,\n      watch: options === null || options === void 0 ? void 0 : options.watch\n    });\n  }\n\n  static createResolver(config, moduleMap) {\n    return new (_jestResolve().default)(moduleMap, {\n      defaultPlatform: config.haste.defaultPlatform,\n      extensions: config.moduleFileExtensions.map(extension => '.' + extension),\n      hasCoreModules: true,\n      moduleDirectories: config.moduleDirectories,\n      moduleNameMapper: getModuleNameMapper(config),\n      modulePaths: config.modulePaths,\n      platforms: config.haste.platforms,\n      resolver: config.resolver,\n      rootDir: config.rootDir\n    });\n  }\n\n  static async runCLI() {\n    throw new Error('The jest-runtime CLI has been moved into jest-repl');\n  }\n\n  static getCLIOptions() {\n    throw new Error('The jest-runtime CLI has been moved into jest-repl');\n  } // unstable as it should be replaced by https://github.com/nodejs/modules/issues/393, and we don't want people to use it\n\n  unstable_shouldLoadAsEsm(path) {\n    return _jestResolve().default.unstable_shouldLoadAsEsm(\n      path,\n      this._config.extensionsToTreatAsEsm\n    );\n  } // not async _now_, but transform will be\n\n  async loadEsmModule(modulePath, query = '') {\n    const cacheKey = modulePath + query;\n\n    if (this._fileTransformsMutex.has(cacheKey)) {\n      await this._fileTransformsMutex.get(cacheKey);\n    }\n\n    if (!this._esmoduleRegistry.has(cacheKey)) {\n      invariant(\n        typeof this._environment.getVmContext === 'function',\n        'ES Modules are only supported if your test environment has the `getVmContext` function'\n      );\n\n      const context = this._environment.getVmContext();\n\n      invariant(context, 'Test environment has been torn down');\n      let transformResolve;\n      let transformReject;\n\n      this._fileTransformsMutex.set(\n        cacheKey,\n        new Promise((resolve, reject) => {\n          transformResolve = resolve;\n          transformReject = reject;\n        })\n      );\n\n      invariant(\n        transformResolve && transformReject,\n        'Promise initialization should be sync - please report this bug to Jest!'\n      );\n\n      if (this._resolver.isCoreModule(modulePath)) {\n        const core = this._importCoreModule(modulePath, context);\n\n        this._esmoduleRegistry.set(cacheKey, core);\n\n        transformResolve();\n        return core;\n      }\n\n      const transformedCode = await this.transformFileAsync(modulePath, {\n        isInternalModule: false,\n        supportsDynamicImport: true,\n        supportsExportNamespaceFrom: true,\n        supportsStaticESM: true,\n        supportsTopLevelAwait\n      });\n\n      try {\n        const module = new (_vm().SourceTextModule)(transformedCode, {\n          context,\n          identifier: modulePath,\n          importModuleDynamically: async (specifier, referencingModule) => {\n            invariant(\n              runtimeSupportsVmModules,\n              'You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules'\n            );\n            const module = await this.resolveModule(\n              specifier,\n              referencingModule.identifier,\n              referencingModule.context\n            );\n            return this.linkAndEvaluateModule(module);\n          },\n\n          initializeImportMeta(meta) {\n            meta.url = (0, _url().pathToFileURL)(modulePath).href;\n          }\n        });\n        invariant(\n          !this._esmoduleRegistry.has(cacheKey),\n          `Module cache already has entry ${cacheKey}. This is a bug in Jest, please report it!`\n        );\n\n        this._esmoduleRegistry.set(cacheKey, module);\n\n        transformResolve();\n      } catch (error) {\n        transformReject(error);\n        throw error;\n      }\n    }\n\n    const module = this._esmoduleRegistry.get(cacheKey);\n\n    invariant(\n      module,\n      'Module cache does not contain module. This is a bug in Jest, please open up an issue'\n    );\n    return module;\n  }\n\n  resolveModule(specifier, referencingIdentifier, context) {\n    if (this.isTornDown) {\n      this._logFormattedReferenceError(\n        'You are trying to `import` a file after the Jest environment has been torn down.'\n      );\n\n      process.exitCode = 1;\n      return;\n    }\n\n    if (specifier === '@jest/globals') {\n      const fromCache = this._esmoduleRegistry.get('@jest/globals');\n\n      if (fromCache) {\n        return fromCache;\n      }\n\n      const globals = this.getGlobalsForEsm(referencingIdentifier, context);\n\n      this._esmoduleRegistry.set('@jest/globals', globals);\n\n      return globals;\n    }\n\n    if (specifier.startsWith('file://')) {\n      specifier = (0, _url().fileURLToPath)(specifier);\n    }\n\n    const [path, query] = specifier.split('?');\n\n    if (\n      this._shouldMock(\n        referencingIdentifier,\n        path,\n        this._explicitShouldMockModule,\n        {\n          conditions: this.esmConditions\n        }\n      )\n    ) {\n      return this.importMock(referencingIdentifier, path, context);\n    }\n\n    const resolved = this._resolveModule(referencingIdentifier, path, {\n      conditions: this.esmConditions\n    });\n\n    if (\n      this._resolver.isCoreModule(resolved) ||\n      this.unstable_shouldLoadAsEsm(resolved)\n    ) {\n      return this.loadEsmModule(resolved, query);\n    }\n\n    return this.loadCjsAsEsm(referencingIdentifier, resolved, context);\n  }\n\n  async linkAndEvaluateModule(module) {\n    if (this.isTornDown) {\n      this._logFormattedReferenceError(\n        'You are trying to `import` a file after the Jest environment has been torn down.'\n      );\n\n      process.exitCode = 1;\n      return;\n    }\n\n    if (module.status === 'unlinked') {\n      // since we might attempt to link the same module in parallel, stick the promise in a weak map so every call to\n      // this method can await it\n      this._esmModuleLinkingMap.set(\n        module,\n        module.link((specifier, referencingModule) =>\n          this.resolveModule(\n            specifier,\n            referencingModule.identifier,\n            referencingModule.context\n          )\n        )\n      );\n    }\n\n    await this._esmModuleLinkingMap.get(module);\n\n    if (module.status === 'linked') {\n      await module.evaluate();\n    }\n\n    return module;\n  }\n\n  async unstable_importModule(from, moduleName) {\n    invariant(\n      runtimeSupportsVmModules,\n      'You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules'\n    );\n    const [path, query] = (\n      moduleName !== null && moduleName !== void 0 ? moduleName : ''\n    ).split('?');\n\n    const modulePath = this._resolveModule(from, path, {\n      conditions: this.esmConditions\n    });\n\n    const module = await this.loadEsmModule(modulePath, query);\n    return this.linkAndEvaluateModule(module);\n  }\n\n  loadCjsAsEsm(from, modulePath, context) {\n    // CJS loaded via `import` should share cache with other CJS: https://github.com/nodejs/modules/issues/503\n    const cjs = this.requireModuleOrMock(from, modulePath);\n    const parsedExports = this.getExportsOfCjs(modulePath);\n    const cjsExports = [...parsedExports].filter(exportName => {\n      // we don't wanna respect any exports _named_ default as a named export\n      if (exportName === 'default') {\n        return false;\n      }\n\n      return Object.hasOwnProperty.call(cjs, exportName);\n    });\n    const module = new (_vm().SyntheticModule)(\n      [...cjsExports, 'default'],\n      function () {\n        cjsExports.forEach(exportName => {\n          // @ts-expect-error\n          this.setExport(exportName, cjs[exportName]);\n        }); // @ts-expect-error: TS doesn't know what `this` is\n\n        this.setExport('default', cjs);\n      },\n      {\n        context,\n        identifier: modulePath\n      }\n    );\n    return evaluateSyntheticModule(module);\n  }\n\n  async importMock(from, moduleName, context) {\n    const moduleID = this._resolver.getModuleID(\n      this._virtualModuleMocks,\n      from,\n      moduleName,\n      {\n        conditions: this.esmConditions\n      }\n    );\n\n    if (this._moduleMockRegistry.has(moduleID)) {\n      return this._moduleMockRegistry.get(moduleID);\n    }\n\n    if (this._moduleMockFactories.has(moduleID)) {\n      const invokedFactory = await this._moduleMockFactories.get(\n        moduleID // has check above makes this ok\n      )();\n      const module = new (_vm().SyntheticModule)(\n        Object.keys(invokedFactory),\n        function () {\n          Object.entries(invokedFactory).forEach(([key, value]) => {\n            // @ts-expect-error: TS doesn't know what `this` is\n            this.setExport(key, value);\n          });\n        },\n        {\n          context,\n          identifier: moduleName\n        }\n      );\n\n      this._moduleMockRegistry.set(moduleID, module);\n\n      return evaluateSyntheticModule(module);\n    }\n\n    throw new Error('Attempting to import a mock without a factory');\n  }\n\n  getExportsOfCjs(modulePath) {\n    var _this$_fileTransforms, _this$_fileTransforms2;\n\n    const cachedNamedExports = this._cjsNamedExports.get(modulePath);\n\n    if (cachedNamedExports) {\n      return cachedNamedExports;\n    }\n\n    const transformedCode =\n      (_this$_fileTransforms =\n        (_this$_fileTransforms2 = this._fileTransforms.get(modulePath)) ===\n          null || _this$_fileTransforms2 === void 0\n          ? void 0\n          : _this$_fileTransforms2.code) !== null &&\n      _this$_fileTransforms !== void 0\n        ? _this$_fileTransforms\n        : this.readFile(modulePath);\n    const {exports, reexports} = (0, _cjsModuleLexer().parse)(transformedCode);\n    const namedExports = new Set(exports);\n    reexports.forEach(reexport => {\n      const resolved = this._resolveModule(modulePath, reexport, {\n        conditions: this.esmConditions\n      });\n\n      const exports = this.getExportsOfCjs(resolved);\n      exports.forEach(namedExports.add, namedExports);\n    });\n\n    this._cjsNamedExports.set(modulePath, namedExports);\n\n    return namedExports;\n  }\n\n  requireModule(from, moduleName, options, isRequireActual = false) {\n    var _options$isInternalMo;\n\n    const isInternal =\n      (_options$isInternalMo =\n        options === null || options === void 0\n          ? void 0\n          : options.isInternalModule) !== null &&\n      _options$isInternalMo !== void 0\n        ? _options$isInternalMo\n        : false;\n\n    const moduleID = this._resolver.getModuleID(\n      this._virtualMocks,\n      from,\n      moduleName,\n      isInternal\n        ? undefined\n        : {\n            conditions: this.cjsConditions\n          }\n    );\n\n    let modulePath; // Some old tests rely on this mocking behavior. Ideally we'll change this\n    // to be more explicit.\n\n    const moduleResource = moduleName && this._resolver.getModule(moduleName);\n\n    const manualMock =\n      moduleName && this._resolver.getMockModule(from, moduleName);\n\n    if (\n      !(options !== null && options !== void 0 && options.isInternalModule) &&\n      !isRequireActual &&\n      !moduleResource &&\n      manualMock &&\n      manualMock !== this._isCurrentlyExecutingManualMock &&\n      this._explicitShouldMock.get(moduleID) !== false\n    ) {\n      modulePath = manualMock;\n    }\n\n    if (moduleName && this._resolver.isCoreModule(moduleName)) {\n      return this._requireCoreModule(\n        moduleName,\n        supportsNodeColonModulePrefixInRequire\n      );\n    }\n\n    if (!modulePath) {\n      modulePath = this._resolveModule(\n        from,\n        moduleName,\n        isInternal\n          ? undefined\n          : {\n              conditions: this.cjsConditions\n            }\n      );\n    }\n\n    if (this.unstable_shouldLoadAsEsm(modulePath)) {\n      // Node includes more info in the message\n      const error = new Error(\n        `Must use import to load ES Module: ${modulePath}`\n      ); // @ts-expect-error: `code` is not defined\n\n      error.code = 'ERR_REQUIRE_ESM';\n      throw error;\n    }\n\n    let moduleRegistry;\n\n    if (isInternal) {\n      moduleRegistry = this._internalModuleRegistry;\n    } else if (this._isolatedModuleRegistry) {\n      moduleRegistry = this._isolatedModuleRegistry;\n    } else {\n      moduleRegistry = this._moduleRegistry;\n    }\n\n    const module = moduleRegistry.get(modulePath);\n\n    if (module) {\n      return module.exports;\n    } // We must register the pre-allocated module object first so that any\n    // circular dependencies that may arise while evaluating the module can\n    // be satisfied.\n\n    const localModule = {\n      children: [],\n      exports: {},\n      filename: modulePath,\n      id: modulePath,\n      loaded: false,\n      path: path().dirname(modulePath)\n    };\n    moduleRegistry.set(modulePath, localModule);\n\n    try {\n      this._loadModule(\n        localModule,\n        from,\n        moduleName,\n        modulePath,\n        options,\n        moduleRegistry\n      );\n    } catch (error) {\n      moduleRegistry.delete(modulePath);\n      throw error;\n    }\n\n    return localModule.exports;\n  }\n\n  requireInternalModule(from, to) {\n    if (to) {\n      var _nativeModule$createR;\n\n      const require = (\n        (_nativeModule$createR = nativeModule().createRequire) !== null &&\n          _nativeModule$createR !== void 0\n          ? _nativeModule$createR\n          : nativeModule().createRequireFromPath\n      )(from);\n\n      if (INTERNAL_MODULE_REQUIRE_OUTSIDE_OPTIMIZED_MODULES.has(to)) {\n        return require(to);\n      }\n\n      const outsideJestVmPath = (0, _helpers.decodePossibleOutsideJestVmPath)(\n        to\n      );\n\n      if (outsideJestVmPath) {\n        return require(outsideJestVmPath);\n      }\n    }\n\n    return this.requireModule(from, to, {\n      isInternalModule: true,\n      supportsDynamicImport: esmIsAvailable,\n      supportsExportNamespaceFrom: false,\n      supportsStaticESM: false,\n      supportsTopLevelAwait: false\n    });\n  }\n\n  requireActual(from, moduleName) {\n    return this.requireModule(from, moduleName, undefined, true);\n  }\n\n  requireMock(from, moduleName) {\n    var _this$_isolatedMockRe;\n\n    const moduleID = this._resolver.getModuleID(\n      this._virtualMocks,\n      from,\n      moduleName,\n      {\n        conditions: this.cjsConditions\n      }\n    );\n\n    if (\n      (_this$_isolatedMockRe = this._isolatedMockRegistry) !== null &&\n      _this$_isolatedMockRe !== void 0 &&\n      _this$_isolatedMockRe.has(moduleID)\n    ) {\n      return this._isolatedMockRegistry.get(moduleID);\n    } else if (this._mockRegistry.has(moduleID)) {\n      return this._mockRegistry.get(moduleID);\n    }\n\n    const mockRegistry = this._isolatedMockRegistry || this._mockRegistry;\n\n    if (this._mockFactories.has(moduleID)) {\n      // has check above makes this ok\n      const module = this._mockFactories.get(moduleID)();\n\n      mockRegistry.set(moduleID, module);\n      return module;\n    }\n\n    const manualMockOrStub = this._resolver.getMockModule(from, moduleName);\n\n    let modulePath =\n      this._resolver.getMockModule(from, moduleName) ||\n      this._resolveModule(from, moduleName, {\n        conditions: this.cjsConditions\n      });\n\n    let isManualMock =\n      manualMockOrStub &&\n      !this._resolver.resolveStubModuleName(from, moduleName);\n\n    if (!isManualMock) {\n      // If the actual module file has a __mocks__ dir sitting immediately next\n      // to it, look to see if there is a manual mock for this file.\n      //\n      // subDir1/my_module.js\n      // subDir1/__mocks__/my_module.js\n      // subDir2/my_module.js\n      // subDir2/__mocks__/my_module.js\n      //\n      // Where some other module does a relative require into each of the\n      // respective subDir{1,2} directories and expects a manual mock\n      // corresponding to that particular my_module.js file.\n      const moduleDir = path().dirname(modulePath);\n      const moduleFileName = path().basename(modulePath);\n      const potentialManualMock = path().join(\n        moduleDir,\n        '__mocks__',\n        moduleFileName\n      );\n\n      if (fs().existsSync(potentialManualMock)) {\n        isManualMock = true;\n        modulePath = potentialManualMock;\n      }\n    }\n\n    if (isManualMock) {\n      const localModule = {\n        children: [],\n        exports: {},\n        filename: modulePath,\n        id: modulePath,\n        loaded: false,\n        path: path().dirname(modulePath)\n      };\n\n      this._loadModule(\n        localModule,\n        from,\n        moduleName,\n        modulePath,\n        undefined,\n        mockRegistry\n      );\n\n      mockRegistry.set(moduleID, localModule.exports);\n    } else {\n      // Look for a real module to generate an automock from\n      mockRegistry.set(moduleID, this._generateMock(from, moduleName));\n    }\n\n    return mockRegistry.get(moduleID);\n  }\n\n  _loadModule(\n    localModule,\n    from,\n    moduleName,\n    modulePath,\n    options,\n    moduleRegistry\n  ) {\n    if (path().extname(modulePath) === '.json') {\n      const text = (0, _stripBom().default)(this.readFile(modulePath));\n\n      const transformedFile = this._scriptTransformer.transformJson(\n        modulePath,\n        this._getFullTransformationOptions(options),\n        text\n      );\n\n      localModule.exports =\n        this._environment.global.JSON.parse(transformedFile);\n    } else if (path().extname(modulePath) === '.node') {\n      localModule.exports = require(modulePath);\n    } else {\n      // Only include the fromPath if a moduleName is given. Else treat as root.\n      const fromPath = moduleName ? from : null;\n\n      this._execModule(localModule, options, moduleRegistry, fromPath);\n    }\n\n    localModule.loaded = true;\n  }\n\n  _getFullTransformationOptions(options = defaultTransformOptions) {\n    return {...options, ...this._coverageOptions};\n  }\n\n  requireModuleOrMock(from, moduleName) {\n    // this module is unmockable\n    if (moduleName === '@jest/globals') {\n      // @ts-expect-error: we don't care that it's not assignable to T\n      return this.getGlobalsForCjs(from);\n    }\n\n    try {\n      if (\n        this._shouldMock(from, moduleName, this._explicitShouldMock, {\n          conditions: this.cjsConditions\n        })\n      ) {\n        return this.requireMock(from, moduleName);\n      } else {\n        return this.requireModule(from, moduleName);\n      }\n    } catch (e) {\n      const moduleNotFound =\n        _jestResolve().default.tryCastModuleNotFoundError(e);\n\n      if (moduleNotFound) {\n        if (\n          moduleNotFound.siblingWithSimilarExtensionFound === null ||\n          moduleNotFound.siblingWithSimilarExtensionFound === undefined\n        ) {\n          moduleNotFound.hint = (0, _helpers.findSiblingsWithFileExtension)(\n            this._config.moduleFileExtensions,\n            from,\n            moduleNotFound.moduleName || moduleName\n          );\n          moduleNotFound.siblingWithSimilarExtensionFound = Boolean(\n            moduleNotFound.hint\n          );\n        }\n\n        moduleNotFound.buildMessage(this._config.rootDir);\n        throw moduleNotFound;\n      }\n\n      throw e;\n    }\n  }\n\n  isolateModules(fn) {\n    if (this._isolatedModuleRegistry || this._isolatedMockRegistry) {\n      throw new Error(\n        'isolateModules cannot be nested inside another isolateModules.'\n      );\n    }\n\n    this._isolatedModuleRegistry = new Map();\n    this._isolatedMockRegistry = new Map();\n\n    try {\n      fn();\n    } finally {\n      var _this$_isolatedModule, _this$_isolatedMockRe2;\n\n      // might be cleared within the callback\n      (_this$_isolatedModule = this._isolatedModuleRegistry) === null ||\n      _this$_isolatedModule === void 0\n        ? void 0\n        : _this$_isolatedModule.clear();\n      (_this$_isolatedMockRe2 = this._isolatedMockRegistry) === null ||\n      _this$_isolatedMockRe2 === void 0\n        ? void 0\n        : _this$_isolatedMockRe2.clear();\n      this._isolatedModuleRegistry = null;\n      this._isolatedMockRegistry = null;\n    }\n  }\n\n  resetModules() {\n    var _this$_isolatedModule2, _this$_isolatedMockRe3;\n\n    (_this$_isolatedModule2 = this._isolatedModuleRegistry) === null ||\n    _this$_isolatedModule2 === void 0\n      ? void 0\n      : _this$_isolatedModule2.clear();\n    (_this$_isolatedMockRe3 = this._isolatedMockRegistry) === null ||\n    _this$_isolatedMockRe3 === void 0\n      ? void 0\n      : _this$_isolatedMockRe3.clear();\n    this._isolatedModuleRegistry = null;\n    this._isolatedMockRegistry = null;\n\n    this._mockRegistry.clear();\n\n    this._moduleRegistry.clear();\n\n    this._esmoduleRegistry.clear();\n\n    this._cjsNamedExports.clear();\n\n    this._moduleMockRegistry.clear();\n\n    if (this._environment) {\n      if (this._environment.global) {\n        const envGlobal = this._environment.global;\n        Object.keys(envGlobal).forEach(key => {\n          const globalMock = envGlobal[key];\n\n          if (\n            ((typeof globalMock === 'object' && globalMock !== null) ||\n              typeof globalMock === 'function') &&\n            globalMock._isMockFunction === true\n          ) {\n            globalMock.mockClear();\n          }\n        });\n      }\n\n      if (this._environment.fakeTimers) {\n        this._environment.fakeTimers.clearAllTimers();\n      }\n    }\n  }\n\n  async collectV8Coverage() {\n    this._v8CoverageInstrumenter =\n      new (_collectV8Coverage().CoverageInstrumenter)();\n    await this._v8CoverageInstrumenter.startInstrumenting();\n  }\n\n  async stopCollectingV8Coverage() {\n    if (!this._v8CoverageInstrumenter) {\n      throw new Error('You need to call `collectV8Coverage` first.');\n    }\n\n    this._v8CoverageResult =\n      await this._v8CoverageInstrumenter.stopInstrumenting();\n  }\n\n  getAllCoverageInfoCopy() {\n    return (0, _jestUtil().deepCyclicCopy)(\n      this._environment.global.__coverage__\n    );\n  }\n\n  getAllV8CoverageInfoCopy() {\n    if (!this._v8CoverageResult) {\n      throw new Error('You need to `stopCollectingV8Coverage` first');\n    }\n\n    return this._v8CoverageResult\n      .filter(res => res.url.startsWith('file://'))\n      .map(res => ({...res, url: (0, _url().fileURLToPath)(res.url)}))\n      .filter(\n        (\n          res // TODO: will this work on windows? It might be better if `shouldInstrument` deals with it anyways\n        ) =>\n          res.url.startsWith(this._config.rootDir) &&\n          this._fileTransforms.has(res.url) &&\n          (0, _transform().shouldInstrument)(\n            res.url,\n            this._coverageOptions,\n            this._config\n          )\n      )\n      .map(result => {\n        const transformedFile = this._fileTransforms.get(result.url);\n\n        return {\n          codeTransformResult: transformedFile,\n          result\n        };\n      });\n  }\n\n  getSourceMaps() {\n    return this._sourceMapRegistry;\n  }\n\n  setMock(from, moduleName, mockFactory, options) {\n    if (options !== null && options !== void 0 && options.virtual) {\n      const mockPath = this._resolver.getModulePath(from, moduleName);\n\n      this._virtualMocks.set(mockPath, true);\n    }\n\n    const moduleID = this._resolver.getModuleID(\n      this._virtualMocks,\n      from,\n      moduleName,\n      {\n        conditions: this.cjsConditions\n      }\n    );\n\n    this._explicitShouldMock.set(moduleID, true);\n\n    this._mockFactories.set(moduleID, mockFactory);\n  }\n\n  setModuleMock(from, moduleName, mockFactory, options) {\n    if (options !== null && options !== void 0 && options.virtual) {\n      const mockPath = this._resolver.getModulePath(from, moduleName);\n\n      this._virtualModuleMocks.set(mockPath, true);\n    }\n\n    const moduleID = this._resolver.getModuleID(\n      this._virtualModuleMocks,\n      from,\n      moduleName,\n      {\n        conditions: this.esmConditions\n      }\n    );\n\n    this._explicitShouldMockModule.set(moduleID, true);\n\n    this._moduleMockFactories.set(moduleID, mockFactory);\n  }\n\n  restoreAllMocks() {\n    this._moduleMocker.restoreAllMocks();\n  }\n\n  resetAllMocks() {\n    this._moduleMocker.resetAllMocks();\n  }\n\n  clearAllMocks() {\n    this._moduleMocker.clearAllMocks();\n  }\n\n  teardown() {\n    this.restoreAllMocks();\n    this.resetAllMocks();\n    this.resetModules();\n\n    this._internalModuleRegistry.clear();\n\n    this._mainModule = null;\n\n    this._mockFactories.clear();\n\n    this._moduleMockFactories.clear();\n\n    this._mockMetaDataCache.clear();\n\n    this._shouldMockModuleCache.clear();\n\n    this._shouldUnmockTransitiveDependenciesCache.clear();\n\n    this._explicitShouldMock.clear();\n\n    this._explicitShouldMockModule.clear();\n\n    this._transitiveShouldMock.clear();\n\n    this._virtualMocks.clear();\n\n    this._virtualModuleMocks.clear();\n\n    this._cacheFS.clear();\n\n    this._unmockList = undefined;\n\n    this._sourceMapRegistry.clear();\n\n    this._fileTransforms.clear();\n\n    this._fileTransformsMutex.clear();\n\n    this.jestObjectCaches.clear();\n    this._v8CoverageResult = [];\n    this._v8CoverageInstrumenter = undefined;\n    this._moduleImplementation = undefined;\n    this.isTornDown = true;\n  }\n\n  _resolveModule(from, to, options) {\n    return to ? this._resolver.resolveModule(from, to, options) : from;\n  }\n\n  _requireResolve(from, moduleName, options = {}) {\n    if (moduleName == null) {\n      throw new Error(\n        'The first argument to require.resolve must be a string. Received null or undefined.'\n      );\n    }\n\n    if (path().isAbsolute(moduleName)) {\n      const module = this._resolver.resolveModuleFromDirIfExists(\n        moduleName,\n        moduleName,\n        {\n          conditions: this.cjsConditions,\n          paths: []\n        }\n      );\n\n      if (module) {\n        return module;\n      }\n    } else {\n      const {paths} = options;\n\n      if (paths) {\n        for (const p of paths) {\n          const absolutePath = path().resolve(from, '..', p);\n\n          const module = this._resolver.resolveModuleFromDirIfExists(\n            absolutePath,\n            moduleName, // required to also resolve files without leading './' directly in the path\n            {\n              conditions: this.cjsConditions,\n              paths: [absolutePath]\n            }\n          );\n\n          if (module) {\n            return module;\n          }\n        }\n\n        throw new (_jestResolve().default.ModuleNotFoundError)(\n          `Cannot resolve module '${moduleName}' from paths ['${paths.join(\n            \"', '\"\n          )}'] from ${from}`\n        );\n      }\n    }\n\n    try {\n      return this._resolveModule(from, moduleName, {\n        conditions: this.cjsConditions\n      });\n    } catch (err) {\n      const module = this._resolver.getMockModule(from, moduleName);\n\n      if (module) {\n        return module;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  _requireResolvePaths(from, moduleName) {\n    if (moduleName == null) {\n      throw new Error(\n        'The first argument to require.resolve.paths must be a string. Received null or undefined.'\n      );\n    }\n\n    if (!moduleName.length) {\n      throw new Error(\n        'The first argument to require.resolve.paths must not be the empty string.'\n      );\n    }\n\n    if (moduleName[0] === '.') {\n      return [path().resolve(from, '..')];\n    }\n\n    if (this._resolver.isCoreModule(moduleName)) {\n      return null;\n    }\n\n    return this._resolver.getModulePaths(path().resolve(from, '..'));\n  }\n\n  _execModule(localModule, options, moduleRegistry, from) {\n    if (this.isTornDown) {\n      this._logFormattedReferenceError(\n        'You are trying to `import` a file after the Jest environment has been torn down.'\n      );\n\n      process.exitCode = 1;\n      return;\n    } // If the environment was disposed, prevent this module from being executed.\n\n    if (!this._environment.global) {\n      return;\n    }\n\n    const module = localModule;\n    const filename = module.filename;\n    const lastExecutingModulePath = this._currentlyExecutingModulePath;\n    this._currentlyExecutingModulePath = filename;\n    const origCurrExecutingManualMock = this._isCurrentlyExecutingManualMock;\n    this._isCurrentlyExecutingManualMock = filename;\n    module.children = [];\n    Object.defineProperty(module, 'parent', {\n      enumerable: true,\n\n      get() {\n        const key = from || '';\n        return moduleRegistry.get(key) || null;\n      }\n    });\n    module.paths = this._resolver.getModulePaths(module.path);\n    Object.defineProperty(module, 'require', {\n      value: this._createRequireImplementation(module, options)\n    });\n    const transformedCode = this.transformFile(filename, options);\n    let compiledFunction = null;\n    const script = this.createScriptFromCode(transformedCode, filename);\n    let runScript = null;\n\n    const vmContext = this._environment.getVmContext();\n\n    if (vmContext) {\n      runScript = script.runInContext(vmContext, {\n        filename\n      });\n    }\n\n    if (runScript !== null) {\n      compiledFunction = runScript[EVAL_RESULT_VARIABLE];\n    }\n\n    if (compiledFunction === null) {\n      this._logFormattedReferenceError(\n        'You are trying to `import` a file after the Jest environment has been torn down.'\n      );\n\n      process.exitCode = 1;\n      return;\n    }\n\n    const jestObject = this._createJestObjectFor(filename);\n\n    this.jestObjectCaches.set(filename, jestObject);\n    const lastArgs = [\n      this._config.injectGlobals ? jestObject : undefined, // jest object\n      ...this._config.extraGlobals.map(globalVariable => {\n        if (this._environment.global[globalVariable]) {\n          return this._environment.global[globalVariable];\n        }\n\n        throw new Error(\n          `You have requested '${globalVariable}' as a global variable, but it was not present. Please check your config or your global environment.`\n        );\n      })\n    ];\n\n    if (!this._mainModule && filename === this._testPath) {\n      this._mainModule = module;\n    }\n\n    Object.defineProperty(module, 'main', {\n      enumerable: true,\n      value: this._mainModule\n    });\n\n    try {\n      compiledFunction.call(\n        module.exports,\n        module, // module object\n        module.exports, // module exports\n        module.require, // require implementation\n        module.path, // __dirname\n        module.filename, // __filename\n        // @ts-expect-error\n        ...lastArgs.filter(notEmpty)\n      );\n    } catch (error) {\n      this.handleExecutionError(error, module);\n    }\n\n    this._isCurrentlyExecutingManualMock = origCurrExecutingManualMock;\n    this._currentlyExecutingModulePath = lastExecutingModulePath;\n  }\n\n  transformFile(filename, options) {\n    const source = this.readFile(filename);\n\n    if (options !== null && options !== void 0 && options.isInternalModule) {\n      return source;\n    }\n\n    let transformedFile = this._fileTransforms.get(filename);\n\n    if (transformedFile) {\n      return transformedFile.code;\n    }\n\n    transformedFile = this._scriptTransformer.transform(\n      filename,\n      this._getFullTransformationOptions(options),\n      source\n    );\n\n    this._fileTransforms.set(filename, {\n      ...transformedFile,\n      wrapperLength: this.constructModuleWrapperStart().length\n    });\n\n    if (transformedFile.sourceMapPath) {\n      this._sourceMapRegistry.set(filename, transformedFile.sourceMapPath);\n    }\n\n    return transformedFile.code;\n  }\n\n  async transformFileAsync(filename, options) {\n    const source = this.readFile(filename);\n\n    if (options !== null && options !== void 0 && options.isInternalModule) {\n      return source;\n    }\n\n    let transformedFile = this._fileTransforms.get(filename);\n\n    if (transformedFile) {\n      return transformedFile.code;\n    }\n\n    transformedFile = await this._scriptTransformer.transformAsync(\n      filename,\n      this._getFullTransformationOptions(options),\n      source\n    );\n\n    this._fileTransforms.set(filename, {...transformedFile, wrapperLength: 0});\n\n    if (transformedFile.sourceMapPath) {\n      this._sourceMapRegistry.set(filename, transformedFile.sourceMapPath);\n    }\n\n    return transformedFile.code;\n  }\n\n  createScriptFromCode(scriptSource, filename) {\n    try {\n      const scriptFilename = this._resolver.isCoreModule(filename)\n        ? `jest-nodejs-core-${filename}`\n        : filename;\n      return new (_vm().Script)(this.wrapCodeInModuleWrapper(scriptSource), {\n        displayErrors: true,\n        filename: scriptFilename,\n        // @ts-expect-error: Experimental ESM API\n        importModuleDynamically: async specifier => {\n          var _this$_environment$ge, _this$_environment2;\n\n          invariant(\n            runtimeSupportsVmModules,\n            'You need to run with a version of node that supports ES Modules in the VM API. See https://jestjs.io/docs/ecmascript-modules'\n          );\n          const context =\n            (_this$_environment$ge = (_this$_environment2 = this._environment)\n              .getVmContext) === null || _this$_environment$ge === void 0\n              ? void 0\n              : _this$_environment$ge.call(_this$_environment2);\n          invariant(context, 'Test environment has been torn down');\n          const module = await this.resolveModule(\n            specifier,\n            scriptFilename,\n            context\n          );\n          return this.linkAndEvaluateModule(module);\n        }\n      });\n    } catch (e) {\n      throw (0, _transform().handlePotentialSyntaxError)(e);\n    }\n  }\n\n  _requireCoreModule(moduleName, supportPrefix) {\n    const moduleWithoutNodePrefix =\n      supportPrefix && moduleName.startsWith('node:')\n        ? moduleName.slice('node:'.length)\n        : moduleName;\n\n    if (moduleWithoutNodePrefix === 'process') {\n      return this._environment.global.process;\n    }\n\n    if (moduleWithoutNodePrefix === 'module') {\n      return this._getMockedNativeModule();\n    }\n\n    return require(moduleWithoutNodePrefix);\n  }\n\n  _importCoreModule(moduleName, context) {\n    const required = this._requireCoreModule(\n      moduleName,\n      supportsNodeColonModulePrefixInImport\n    );\n\n    const module = new (_vm().SyntheticModule)(\n      ['default', ...Object.keys(required)],\n      function () {\n        // @ts-expect-error: TS doesn't know what `this` is\n        this.setExport('default', required);\n        Object.entries(required).forEach(([key, value]) => {\n          // @ts-expect-error: TS doesn't know what `this` is\n          this.setExport(key, value);\n        });\n      }, // should identifier be `node://${moduleName}`?\n      {\n        context,\n        identifier: moduleName\n      }\n    );\n    return evaluateSyntheticModule(module);\n  }\n\n  _getMockedNativeModule() {\n    if (this._moduleImplementation) {\n      return this._moduleImplementation;\n    }\n\n    const createRequire = modulePath => {\n      const filename =\n        typeof modulePath === 'string'\n          ? modulePath.startsWith('file:///')\n            ? (0, _url().fileURLToPath)(new (_url().URL)(modulePath))\n            : modulePath\n          : (0, _url().fileURLToPath)(modulePath);\n\n      if (!path().isAbsolute(filename)) {\n        const error = new TypeError(\n          `The argument 'filename' must be a file URL object, file URL string, or absolute path string. Received '${filename}'`\n        ); // @ts-expect-error\n\n        error.code = 'ERR_INVALID_ARG_TYPE';\n        throw error;\n      }\n\n      return this._createRequireImplementation({\n        children: [],\n        exports: {},\n        filename,\n        id: filename,\n        loaded: false,\n        path: path().dirname(filename)\n      });\n    }; // should we implement the class ourselves?\n\n    class Module extends nativeModule().Module {}\n\n    Object.entries(nativeModule().Module).forEach(([key, value]) => {\n      // @ts-expect-error\n      Module[key] = value;\n    });\n    Module.Module = Module;\n\n    if ('createRequire' in nativeModule()) {\n      Module.createRequire = createRequire;\n    }\n\n    if ('createRequireFromPath' in nativeModule()) {\n      Module.createRequireFromPath = function createRequireFromPath(filename) {\n        if (typeof filename !== 'string') {\n          const error = new TypeError(\n            `The argument 'filename' must be string. Received '${filename}'.${\n              filename instanceof _url().URL\n                ? ' Use createRequire for URL filename.'\n                : ''\n            }`\n          ); // @ts-expect-error\n\n          error.code = 'ERR_INVALID_ARG_TYPE';\n          throw error;\n        }\n\n        return createRequire(filename);\n      };\n    }\n\n    if ('syncBuiltinESMExports' in nativeModule()) {\n      // cast since TS seems very confused about whether it exists or not\n      Module.syncBuiltinESMExports = function syncBuiltinESMExports() {};\n    }\n\n    this._moduleImplementation = Module;\n    return Module;\n  }\n\n  _generateMock(from, moduleName) {\n    const modulePath =\n      this._resolver.resolveStubModuleName(from, moduleName) ||\n      this._resolveModule(from, moduleName, {\n        conditions: this.cjsConditions\n      });\n\n    if (!this._mockMetaDataCache.has(modulePath)) {\n      // This allows us to handle circular dependencies while generating an\n      // automock\n      this._mockMetaDataCache.set(\n        modulePath,\n        this._moduleMocker.getMetadata({}) || {}\n      ); // In order to avoid it being possible for automocking to potentially\n      // cause side-effects within the module environment, we need to execute\n      // the module in isolation. This could cause issues if the module being\n      // mocked has calls into side-effectful APIs on another module.\n\n      const origMockRegistry = this._mockRegistry;\n      const origModuleRegistry = this._moduleRegistry;\n      this._mockRegistry = new Map();\n      this._moduleRegistry = new Map();\n      const moduleExports = this.requireModule(from, moduleName); // Restore the \"real\" module/mock registries\n\n      this._mockRegistry = origMockRegistry;\n      this._moduleRegistry = origModuleRegistry;\n\n      const mockMetadata = this._moduleMocker.getMetadata(moduleExports);\n\n      if (mockMetadata == null) {\n        throw new Error(\n          `Failed to get mock metadata: ${modulePath}\\n\\n` +\n            'See: https://jestjs.io/docs/manual-mocks#content'\n        );\n      }\n\n      this._mockMetaDataCache.set(modulePath, mockMetadata);\n    }\n\n    return this._moduleMocker.generateFromMetadata(\n      // added above if missing\n      this._mockMetaDataCache.get(modulePath)\n    );\n  }\n\n  _shouldMock(from, moduleName, explicitShouldMock, options) {\n    const moduleID = this._resolver.getModuleID(\n      this._virtualMocks,\n      from,\n      moduleName,\n      options\n    );\n\n    const key = from + path().delimiter + moduleID;\n\n    if (explicitShouldMock.has(moduleID)) {\n      // guaranteed by `has` above\n      return explicitShouldMock.get(moduleID);\n    }\n\n    if (\n      !this._shouldAutoMock ||\n      this._resolver.isCoreModule(moduleName) ||\n      this._shouldUnmockTransitiveDependenciesCache.get(key)\n    ) {\n      return false;\n    }\n\n    if (this._shouldMockModuleCache.has(moduleID)) {\n      // guaranteed by `has` above\n      return this._shouldMockModuleCache.get(moduleID);\n    }\n\n    let modulePath;\n\n    try {\n      modulePath = this._resolveModule(from, moduleName, options);\n    } catch (e) {\n      const manualMock = this._resolver.getMockModule(from, moduleName);\n\n      if (manualMock) {\n        this._shouldMockModuleCache.set(moduleID, true);\n\n        return true;\n      }\n\n      throw e;\n    }\n\n    if (this._unmockList && this._unmockList.test(modulePath)) {\n      this._shouldMockModuleCache.set(moduleID, false);\n\n      return false;\n    } // transitive unmocking for package managers that store flat packages (npm3)\n\n    const currentModuleID = this._resolver.getModuleID(\n      this._virtualMocks,\n      from,\n      undefined,\n      options\n    );\n\n    if (\n      this._transitiveShouldMock.get(currentModuleID) === false ||\n      (from.includes(NODE_MODULES) &&\n        modulePath.includes(NODE_MODULES) &&\n        ((this._unmockList && this._unmockList.test(from)) ||\n          explicitShouldMock.get(currentModuleID) === false))\n    ) {\n      this._transitiveShouldMock.set(moduleID, false);\n\n      this._shouldUnmockTransitiveDependenciesCache.set(key, true);\n\n      return false;\n    }\n\n    this._shouldMockModuleCache.set(moduleID, true);\n\n    return true;\n  }\n\n  _createRequireImplementation(from, options) {\n    const resolve = (moduleName, resolveOptions) => {\n      const resolved = this._requireResolve(\n        from.filename,\n        moduleName,\n        resolveOptions\n      );\n\n      if (\n        resolveOptions !== null &&\n        resolveOptions !== void 0 &&\n        resolveOptions[JEST_RESOLVE_OUTSIDE_VM_OPTION] &&\n        options !== null &&\n        options !== void 0 &&\n        options.isInternalModule\n      ) {\n        return (0, _helpers.createOutsideJestVmPath)(resolved);\n      }\n\n      return resolved;\n    };\n\n    resolve.paths = moduleName =>\n      this._requireResolvePaths(from.filename, moduleName);\n\n    const moduleRequire =\n      options !== null && options !== void 0 && options.isInternalModule\n        ? moduleName => this.requireInternalModule(from.filename, moduleName)\n        : this.requireModuleOrMock.bind(this, from.filename);\n    moduleRequire.extensions = Object.create(null);\n    moduleRequire.resolve = resolve;\n\n    moduleRequire.cache = (() => {\n      // TODO: consider warning somehow that this does nothing. We should support deletions, anyways\n      const notPermittedMethod = () => true;\n\n      return new Proxy(Object.create(null), {\n        defineProperty: notPermittedMethod,\n        deleteProperty: notPermittedMethod,\n        get: (_target, key) =>\n          typeof key === 'string' ? this._moduleRegistry.get(key) : undefined,\n\n        getOwnPropertyDescriptor() {\n          return {\n            configurable: true,\n            enumerable: true\n          };\n        },\n\n        has: (_target, key) =>\n          typeof key === 'string' && this._moduleRegistry.has(key),\n        ownKeys: () => Array.from(this._moduleRegistry.keys()),\n        set: notPermittedMethod\n      });\n    })();\n\n    Object.defineProperty(moduleRequire, 'main', {\n      enumerable: true,\n      value: this._mainModule\n    });\n    return moduleRequire;\n  }\n\n  _createJestObjectFor(from) {\n    var _this$_moduleMocker$m, _this$_moduleMocker$m2;\n\n    const disableAutomock = () => {\n      this._shouldAutoMock = false;\n      return jestObject;\n    };\n\n    const enableAutomock = () => {\n      this._shouldAutoMock = true;\n      return jestObject;\n    };\n\n    const unmock = moduleName => {\n      const moduleID = this._resolver.getModuleID(\n        this._virtualMocks,\n        from,\n        moduleName,\n        {\n          conditions: this.cjsConditions\n        }\n      );\n\n      this._explicitShouldMock.set(moduleID, false);\n\n      return jestObject;\n    };\n\n    const deepUnmock = moduleName => {\n      const moduleID = this._resolver.getModuleID(\n        this._virtualMocks,\n        from,\n        moduleName,\n        {\n          conditions: this.cjsConditions\n        }\n      );\n\n      this._explicitShouldMock.set(moduleID, false);\n\n      this._transitiveShouldMock.set(moduleID, false);\n\n      return jestObject;\n    };\n\n    const mock = (moduleName, mockFactory, options) => {\n      if (mockFactory !== undefined) {\n        return setMockFactory(moduleName, mockFactory, options);\n      }\n\n      const moduleID = this._resolver.getModuleID(\n        this._virtualMocks,\n        from,\n        moduleName,\n        {\n          conditions: this.cjsConditions\n        }\n      );\n\n      this._explicitShouldMock.set(moduleID, true);\n\n      return jestObject;\n    };\n\n    const setMockFactory = (moduleName, mockFactory, options) => {\n      this.setMock(from, moduleName, mockFactory, options);\n      return jestObject;\n    };\n\n    const mockModule = (moduleName, mockFactory, options) => {\n      if (typeof mockFactory !== 'function') {\n        throw new Error('`unstable_mockModule` must be passed a mock factory');\n      }\n\n      this.setModuleMock(from, moduleName, mockFactory, options);\n      return jestObject;\n    };\n\n    const clearAllMocks = () => {\n      this.clearAllMocks();\n      return jestObject;\n    };\n\n    const resetAllMocks = () => {\n      this.resetAllMocks();\n      return jestObject;\n    };\n\n    const restoreAllMocks = () => {\n      this.restoreAllMocks();\n      return jestObject;\n    };\n\n    const _getFakeTimers = () => {\n      if (\n        this.isTornDown ||\n        !(this._environment.fakeTimers || this._environment.fakeTimersModern)\n      ) {\n        this._logFormattedReferenceError(\n          'You are trying to access a property or method of the Jest environment after it has been torn down.'\n        );\n\n        process.exitCode = 1;\n      }\n\n      return this._fakeTimersImplementation;\n    };\n\n    const useFakeTimers = (type = 'modern') => {\n      if (type === 'legacy') {\n        this._fakeTimersImplementation = this._environment.fakeTimers;\n      } else {\n        this._fakeTimersImplementation = this._environment.fakeTimersModern;\n      }\n\n      this._fakeTimersImplementation.useFakeTimers();\n\n      return jestObject;\n    };\n\n    const useRealTimers = () => {\n      _getFakeTimers().useRealTimers();\n\n      return jestObject;\n    };\n\n    const resetModules = () => {\n      this.resetModules();\n      return jestObject;\n    };\n\n    const isolateModules = fn => {\n      this.isolateModules(fn);\n      return jestObject;\n    };\n\n    const fn = this._moduleMocker.fn.bind(this._moduleMocker);\n\n    const spyOn = this._moduleMocker.spyOn.bind(this._moduleMocker);\n\n    const mocked =\n      (_this$_moduleMocker$m =\n        (_this$_moduleMocker$m2 = this._moduleMocker.mocked) === null ||\n        _this$_moduleMocker$m2 === void 0\n          ? void 0\n          : _this$_moduleMocker$m2.bind(this._moduleMocker)) !== null &&\n      _this$_moduleMocker$m !== void 0\n        ? _this$_moduleMocker$m\n        : () => {\n            throw new Error(\n              'Your test environment does not support `mocked`, please update it.'\n            );\n          };\n\n    const setTimeout = timeout => {\n      if (this._environment.global.jasmine) {\n        this._environment.global.jasmine._DEFAULT_TIMEOUT_INTERVAL = timeout;\n      } else {\n        // @ts-expect-error: https://github.com/Microsoft/TypeScript/issues/24587\n        this._environment.global[testTimeoutSymbol] = timeout;\n      }\n\n      return jestObject;\n    };\n\n    const retryTimes = numTestRetries => {\n      // @ts-expect-error: https://github.com/Microsoft/TypeScript/issues/24587\n      this._environment.global[retryTimesSymbol] = numTestRetries;\n      return jestObject;\n    };\n\n    const jestObject = {\n      advanceTimersByTime: msToRun =>\n        _getFakeTimers().advanceTimersByTime(msToRun),\n      advanceTimersToNextTimer: steps =>\n        _getFakeTimers().advanceTimersToNextTimer(steps),\n      autoMockOff: disableAutomock,\n      autoMockOn: enableAutomock,\n      clearAllMocks,\n      clearAllTimers: () => _getFakeTimers().clearAllTimers(),\n      createMockFromModule: moduleName => this._generateMock(from, moduleName),\n      deepUnmock,\n      disableAutomock,\n      doMock: mock,\n      dontMock: unmock,\n      enableAutomock,\n      fn,\n      genMockFromModule: moduleName => this._generateMock(from, moduleName),\n      getRealSystemTime: () => {\n        const fakeTimers = _getFakeTimers();\n\n        if (fakeTimers === this._environment.fakeTimersModern) {\n          return fakeTimers.getRealSystemTime();\n        } else {\n          throw new TypeError(\n            'getRealSystemTime is not available when not using modern timers'\n          );\n        }\n      },\n      getTimerCount: () => _getFakeTimers().getTimerCount(),\n      isMockFunction: this._moduleMocker.isMockFunction,\n      isolateModules,\n      mock,\n      mocked,\n      requireActual: this.requireActual.bind(this, from),\n      requireMock: this.requireMock.bind(this, from),\n      resetAllMocks,\n      resetModules,\n      restoreAllMocks,\n      retryTimes,\n      runAllImmediates: () => {\n        const fakeTimers = _getFakeTimers();\n\n        if (fakeTimers === this._environment.fakeTimers) {\n          fakeTimers.runAllImmediates();\n        } else {\n          throw new TypeError(\n            'runAllImmediates is not available when using modern timers'\n          );\n        }\n      },\n      runAllTicks: () => _getFakeTimers().runAllTicks(),\n      runAllTimers: () => _getFakeTimers().runAllTimers(),\n      runOnlyPendingTimers: () => _getFakeTimers().runOnlyPendingTimers(),\n      setMock: (moduleName, mock) => setMockFactory(moduleName, () => mock),\n      setSystemTime: now => {\n        const fakeTimers = _getFakeTimers();\n\n        if (fakeTimers === this._environment.fakeTimersModern) {\n          fakeTimers.setSystemTime(now);\n        } else {\n          throw new TypeError(\n            'setSystemTime is not available when not using modern timers'\n          );\n        }\n      },\n      setTimeout,\n      spyOn,\n      unmock,\n      unstable_mockModule: mockModule,\n      useFakeTimers,\n      useRealTimers\n    };\n    return jestObject;\n  }\n\n  _logFormattedReferenceError(errorMessage) {\n    const testPath = this._testPath\n      ? ` From ${(0, _slash().default)(\n          path().relative(this._config.rootDir, this._testPath)\n        )}.`\n      : '';\n    const originalStack = new ReferenceError(`${errorMessage}${testPath}`).stack\n      .split('\\n') // Remove this file from the stack (jest-message-utils will keep one line)\n      .filter(line => line.indexOf(__filename) === -1)\n      .join('\\n');\n    const {message, stack} = (0, _jestMessageUtil().separateMessageFromStack)(\n      originalStack\n    );\n    console.error(\n      `\\n${message}\\n` +\n        (0, _jestMessageUtil().formatStackTrace)(stack, this._config, {\n          noStackTrace: false\n        })\n    );\n  }\n\n  wrapCodeInModuleWrapper(content) {\n    return this.constructModuleWrapperStart() + content + '\\n}});';\n  }\n\n  constructModuleWrapperStart() {\n    const args = this.constructInjectedModuleParameters();\n    return '({\"' + EVAL_RESULT_VARIABLE + `\":function(${args.join(',')}){`;\n  }\n\n  constructInjectedModuleParameters() {\n    return [\n      'module',\n      'exports',\n      'require',\n      '__dirname',\n      '__filename',\n      this._config.injectGlobals ? 'jest' : undefined,\n      ...this._config.extraGlobals\n    ].filter(notEmpty);\n  }\n\n  handleExecutionError(e, module) {\n    const moduleNotFoundError =\n      _jestResolve().default.tryCastModuleNotFoundError(e);\n\n    if (moduleNotFoundError) {\n      if (!moduleNotFoundError.requireStack) {\n        moduleNotFoundError.requireStack = [module.filename || module.id];\n\n        for (let cursor = module.parent; cursor; cursor = cursor.parent) {\n          moduleNotFoundError.requireStack.push(cursor.filename || cursor.id);\n        }\n\n        moduleNotFoundError.buildMessage(this._config.rootDir);\n      }\n\n      throw moduleNotFoundError;\n    }\n\n    throw e;\n  }\n\n  getGlobalsForCjs(from) {\n    const jest = this.jestObjectCaches.get(from);\n    invariant(jest, 'There should always be a Jest object already');\n    return {...this.getGlobalsFromEnvironment(), jest};\n  }\n\n  getGlobalsForEsm(from, context) {\n    let jest = this.jestObjectCaches.get(from);\n\n    if (!jest) {\n      jest = this._createJestObjectFor(from);\n      this.jestObjectCaches.set(from, jest);\n    }\n\n    const globals = {...this.getGlobalsFromEnvironment(), jest};\n    const module = new (_vm().SyntheticModule)(\n      Object.keys(globals),\n      function () {\n        Object.entries(globals).forEach(([key, value]) => {\n          // @ts-expect-error: TS doesn't know what `this` is\n          this.setExport(key, value);\n        });\n      },\n      {\n        context,\n        identifier: '@jest/globals'\n      }\n    );\n    return evaluateSyntheticModule(module);\n  }\n\n  getGlobalsFromEnvironment() {\n    if (this.jestGlobals) {\n      return {...this.jestGlobals};\n    }\n\n    return {\n      afterAll: this._environment.global.afterAll,\n      afterEach: this._environment.global.afterEach,\n      beforeAll: this._environment.global.beforeAll,\n      beforeEach: this._environment.global.beforeEach,\n      describe: this._environment.global.describe,\n      expect: this._environment.global.expect,\n      fdescribe: this._environment.global.fdescribe,\n      fit: this._environment.global.fit,\n      it: this._environment.global.it,\n      test: this._environment.global.test,\n      xdescribe: this._environment.global.xdescribe,\n      xit: this._environment.global.xit,\n      xtest: this._environment.global.xtest\n    };\n  }\n\n  readFile(filename) {\n    let source = this._cacheFS.get(filename);\n\n    if (!source) {\n      source = fs().readFileSync(filename, 'utf8');\n\n      this._cacheFS.set(filename, source);\n    }\n\n    return source;\n  }\n\n  setGlobalsForRuntime(globals) {\n    this.jestGlobals = globals;\n  }\n}\n\nexports.default = Runtime;\n\n_defineProperty(Runtime, 'shouldInstrument', _transform().shouldInstrument);\n\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nfunction notEmpty(value) {\n  return value !== null && value !== undefined;\n}\n\nasync function evaluateSyntheticModule(module) {\n  await module.link(() => {\n    throw new Error('This should never happen');\n  });\n  await module.evaluate();\n  return module;\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,YAAT,GAAwB;EACtB,MAAMC,IAAI,GAAGC,uBAAuB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;EAEAH,YAAY,GAAG,YAAY;IACzB,OAAOC,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASG,IAAT,GAAgB;EACd,MAAMH,IAAI,GAAGC,uBAAuB,CAACC,OAAO,CAAC,MAAD,CAAR,CAApC;;EAEAC,IAAI,GAAG,YAAY;IACjB,OAAOH,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASI,IAAT,GAAgB;EACd,MAAMJ,IAAI,GAAGE,OAAO,CAAC,KAAD,CAApB;;EAEAE,IAAI,GAAG,YAAY;IACjB,OAAOJ,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASK,GAAT,GAAe;EACb,MAAML,IAAI,GAAGE,OAAO,CAAC,IAAD,CAApB;;EAEAG,GAAG,GAAG,YAAY;IAChB,OAAOL,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASM,eAAT,GAA2B;EACzB,MAAMN,IAAI,GAAGE,OAAO,CAAC,kBAAD,CAApB;;EAEAI,eAAe,GAAG,YAAY;IAC5B,OAAON,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASO,kBAAT,GAA8B;EAC5B,MAAMP,IAAI,GAAGE,OAAO,CAAC,qBAAD,CAApB;;EAEAK,kBAAkB,GAAG,YAAY;IAC/B,OAAOP,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASQ,MAAT,GAAkB;EAChB,MAAMR,IAAI,GAAGS,sBAAsB,CAACP,OAAO,CAAC,OAAD,CAAR,CAAnC;;EAEAM,MAAM,GAAG,YAAY;IACnB,OAAOR,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASU,EAAT,GAAc;EACZ,MAAMV,IAAI,GAAGC,uBAAuB,CAACC,OAAO,CAAC,aAAD,CAAR,CAApC;;EAEAQ,EAAE,GAAG,YAAY;IACf,OAAOV,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASW,MAAT,GAAkB;EAChB,MAAMX,IAAI,GAAGS,sBAAsB,CAACP,OAAO,CAAC,OAAD,CAAR,CAAnC;;EAEAS,MAAM,GAAG,YAAY;IACnB,OAAOX,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASY,SAAT,GAAqB;EACnB,MAAMZ,IAAI,GAAGS,sBAAsB,CAACP,OAAO,CAAC,WAAD,CAAR,CAAnC;;EAEAU,SAAS,GAAG,YAAY;IACtB,OAAOZ,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASa,UAAT,GAAsB;EACpB,MAAMb,IAAI,GAAGE,OAAO,CAAC,iBAAD,CAApB;;EAEAW,UAAU,GAAG,YAAY;IACvB,OAAOb,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASc,aAAT,GAAyB;EACvB,MAAMd,IAAI,GAAGS,sBAAsB,CAACP,OAAO,CAAC,gBAAD,CAAR,CAAnC;;EAEAY,aAAa,GAAG,YAAY;IAC1B,OAAOd,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASe,gBAAT,GAA4B;EAC1B,MAAMf,IAAI,GAAGE,OAAO,CAAC,mBAAD,CAApB;;EAEAa,gBAAgB,GAAG,YAAY;IAC7B,OAAOf,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASgB,cAAT,GAA0B;EACxB,MAAMhB,IAAI,GAAGE,OAAO,CAAC,iBAAD,CAApB;;EAEAc,cAAc,GAAG,YAAY;IAC3B,OAAOhB,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASiB,YAAT,GAAwB;EACtB,MAAMjB,IAAI,GAAGS,sBAAsB,CAACP,OAAO,CAAC,cAAD,CAAR,CAAnC;;EAEAe,YAAY,GAAG,YAAY;IACzB,OAAOjB,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASkB,aAAT,GAAyB;EACvB,MAAMlB,IAAI,GAAGS,sBAAsB,CAACP,OAAO,CAAC,eAAD,CAAR,CAAnC;;EAEAgB,aAAa,GAAG,YAAY;IAC1B,OAAOlB,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASmB,SAAT,GAAqB;EACnB,MAAMnB,IAAI,GAAGE,OAAO,CAAC,WAAD,CAApB;;EAEAiB,SAAS,GAAG,YAAY;IACtB,OAAOnB,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,IAAIoB,QAAQ,GAAGlB,OAAO,CAAC,WAAD,CAAtB;;AAEA,SAASO,sBAAT,CAAgCY,GAAhC,EAAqC;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAACvB,OAAO,EAAEuB;EAAV,CAArC;AACD;;AAED,SAASE,wBAAT,CAAkCC,WAAlC,EAA+C;EAC7C,IAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;EACnC,IAAIC,iBAAiB,GAAG,IAAID,OAAJ,EAAxB;EACA,IAAIE,gBAAgB,GAAG,IAAIF,OAAJ,EAAvB;EACA,OAAO,CAACF,wBAAwB,GAAG,UAAUC,WAAV,EAAuB;IACxD,OAAOA,WAAW,GAAGG,gBAAH,GAAsBD,iBAAxC;EACD,CAFM,EAEJF,WAFI,CAAP;AAGD;;AAED,SAASvB,uBAAT,CAAiCoB,GAAjC,EAAsCG,WAAtC,EAAmD;EACjD,IAAI,CAACA,WAAD,IAAgBH,GAAhB,IAAuBA,GAAG,CAACC,UAA/B,EAA2C;IACzC,OAAOD,GAAP;EACD;;EACD,IAAIA,GAAG,KAAK,IAAR,IAAiB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA/D,EAA4E;IAC1E,OAAO;MAACvB,OAAO,EAAEuB;IAAV,CAAP;EACD;;EACD,IAAIO,KAAK,GAAGL,wBAAwB,CAACC,WAAD,CAApC;;EACA,IAAII,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUR,GAAV,CAAb,EAA6B;IAC3B,OAAOO,KAAK,CAACE,GAAN,CAAUT,GAAV,CAAP;EACD;;EACD,IAAIU,MAAM,GAAG,EAAb;EACA,IAAIC,qBAAqB,GACvBtC,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACuC,wBADlC;;EAEA,KAAK,IAAIC,GAAT,IAAgBb,GAAhB,EAAqB;IACnB,IAAIa,GAAG,KAAK,SAAR,IAAqBxC,MAAM,CAACyC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqChB,GAArC,EAA0Ca,GAA1C,CAAzB,EAAyE;MACvE,IAAII,IAAI,GAAGN,qBAAqB,GAC5BtC,MAAM,CAACuC,wBAAP,CAAgCZ,GAAhC,EAAqCa,GAArC,CAD4B,GAE5B,IAFJ;;MAGA,IAAII,IAAI,KAAKA,IAAI,CAACR,GAAL,IAAYQ,IAAI,CAACC,GAAtB,CAAR,EAAoC;QAClC7C,MAAM,CAACC,cAAP,CAAsBoC,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;MACD,CAFD,MAEO;QACLP,MAAM,CAACG,GAAD,CAAN,GAAcb,GAAG,CAACa,GAAD,CAAjB;MACD;IACF;EACF;;EACDH,MAAM,CAACjC,OAAP,GAAiBuB,GAAjB;;EACA,IAAIO,KAAJ,EAAW;IACTA,KAAK,CAACW,GAAN,CAAUlB,GAAV,EAAeU,MAAf;EACD;;EACD,OAAOA,MAAP;AACD;;AAED,SAASS,eAAT,CAAyBnB,GAAzB,EAA8Ba,GAA9B,EAAmCrC,KAAnC,EAA0C;EACxC,IAAIqC,GAAG,IAAIb,GAAX,EAAgB;IACd3B,MAAM,CAACC,cAAP,CAAsB0B,GAAtB,EAA2Ba,GAA3B,EAAgC;MAC9BrC,KAAK,EAAEA,KADuB;MAE9B4C,UAAU,EAAE,IAFkB;MAG9BC,YAAY,EAAE,IAHgB;MAI9BC,QAAQ,EAAE;IAJoB,CAAhC;EAMD,CAPD,MAOO;IACLtB,GAAG,CAACa,GAAD,CAAH,GAAWrC,KAAX;EACD;;EACD,OAAOwB,GAAP;AACD;;AAED,MAAMuB,cAAc,GAAG,OAAOvC,GAAG,GAAGwC,gBAAb,KAAkC,UAAzD;AACA,MAAMC,uBAAuB,GAAG;EAC9BC,gBAAgB,EAAE,KADY;EAE9BC,qBAAqB,EAAEJ,cAFO;EAG9BK,2BAA2B,EAAE,KAHC;EAI9BC,iBAAiB,EAAE,KAJW;EAK9BC,qBAAqB,EAAE;AALO,CAAhC,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iDAAiD,GAAG,IAAIC,GAAJ,CAAQ,CAAC,OAAD,CAAR,CAA1D;AACA,MAAMC,8BAA8B,GAAGC,MAAM,CAACC,GAAP,CACrC,gCADqC,CAAvC;AAGA,MAAMC,iBAAiB,GAAGF,MAAM,CAACC,GAAP,CAAW,qBAAX,CAA1B;AACA,MAAME,gBAAgB,GAAGH,MAAM,CAACC,GAAP,CAAW,aAAX,CAAzB;AACA,MAAMG,YAAY,GAAGxD,IAAI,GAAGyD,GAAP,GAAa,cAAb,GAA8BzD,IAAI,GAAGyD,GAA1D;;AAEA,MAAMC,mBAAmB,GAAGC,MAAM,IAAI;EACpC,IACEC,KAAK,CAACC,OAAN,CAAcF,MAAM,CAACG,gBAArB,KACAH,MAAM,CAACG,gBAAP,CAAwBC,MAF1B,EAGE;IACA,OAAOJ,MAAM,CAACG,gBAAP,CAAwBE,GAAxB,CAA4B;MAAA,IAAC,CAACC,KAAD,EAAQC,UAAR,CAAD;MAAA,OAA0B;QAC3DA,UAD2D;QAE3DD,KAAK,EAAE,IAAIE,MAAJ,CAAWF,KAAX;MAFoD,CAA1B;IAAA,CAA5B,CAAP;EAID;;EAED,OAAO,IAAP;AACD,CAZD;;AAcA,MAAMG,iBAAiB,GAAG,IAAI9C,OAAJ,EAA1B;AACA,MAAM+C,oBAAoB,GAAG,oBAA7B;AACA,MAAMC,wBAAwB,GAAG,OAAOpE,GAAG,GAAGqE,eAAb,KAAiC,UAAlE;;AAEA,MAAMvB,qBAAqB,GACzBsB,wBAAwB,IACxB,CAAC,MAAM;EACL,IAAI;IACF;IACA,KAAKpE,GAAG,GAAGwC,gBAAX,EAA6B,yBAA7B;IACA,OAAO,IAAP;EACD,CAJD,CAIE,MAAM;IACN,OAAO,KAAP;EACD;AACF,CARD,GAFF;;AAYA,MAAM8B,sCAAsC,GAAG,CAAC,MAAM;EACpD,IAAI;IACFzE,OAAO,CAAC,SAAD,CAAP;;IAEA,OAAO,IAAP;EACD,CAJD,CAIE,MAAM;IACN,OAAO,KAAP;EACD;AACF,CAR8C,GAA/C;;AAUA,MAAM0E,qCAAqC,GAAG,CAAC,MAAM;EACnD,MAAM;IAACC;EAAD,IAAWrE,MAAM,GAAGV,OAAT,CAAiBgF,IAAjB,CACf,MADe,EAEf,CACE,QADF,EAEE,4EAFF,CAFe,EAMf;IACEC,MAAM,EAAE;EADV,CANe,CAAjB;;EAWA,OAAOF,MAAM,KAAK,MAAlB;AACD,CAb6C,GAA9C;;AAeA,MAAMG,OAAN,CAAc;EACZC,WAAW,CACTnB,MADS,EAEToB,WAFS,EAGTC,QAHS,EAITC,WAJS,EAKTC,OALS,EAMTC,eANS,EAOTC,QAPS,EAQT;IACA,IAAIC,qBAAJ,EAA2BC,sBAA3B,EAAmDC,kBAAnD;;IAEAlD,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,KAAK,CAAxB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,KAAK,CAAvB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,kBAAP,EAA2B,KAAK,CAAhC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,+BAAP,EAAwC,KAAK,CAA7C,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,KAAK,CAA5B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,qBAAP,EAA8B,KAAK,CAAnC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,2BAAP,EAAoC,KAAK,CAAzC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,2BAAP,EAAoC,KAAK,CAAzC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,yBAAP,EAAkC,KAAK,CAAvC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,iCAAP,EAA0C,KAAK,CAA/C,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,aAAP,EAAsB,KAAK,CAA3B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,gBAAP,EAAyB,KAAK,CAA9B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,KAAK,CAAlC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,eAAP,EAAwB,KAAK,CAA7B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,uBAAP,EAAgC,KAAK,CAArC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,qBAAP,EAA8B,KAAK,CAAnC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,sBAAP,EAA+B,KAAK,CAApC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,eAAP,EAAwB,KAAK,CAA7B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,yBAAP,EAAkC,KAAK,CAAvC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,iBAAP,EAA0B,KAAK,CAA/B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,mBAAP,EAA4B,KAAK,CAAjC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,kBAAP,EAA2B,KAAK,CAAhC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,sBAAP,EAA+B,KAAK,CAApC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,KAAK,CAAzB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,KAAK,CAAzB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,iBAAP,EAA0B,KAAK,CAA/B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,wBAAP,EAAiC,KAAK,CAAtC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,0CAAP,EAAmD,KAAK,CAAxD,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,KAAK,CAAlC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,KAAK,CAAlC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,iBAAP,EAA0B,KAAK,CAA/B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,sBAAP,EAA+B,KAAK,CAApC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,yBAAP,EAAkC,KAAK,CAAvC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,mBAAP,EAA4B,KAAK,CAAjC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,uBAAP,EAAgC,KAAK,CAArC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,aAAP,EAAsB,KAAK,CAA3B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,eAAP,EAAwB,KAAK,CAA7B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,qBAAP,EAA8B,KAAK,CAAnC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,uBAAP,EAAgC,KAAK,CAArC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,kBAAP,EAA2B,KAAK,CAAhC,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,aAAP,EAAsB,KAAK,CAA3B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,eAAP,EAAwB,KAAK,CAA7B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,eAAP,EAAwB,KAAK,CAA7B,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,YAAP,EAAqB,KAArB,CAAf;;IAEA,KAAKmD,QAAL,GAAgBN,OAAhB;IACA,KAAKO,OAAL,GAAe9B,MAAf;IACA,KAAK+B,gBAAL,GAAwBP,eAAxB;IACA,KAAKQ,6BAAL,GAAqC,EAArC;IACA,KAAKC,YAAL,GAAoBb,WAApB;IACA,KAAKc,mBAAL,GAA2B,IAAIC,GAAJ,EAA3B;IACA,KAAKC,yBAAL,GAAiC,IAAID,GAAJ,EAAjC;IACA,KAAKE,uBAAL,GAA+B,IAAIF,GAAJ,EAA/B;IACA,KAAKG,+BAAL,GAAuC,IAAvC;IACA,KAAKC,WAAL,GAAmB,IAAnB;IACA,KAAKC,cAAL,GAAsB,IAAIL,GAAJ,EAAtB;IACA,KAAKM,aAAL,GAAqB,IAAIN,GAAJ,EAArB;IACA,KAAKO,mBAAL,GAA2B,IAAIP,GAAJ,EAA3B;IACA,KAAKQ,oBAAL,GAA4B,IAAIR,GAAJ,EAA5B;IACAS,SAAS,CACP,KAAKX,YAAL,CAAkBY,YADX,EAEP,2DAFO,CAAT;IAIA,KAAKC,aAAL,GAAqB,KAAKb,YAAL,CAAkBY,YAAvC;IACA,KAAKE,uBAAL,GAA+B,IAA/B;IACA,KAAKC,qBAAL,GAA6B,IAA7B;IACA,KAAKC,eAAL,GAAuB,IAAId,GAAJ,EAAvB;IACA,KAAKe,iBAAL,GAAyB,IAAIf,GAAJ,EAAzB;IACA,KAAKgB,gBAAL,GAAwB,IAAIhB,GAAJ,EAAxB;IACA,KAAKiB,oBAAL,GAA4B,IAAIzF,OAAJ,EAA5B;IACA,KAAK0F,SAAL,GAAiB5B,QAAjB;IACA,KAAK6B,SAAL,GAAiBjC,QAAjB;IACA,KAAKkC,kBAAL,GAA0BjC,WAA1B;IACA,KAAKkC,eAAL,GAAuBxD,MAAM,CAACyD,QAA9B;IACA,KAAKC,kBAAL,GAA0B,IAAIvB,GAAJ,EAA1B;IACA,KAAKwB,eAAL,GAAuB,IAAIxB,GAAJ,EAAvB;IACA,KAAKyB,oBAAL,GAA4B,IAAIzB,GAAJ,EAA5B;IACA,KAAK0B,aAAL,GAAqB,IAAI1B,GAAJ,EAArB;IACA,KAAK2B,mBAAL,GAA2B,IAAI3B,GAAJ,EAA3B;IACA,KAAK4B,gBAAL,GAAwB,IAAI5B,GAAJ,EAAxB;IACA,KAAK6B,kBAAL,GAA0B,IAAI7B,GAAJ,EAA1B;IACA,KAAK8B,sBAAL,GAA8B,IAAI9B,GAAJ,EAA9B;IACA,KAAK+B,wCAAL,GAAgD,IAAI/B,GAAJ,EAAhD;IACA,KAAKgC,qBAAL,GAA6B,IAAIhC,GAAJ,EAA7B;IACA,KAAKiC,yBAAL,GACEpE,MAAM,CAACqE,MAAP,KAAkB,QAAlB,GACI,KAAKpC,YAAL,CAAkBqC,UADtB,GAEI,KAAKrC,YAAL,CAAkBsC,gBAHxB;IAIA,KAAKC,WAAL,GAAmB/D,iBAAiB,CAACzC,GAAlB,CAAsBgC,MAAtB,CAAnB;;IAEA,IAAI,CAAC,KAAKwE,WAAN,IAAqBxE,MAAM,CAACyE,0BAAhC,EAA4D;MAC1D,KAAKD,WAAL,GAAmB,IAAIhE,MAAJ,CACjBR,MAAM,CAACyE,0BAAP,CAAkCC,IAAlC,CAAuC,GAAvC,CADiB,CAAnB;MAGAjE,iBAAiB,CAAChC,GAAlB,CAAsBuB,MAAtB,EAA8B,KAAKwE,WAAnC;IACD;;IAED,MAAMG,mBAAmB,GACvB,CAACjD,qBAAqB,GACpB,CAACC,sBAAsB,GAAG,CAACC,kBAAkB,GAAG,KAAKK,YAA3B,EACvB2C,gBADH,MACyB,IADzB,IACiCjD,sBAAsB,KAAK,KAAK,CADjE,GAEI,KAAK,CAFT,GAGIA,sBAAsB,CAACpD,IAAvB,CAA4BqD,kBAA5B,CAJN,MAI2D,IAJ3D,IAKAF,qBAAqB,KAAK,KAAK,CAL/B,GAMIA,qBANJ,GAOI,EARN;IASA,KAAKmD,aAAL,GAAqB5E,KAAK,CAAC6E,IAAN,CACnB,IAAIvF,GAAJ,CAAQ,CAAC,QAAD,EAAW,SAAX,EAAsB,GAAGoF,mBAAzB,CAAR,CADmB,CAArB;IAGA,KAAKI,aAAL,GAAqB9E,KAAK,CAAC6E,IAAN,CACnB,IAAIvF,GAAJ,CAAQ,CAAC,SAAD,EAAY,SAAZ,EAAuB,GAAGoF,mBAA1B,CAAR,CADmB,CAArB;;IAIA,IAAI3E,MAAM,CAACyD,QAAX,EAAqB;MACnBzD,MAAM,CAACgF,UAAP,CAAkBC,OAAlB,CAA0BC,QAAQ,IAAI;QACpC,IAAIA,QAAQ,CAACC,QAAT,CAAkBtF,YAAlB,CAAJ,EAAqC;UACnC,MAAMuF,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKxB,aADU,EAEfqB,QAFe,EAGfI,SAHe,EAGJ;UACX;YACEC,UAAU,EAAE,KAAKC,wBAAL,CAA8BN,QAA9B,IACR,KAAKL,aADG,GAER,KAAKE;UAHX,CAJe,CAAjB;;UAWA,KAAKZ,qBAAL,CAA2B1F,GAA3B,CAA+B2G,QAA/B,EAAyC,KAAzC;QACD;MACF,CAfD;IAgBD;;IAED,KAAKK,YAAL;EACD;;EAEyB,aAAbC,aAAa,CAAC1F,MAAD,EAAS2F,OAAT,EAAkB;IAC1C,CAAC,GAAGtI,SAAS,GAAGuI,eAAhB,EAAiC5F,MAAM,CAAC6F,cAAxC;IACA,MAAMC,QAAQ,GAAG5E,OAAO,CAAC6E,cAAR,CAAuB/F,MAAvB,EAA+B;MAC9CgG,OAAO,EAAEL,OAAO,CAACK,OAD6B;MAE9CC,UAAU,EAAEN,OAAO,CAACM,UAF0B;MAG9CC,UAAU,EAAE,CAAClG,MAAM,CAAClC,KAH0B;MAI9CqI,KAAK,EAAER,OAAO,CAACQ,KAJ+B;MAK9CC,QAAQ,EAAET,OAAO,CAACS;IAL4B,CAA/B,CAAjB;IAOA,MAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,KAAT,EAAvB;IACA,OAAO;MACLtG,MADK;MAELuG,OAAO,EAAEF,QAAQ,CAACE,OAFb;MAGLC,SAAS,EAAEH,QAAQ,CAACG,SAHf;MAILnF,QAAQ,EAAEH,OAAO,CAACuF,cAAR,CAAuBzG,MAAvB,EAA+BqG,QAAQ,CAACG,SAAxC;IAJL,CAAP;EAMD;;EAEoB,OAAdT,cAAc,CAAC/F,MAAD,EAAS2F,OAAT,EAAkB;IACrC,MAAMe,kBAAkB,GAAG,CACzB,GAAG1G,MAAM,CAAC2G,wBADe,EAEzB,IAAIhB,OAAO,IAAIA,OAAO,CAACQ,KAAnB,GAA2BnG,MAAM,CAAC4G,uBAAlC,GAA4D,EAAhE,CAFyB,EAGzB5G,MAAM,CAAC6F,cAAP,CAAsBgB,UAAtB,CAAiC7G,MAAM,CAAC8G,OAAP,GAAiBzK,IAAI,GAAGyD,GAAzD,KACEE,MAAM,CAAC6F,cAJgB,EAKzBkB,MALyB,CAKlBC,OALkB,CAA3B;IAMA,MAAMC,aAAa,GACjBP,kBAAkB,CAACtG,MAAnB,GAA4B,CAA5B,GACI,IAAII,MAAJ,CAAWkG,kBAAkB,CAAChC,IAAnB,CAAwB,GAAxB,CAAX,CADJ,GAEIY,SAHN;IAIA,OAAOtI,aAAa,GAAGhB,OAAhB,CAAwBkL,MAAxB,CAA+B;MACpCrB,cAAc,EAAE7F,MAAM,CAAC6F,cADa;MAEpCsB,WAAW,EAAEnH,MAAM,CAACoH,KAAP,CAAaD,WAFU;MAGpCnB,OAAO,EACLL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACK,OAJxB;MAKpCqB,mBAAmB,EAAErH,MAAM,CAACqH,mBALQ;MAMpCC,cAAc,EAAEtH,MAAM,CAACoH,KAAP,CAAaE,cANO;MAOpCC,UAAU,EAAE,CAACnK,aAAa,GAAGpB,OAAhB,CAAwBwL,SAAzB,EAAoCC,MAApC,CACVzH,MAAM,CAAC0H,oBADG,CAPwB;MAUpCC,sBAAsB,EAAE3H,MAAM,CAACoH,KAAP,CAAaO,sBAVD;MAWpCC,mBAAmB,EAAE5H,MAAM,CAACoH,KAAP,CAAaQ,mBAXE;MAYpCC,kBAAkB,EAAE7H,MAAM,CAACoH,KAAP,CAAaS,kBAZG;MAapCZ,aAboC;MAcpChB,UAAU,EACR,CAACN,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GACG,KAAK,CADR,GAEGA,OAAO,CAACM,UAFZ,KAE2B,CAjBO;MAkBpC6B,YAAY,EAAE,CAAC,GAAG5K,cAAc,GAAG6K,kBAArB,EACZ1L,IAAI,GAAGyD,GAAP,GAAa,WAAb,GAA2BzD,IAAI,GAAGyD,GADtB,CAlBsB;MAqBpCkI,IAAI,EAAEhI,MAAM,CAACgI,IArBuB;MAsBpCC,SAAS,EAAEjI,MAAM,CAACoH,KAAP,CAAaa,SAAb,IAA0B,CAAC,KAAD,EAAQ,SAAR,CAtBD;MAuBpC/B,UAAU,EACRP,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACO,UAxBxB;MAyBpCgC,cAAc,EAAE,KAzBoB;MA0BpCpB,OAAO,EAAE9G,MAAM,CAAC8G,OA1BoB;MA2BpCqB,KAAK,EAAEnI,MAAM,CAACmI,KA3BsB;MA4BpCC,sBAAsB,EAAEpI,MAAM,CAACoH,KAAP,CAAagB,sBA5BD;MA6BpCC,WAAW,EACT1C,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACS,QA9BxB;MA+BpCD,KAAK,EAAER,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACQ;IA/B7B,CAA/B,CAAP;EAiCD;;EAEoB,OAAdM,cAAc,CAACzG,MAAD,EAASwG,SAAT,EAAoB;IACvC,OAAO,KAAKrJ,YAAY,GAAGnB,OAApB,EAA6BwK,SAA7B,EAAwC;MAC7C8B,eAAe,EAAEtI,MAAM,CAACoH,KAAP,CAAakB,eADe;MAE7Cf,UAAU,EAAEvH,MAAM,CAAC0H,oBAAP,CAA4BrH,GAA5B,CAAgCkI,SAAS,IAAI,MAAMA,SAAnD,CAFiC;MAG7CC,cAAc,EAAE,IAH6B;MAI7CC,iBAAiB,EAAEzI,MAAM,CAACyI,iBAJmB;MAK7CtI,gBAAgB,EAAEJ,mBAAmB,CAACC,MAAD,CALQ;MAM7C0I,WAAW,EAAE1I,MAAM,CAAC0I,WANyB;MAO7CT,SAAS,EAAEjI,MAAM,CAACoH,KAAP,CAAaa,SAPqB;MAQ7C5G,QAAQ,EAAErB,MAAM,CAACqB,QAR4B;MAS7CyF,OAAO,EAAE9G,MAAM,CAAC8G;IAT6B,CAAxC,CAAP;EAWD;;EAEkB,aAAN6B,MAAM,GAAG;IACpB,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;EACD;;EAEmB,OAAbC,aAAa,GAAG;IACrB,MAAM,IAAID,KAAJ,CAAU,oDAAV,CAAN;EACD,CAlRW,CAkRV;;;EAEFpD,wBAAwB,CAACnJ,IAAD,EAAO;IAC7B,OAAOc,YAAY,GAAGnB,OAAf,CAAuBwJ,wBAAvB,CACLnJ,IADK,EAEL,KAAKyF,OAAL,CAAagH,sBAFR,CAAP;EAID,CAzRW,CAyRV;;;EAEiB,MAAbC,aAAa,CAACC,UAAD,EAAyB;IAAA,IAAZC,KAAY,uEAAJ,EAAI;IAC1C,MAAMC,QAAQ,GAAGF,UAAU,GAAGC,KAA9B;;IAEA,IAAI,KAAKrF,oBAAL,CAA0B7F,GAA1B,CAA8BmL,QAA9B,CAAJ,EAA6C;MAC3C,MAAM,KAAKtF,oBAAL,CAA0B5F,GAA1B,CAA8BkL,QAA9B,CAAN;IACD;;IAED,IAAI,CAAC,KAAKhG,iBAAL,CAAuBnF,GAAvB,CAA2BmL,QAA3B,CAAL,EAA2C;MACzCtG,SAAS,CACP,OAAO,KAAKX,YAAL,CAAkBkH,YAAzB,KAA0C,UADnC,EAEP,wFAFO,CAAT;;MAKA,MAAMC,OAAO,GAAG,KAAKnH,YAAL,CAAkBkH,YAAlB,EAAhB;;MAEAvG,SAAS,CAACwG,OAAD,EAAU,qCAAV,CAAT;MACA,IAAIC,gBAAJ;MACA,IAAIC,eAAJ;;MAEA,KAAK1F,oBAAL,CAA0BnF,GAA1B,CACEyK,QADF,EAEE,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUvI,MAAV,KAAqB;QAC/BoI,gBAAgB,GAAGG,OAAnB;QACAF,eAAe,GAAGrI,MAAlB;MACD,CAHD,CAFF;;MAQA2B,SAAS,CACPyG,gBAAgB,IAAIC,eADb,EAEP,yEAFO,CAAT;;MAKA,IAAI,KAAKhG,SAAL,CAAemG,YAAf,CAA4BT,UAA5B,CAAJ,EAA6C;QAC3C,MAAMU,IAAI,GAAG,KAAKC,iBAAL,CAAuBX,UAAvB,EAAmCI,OAAnC,CAAb;;QAEA,KAAKlG,iBAAL,CAAuBzE,GAAvB,CAA2ByK,QAA3B,EAAqCQ,IAArC;;QAEAL,gBAAgB;QAChB,OAAOK,IAAP;MACD;;MAED,MAAME,eAAe,GAAG,MAAM,KAAKC,kBAAL,CAAwBb,UAAxB,EAAoC;QAChE/J,gBAAgB,EAAE,KAD8C;QAEhEC,qBAAqB,EAAE,IAFyC;QAGhEC,2BAA2B,EAAE,IAHmC;QAIhEC,iBAAiB,EAAE,IAJ6C;QAKhEC;MALgE,CAApC,CAA9B;;MAQA,IAAI;QACF,MAAMyK,MAAM,GAAG,KAAKvN,GAAG,GAAGwC,gBAAX,EAA6B6K,eAA7B,EAA8C;UAC3DR,OAD2D;UAE3DW,UAAU,EAAEf,UAF+C;UAG3DgB,uBAAuB,EAAE,OAAOC,SAAP,EAAkBC,iBAAlB,KAAwC;YAC/DtH,SAAS,CACPjC,wBADO,EAEP,8HAFO,CAAT;YAIA,MAAMmJ,MAAM,GAAG,MAAM,KAAKK,aAAL,CACnBF,SADmB,EAEnBC,iBAAiB,CAACH,UAFC,EAGnBG,iBAAiB,CAACd,OAHC,CAArB;YAKA,OAAO,KAAKgB,qBAAL,CAA2BN,MAA3B,CAAP;UACD,CAd0D;;UAgB3DO,oBAAoB,CAACC,IAAD,EAAO;YACzBA,IAAI,CAACC,GAAL,GAAW,CAAC,GAAGjO,IAAI,GAAGkO,aAAX,EAA0BxB,UAA1B,EAAsCyB,IAAjD;UACD;;QAlB0D,CAA9C,CAAf;QAoBA7H,SAAS,CACP,CAAC,KAAKM,iBAAL,CAAuBnF,GAAvB,CAA2BmL,QAA3B,CADM,EAEN,kCAAiCA,QAAS,4CAFpC,CAAT;;QAKA,KAAKhG,iBAAL,CAAuBzE,GAAvB,CAA2ByK,QAA3B,EAAqCY,MAArC;;QAEAT,gBAAgB;MACjB,CA7BD,CA6BE,OAAOqB,KAAP,EAAc;QACdpB,eAAe,CAACoB,KAAD,CAAf;QACA,MAAMA,KAAN;MACD;IACF;;IAED,MAAMZ,MAAM,GAAG,KAAK5G,iBAAL,CAAuBlF,GAAvB,CAA2BkL,QAA3B,CAAf;;IAEAtG,SAAS,CACPkH,MADO,EAEP,sFAFO,CAAT;IAIA,OAAOA,MAAP;EACD;;EAEDK,aAAa,CAACF,SAAD,EAAYU,qBAAZ,EAAmCvB,OAAnC,EAA4C;IACvD,IAAI,KAAKwB,UAAT,EAAqB;MACnB,KAAKC,2BAAL,CACE,kFADF;;MAIAC,OAAO,CAACC,QAAR,GAAmB,CAAnB;MACA;IACD;;IAED,IAAId,SAAS,KAAK,eAAlB,EAAmC;MACjC,MAAMe,SAAS,GAAG,KAAK9H,iBAAL,CAAuBlF,GAAvB,CAA2B,eAA3B,CAAlB;;MAEA,IAAIgN,SAAJ,EAAe;QACb,OAAOA,SAAP;MACD;;MAED,MAAMC,OAAO,GAAG,KAAKC,gBAAL,CAAsBP,qBAAtB,EAA6CvB,OAA7C,CAAhB;;MAEA,KAAKlG,iBAAL,CAAuBzE,GAAvB,CAA2B,eAA3B,EAA4CwM,OAA5C;;MAEA,OAAOA,OAAP;IACD;;IAED,IAAIhB,SAAS,CAACpD,UAAV,CAAqB,SAArB,CAAJ,EAAqC;MACnCoD,SAAS,GAAG,CAAC,GAAG3N,IAAI,GAAG6O,aAAX,EAA0BlB,SAA1B,CAAZ;IACD;;IAED,MAAM,CAAC5N,IAAD,EAAO4M,KAAP,IAAgBgB,SAAS,CAACmB,KAAV,CAAgB,GAAhB,CAAtB;;IAEA,IACE,KAAKC,WAAL,CACEV,qBADF,EAEEtO,IAFF,EAGE,KAAK+F,yBAHP,EAIE;MACEmD,UAAU,EAAE,KAAKV;IADnB,CAJF,CADF,EASE;MACA,OAAO,KAAKyG,UAAL,CAAgBX,qBAAhB,EAAuCtO,IAAvC,EAA6C+M,OAA7C,CAAP;IACD;;IAED,MAAMmC,QAAQ,GAAG,KAAKC,cAAL,CAAoBb,qBAApB,EAA2CtO,IAA3C,EAAiD;MAChEkJ,UAAU,EAAE,KAAKV;IAD+C,CAAjD,CAAjB;;IAIA,IACE,KAAKvB,SAAL,CAAemG,YAAf,CAA4B8B,QAA5B,KACA,KAAK/F,wBAAL,CAA8B+F,QAA9B,CAFF,EAGE;MACA,OAAO,KAAKxC,aAAL,CAAmBwC,QAAnB,EAA6BtC,KAA7B,CAAP;IACD;;IAED,OAAO,KAAKwC,YAAL,CAAkBd,qBAAlB,EAAyCY,QAAzC,EAAmDnC,OAAnD,CAAP;EACD;;EAE0B,MAArBgB,qBAAqB,CAACN,MAAD,EAAS;IAClC,IAAI,KAAKc,UAAT,EAAqB;MACnB,KAAKC,2BAAL,CACE,kFADF;;MAIAC,OAAO,CAACC,QAAR,GAAmB,CAAnB;MACA;IACD;;IAED,IAAIjB,MAAM,CAAC4B,MAAP,KAAkB,UAAtB,EAAkC;MAChC;MACA;MACA,KAAKtI,oBAAL,CAA0B3E,GAA1B,CACEqL,MADF,EAEEA,MAAM,CAAC6B,IAAP,CAAY,CAAC1B,SAAD,EAAYC,iBAAZ,KACV,KAAKC,aAAL,CACEF,SADF,EAEEC,iBAAiB,CAACH,UAFpB,EAGEG,iBAAiB,CAACd,OAHpB,CADF,CAFF;IAUD;;IAED,MAAM,KAAKhG,oBAAL,CAA0BpF,GAA1B,CAA8B8L,MAA9B,CAAN;;IAEA,IAAIA,MAAM,CAAC4B,MAAP,KAAkB,QAAtB,EAAgC;MAC9B,MAAM5B,MAAM,CAAC8B,QAAP,EAAN;IACD;;IAED,OAAO9B,MAAP;EACD;;EAE0B,MAArB+B,qBAAqB,CAAC/G,IAAD,EAAOvE,UAAP,EAAmB;IAC5CqC,SAAS,CACPjC,wBADO,EAEP,8HAFO,CAAT;IAIA,MAAM,CAACtE,IAAD,EAAO4M,KAAP,IAAgB,CACpB1I,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4D,EADxC,EAEpB6K,KAFoB,CAEd,GAFc,CAAtB;;IAIA,MAAMpC,UAAU,GAAG,KAAKwC,cAAL,CAAoB1G,IAApB,EAA0BzI,IAA1B,EAAgC;MACjDkJ,UAAU,EAAE,KAAKV;IADgC,CAAhC,CAAnB;;IAIA,MAAMiF,MAAM,GAAG,MAAM,KAAKf,aAAL,CAAmBC,UAAnB,EAA+BC,KAA/B,CAArB;IACA,OAAO,KAAKmB,qBAAL,CAA2BN,MAA3B,CAAP;EACD;;EAED2B,YAAY,CAAC3G,IAAD,EAAOkE,UAAP,EAAmBI,OAAnB,EAA4B;IACtC;IACA,MAAM0C,GAAG,GAAG,KAAKC,mBAAL,CAAyBjH,IAAzB,EAA+BkE,UAA/B,CAAZ;IACA,MAAMgD,aAAa,GAAG,KAAKC,eAAL,CAAqBjD,UAArB,CAAtB;IACA,MAAMkD,UAAU,GAAG,CAAC,GAAGF,aAAJ,EAAmBjF,MAAnB,CAA0BoF,UAAU,IAAI;MACzD;MACA,IAAIA,UAAU,KAAK,SAAnB,EAA8B;QAC5B,OAAO,KAAP;MACD;;MAED,OAAOvQ,MAAM,CAAC0C,cAAP,CAAsBC,IAAtB,CAA2BuN,GAA3B,EAAgCK,UAAhC,CAAP;IACD,CAPkB,CAAnB;IAQA,MAAMrC,MAAM,GAAG,KAAKvN,GAAG,GAAGqE,eAAX,EACb,CAAC,GAAGsL,UAAJ,EAAgB,SAAhB,CADa,EAEb,YAAY;MACVA,UAAU,CAACjH,OAAX,CAAmBkH,UAAU,IAAI;QAC/B;QACA,KAAKC,SAAL,CAAeD,UAAf,EAA2BL,GAAG,CAACK,UAAD,CAA9B;MACD,CAHD,EADU,CAIN;;MAEJ,KAAKC,SAAL,CAAe,SAAf,EAA0BN,GAA1B;IACD,CATY,EAUb;MACE1C,OADF;MAEEW,UAAU,EAAEf;IAFd,CAVa,CAAf;IAeA,OAAOqD,uBAAuB,CAACvC,MAAD,CAA9B;EACD;;EAEe,MAAVwB,UAAU,CAACxG,IAAD,EAAOvE,UAAP,EAAmB6I,OAAnB,EAA4B;IAC1C,MAAMhE,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKvB,mBADU,EAEfgB,IAFe,EAGfvE,UAHe,EAIf;MACEgF,UAAU,EAAE,KAAKV;IADnB,CAJe,CAAjB;;IASA,IAAI,KAAKnC,mBAAL,CAAyB3E,GAAzB,CAA6BqH,QAA7B,CAAJ,EAA4C;MAC1C,OAAO,KAAK1C,mBAAL,CAAyB1E,GAAzB,CAA6BoH,QAA7B,CAAP;IACD;;IAED,IAAI,KAAKzC,oBAAL,CAA0B5E,GAA1B,CAA8BqH,QAA9B,CAAJ,EAA6C;MAC3C,MAAMkH,cAAc,GAAG,MAAM,KAAK3J,oBAAL,CAA0B3E,GAA1B,CAC3BoH,QAD2B,CAClB;MADkB,GAA7B;MAGA,MAAM0E,MAAM,GAAG,KAAKvN,GAAG,GAAGqE,eAAX,EACbhF,MAAM,CAAC2Q,IAAP,CAAYD,cAAZ,CADa,EAEb,YAAY;QACV1Q,MAAM,CAAC4Q,OAAP,CAAeF,cAAf,EAA+BrH,OAA/B,CAAuC,SAAkB;UAAA,IAAjB,CAAC7G,GAAD,EAAMrC,KAAN,CAAiB;UACvD;UACA,KAAKqQ,SAAL,CAAehO,GAAf,EAAoBrC,KAApB;QACD,CAHD;MAID,CAPY,EAQb;QACEqN,OADF;QAEEW,UAAU,EAAExJ;MAFd,CARa,CAAf;;MAcA,KAAKmC,mBAAL,CAAyBjE,GAAzB,CAA6B2G,QAA7B,EAAuC0E,MAAvC;;MAEA,OAAOuC,uBAAuB,CAACvC,MAAD,CAA9B;IACD;;IAED,MAAM,IAAIlB,KAAJ,CAAU,+CAAV,CAAN;EACD;;EAEDqD,eAAe,CAACjD,UAAD,EAAa;IAC1B,IAAIyD,qBAAJ,EAA2BC,sBAA3B;;IAEA,MAAMC,kBAAkB,GAAG,KAAKxJ,gBAAL,CAAsBnF,GAAtB,CAA0BgL,UAA1B,CAA3B;;IAEA,IAAI2D,kBAAJ,EAAwB;MACtB,OAAOA,kBAAP;IACD;;IAED,MAAM/C,eAAe,GACnB,CAAC6C,qBAAqB,GACpB,CAACC,sBAAsB,GAAG,KAAK/I,eAAL,CAAqB3F,GAArB,CAAyBgL,UAAzB,CAA1B,MACE,IADF,IACU0D,sBAAsB,KAAK,KAAK,CAD1C,GAEI,KAAK,CAFT,GAGIA,sBAAsB,CAACE,IAJ7B,MAIuC,IAJvC,IAKAH,qBAAqB,KAAK,KAAK,CAL/B,GAMIA,qBANJ,GAOI,KAAKI,QAAL,CAAc7D,UAAd,CARN;IASA,MAAM;MAAClN,OAAD;MAAUgR;IAAV,IAAuB,CAAC,GAAGtQ,eAAe,GAAGuQ,KAAtB,EAA6BnD,eAA7B,CAA7B;IACA,MAAMoD,YAAY,GAAG,IAAIzN,GAAJ,CAAQzD,OAAR,CAArB;IACAgR,SAAS,CAAC7H,OAAV,CAAkBgI,QAAQ,IAAI;MAC5B,MAAM1B,QAAQ,GAAG,KAAKC,cAAL,CAAoBxC,UAApB,EAAgCiE,QAAhC,EAA0C;QACzD1H,UAAU,EAAE,KAAKV;MADwC,CAA1C,CAAjB;;MAIA,MAAM/I,OAAO,GAAG,KAAKmQ,eAAL,CAAqBV,QAArB,CAAhB;MACAzP,OAAO,CAACmJ,OAAR,CAAgB+H,YAAY,CAACE,GAA7B,EAAkCF,YAAlC;IACD,CAPD;;IASA,KAAK7J,gBAAL,CAAsB1E,GAAtB,CAA0BuK,UAA1B,EAAsCgE,YAAtC;;IAEA,OAAOA,YAAP;EACD;;EAEDG,aAAa,CAACrI,IAAD,EAAOvE,UAAP,EAAmBoF,OAAnB,EAAqD;IAAA,IAAzByH,eAAyB,uEAAP,KAAO;;IAChE,IAAIC,qBAAJ;;IAEA,MAAMC,UAAU,GACd,CAACD,qBAAqB,GACpB1H,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GACI,KAAK,CADT,GAEIA,OAAO,CAAC1G,gBAHd,MAGoC,IAHpC,IAIAoO,qBAAqB,KAAK,KAAK,CAJ/B,GAKIA,qBALJ,GAMI,KAPN;;IASA,MAAMjI,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKxB,aADU,EAEfiB,IAFe,EAGfvE,UAHe,EAIf+M,UAAU,GACNhI,SADM,GAEN;MACEC,UAAU,EAAE,KAAKR;IADnB,CANW,CAAjB;;IAWA,IAAIiE,UAAJ,CAvBgE,CAuBhD;IAChB;;IAEA,MAAMuE,cAAc,GAAGhN,UAAU,IAAI,KAAK+C,SAAL,CAAekK,SAAf,CAAyBjN,UAAzB,CAArC;;IAEA,MAAMkN,UAAU,GACdlN,UAAU,IAAI,KAAK+C,SAAL,CAAeoK,aAAf,CAA6B5I,IAA7B,EAAmCvE,UAAnC,CADhB;;IAGA,IACE,EAAEoF,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC1G,gBAApD,KACA,CAACmO,eADD,IAEA,CAACG,cAFD,IAGAE,UAHA,IAIAA,UAAU,KAAK,KAAKnL,+BAJpB,IAKA,KAAKJ,mBAAL,CAAyBlE,GAAzB,CAA6BoH,QAA7B,MAA2C,KAN7C,EAOE;MACA4D,UAAU,GAAGyE,UAAb;IACD;;IAED,IAAIlN,UAAU,IAAI,KAAK+C,SAAL,CAAemG,YAAf,CAA4BlJ,UAA5B,CAAlB,EAA2D;MACzD,OAAO,KAAKoN,kBAAL,CACLpN,UADK,EAELM,sCAFK,CAAP;IAID;;IAED,IAAI,CAACmI,UAAL,EAAiB;MACfA,UAAU,GAAG,KAAKwC,cAAL,CACX1G,IADW,EAEXvE,UAFW,EAGX+M,UAAU,GACNhI,SADM,GAEN;QACEC,UAAU,EAAE,KAAKR;MADnB,CALO,CAAb;IASD;;IAED,IAAI,KAAKS,wBAAL,CAA8BwD,UAA9B,CAAJ,EAA+C;MAC7C;MACA,MAAM0B,KAAK,GAAG,IAAI9B,KAAJ,CACX,sCAAqCI,UAAW,EADrC,CAAd,CAF6C,CAI1C;;MAEH0B,KAAK,CAACkC,IAAN,GAAa,iBAAb;MACA,MAAMlC,KAAN;IACD;;IAED,IAAIkD,cAAJ;;IAEA,IAAIN,UAAJ,EAAgB;MACdM,cAAc,GAAG,KAAKvL,uBAAtB;IACD,CAFD,MAEO,IAAI,KAAKU,uBAAT,EAAkC;MACvC6K,cAAc,GAAG,KAAK7K,uBAAtB;IACD,CAFM,MAEA;MACL6K,cAAc,GAAG,KAAK3K,eAAtB;IACD;;IAED,MAAM6G,MAAM,GAAG8D,cAAc,CAAC5P,GAAf,CAAmBgL,UAAnB,CAAf;;IAEA,IAAIc,MAAJ,EAAY;MACV,OAAOA,MAAM,CAAChO,OAAd;IACD,CArF+D,CAqF9D;IACF;IACA;;;IAEA,MAAM+R,WAAW,GAAG;MAClBC,QAAQ,EAAE,EADQ;MAElBhS,OAAO,EAAE,EAFS;MAGlBiS,QAAQ,EAAE/E,UAHQ;MAIlBgF,EAAE,EAAEhF,UAJc;MAKlBiF,MAAM,EAAE,KALU;MAMlB5R,IAAI,EAAEA,IAAI,GAAG6R,OAAP,CAAelF,UAAf;IANY,CAApB;IAQA4E,cAAc,CAACnP,GAAf,CAAmBuK,UAAnB,EAA+B6E,WAA/B;;IAEA,IAAI;MACF,KAAKM,WAAL,CACEN,WADF,EAEE/I,IAFF,EAGEvE,UAHF,EAIEyI,UAJF,EAKErD,OALF,EAMEiI,cANF;IAQD,CATD,CASE,OAAOlD,KAAP,EAAc;MACdkD,cAAc,CAACQ,MAAf,CAAsBpF,UAAtB;MACA,MAAM0B,KAAN;IACD;;IAED,OAAOmD,WAAW,CAAC/R,OAAnB;EACD;;EAEDuS,qBAAqB,CAACvJ,IAAD,EAAOwJ,EAAP,EAAW;IAC9B,IAAIA,EAAJ,EAAQ;MACN,IAAIC,qBAAJ;;MAEA,MAAMnS,OAAO,GAAG,CACd,CAACmS,qBAAqB,GAAGtS,YAAY,GAAGuS,aAAxC,MAA2D,IAA3D,IACED,qBAAqB,KAAK,KAAK,CADjC,GAEIA,qBAFJ,GAGItS,YAAY,GAAGwS,qBAJL,EAKd3J,IALc,CAAhB;;MAOA,IAAIxF,iDAAiD,CAACvB,GAAlD,CAAsDuQ,EAAtD,CAAJ,EAA+D;QAC7D,OAAOlS,OAAO,CAACkS,EAAD,CAAd;MACD;;MAED,MAAMI,iBAAiB,GAAG,CAAC,GAAGpR,QAAQ,CAACqR,+BAAb,EACxBL,EADwB,CAA1B;;MAIA,IAAII,iBAAJ,EAAuB;QACrB,OAAOtS,OAAO,CAACsS,iBAAD,CAAd;MACD;IACF;;IAED,OAAO,KAAKvB,aAAL,CAAmBrI,IAAnB,EAAyBwJ,EAAzB,EAA6B;MAClCrP,gBAAgB,EAAE,IADgB;MAElCC,qBAAqB,EAAEJ,cAFW;MAGlCK,2BAA2B,EAAE,KAHK;MAIlCC,iBAAiB,EAAE,KAJe;MAKlCC,qBAAqB,EAAE;IALW,CAA7B,CAAP;EAOD;;EAEDuP,aAAa,CAAC9J,IAAD,EAAOvE,UAAP,EAAmB;IAC9B,OAAO,KAAK4M,aAAL,CAAmBrI,IAAnB,EAAyBvE,UAAzB,EAAqC+E,SAArC,EAAgD,IAAhD,CAAP;EACD;;EAEDuJ,WAAW,CAAC/J,IAAD,EAAOvE,UAAP,EAAmB;IAC5B,IAAIuO,qBAAJ;;IAEA,MAAM1J,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKxB,aADU,EAEfiB,IAFe,EAGfvE,UAHe,EAIf;MACEgF,UAAU,EAAE,KAAKR;IADnB,CAJe,CAAjB;;IASA,IACE,CAAC+J,qBAAqB,GAAG,KAAK9L,qBAA9B,MAAyD,IAAzD,IACA8L,qBAAqB,KAAK,KAAK,CAD/B,IAEAA,qBAAqB,CAAC/Q,GAAtB,CAA0BqH,QAA1B,CAHF,EAIE;MACA,OAAO,KAAKpC,qBAAL,CAA2BhF,GAA3B,CAA+BoH,QAA/B,CAAP;IACD,CAND,MAMO,IAAI,KAAK3C,aAAL,CAAmB1E,GAAnB,CAAuBqH,QAAvB,CAAJ,EAAsC;MAC3C,OAAO,KAAK3C,aAAL,CAAmBzE,GAAnB,CAAuBoH,QAAvB,CAAP;IACD;;IAED,MAAM2J,YAAY,GAAG,KAAK/L,qBAAL,IAA8B,KAAKP,aAAxD;;IAEA,IAAI,KAAKD,cAAL,CAAoBzE,GAApB,CAAwBqH,QAAxB,CAAJ,EAAuC;MACrC;MACA,MAAM0E,MAAM,GAAG,KAAKtH,cAAL,CAAoBxE,GAApB,CAAwBoH,QAAxB,GAAf;;MAEA2J,YAAY,CAACtQ,GAAb,CAAiB2G,QAAjB,EAA2B0E,MAA3B;MACA,OAAOA,MAAP;IACD;;IAED,MAAMkF,gBAAgB,GAAG,KAAK1L,SAAL,CAAeoK,aAAf,CAA6B5I,IAA7B,EAAmCvE,UAAnC,CAAzB;;IAEA,IAAIyI,UAAU,GACZ,KAAK1F,SAAL,CAAeoK,aAAf,CAA6B5I,IAA7B,EAAmCvE,UAAnC,KACA,KAAKiL,cAAL,CAAoB1G,IAApB,EAA0BvE,UAA1B,EAAsC;MACpCgF,UAAU,EAAE,KAAKR;IADmB,CAAtC,CAFF;;IAMA,IAAIkK,YAAY,GACdD,gBAAgB,IAChB,CAAC,KAAK1L,SAAL,CAAe4L,qBAAf,CAAqCpK,IAArC,EAA2CvE,UAA3C,CAFH;;IAIA,IAAI,CAAC0O,YAAL,EAAmB;MACjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAME,SAAS,GAAG9S,IAAI,GAAG6R,OAAP,CAAelF,UAAf,CAAlB;MACA,MAAMoG,cAAc,GAAG/S,IAAI,GAAGgT,QAAP,CAAgBrG,UAAhB,CAAvB;MACA,MAAMsG,mBAAmB,GAAGjT,IAAI,GAAGqI,IAAP,CAC1ByK,SAD0B,EAE1B,WAF0B,EAG1BC,cAH0B,CAA5B;;MAMA,IAAIxS,EAAE,GAAG2S,UAAL,CAAgBD,mBAAhB,CAAJ,EAA0C;QACxCL,YAAY,GAAG,IAAf;QACAjG,UAAU,GAAGsG,mBAAb;MACD;IACF;;IAED,IAAIL,YAAJ,EAAkB;MAChB,MAAMpB,WAAW,GAAG;QAClBC,QAAQ,EAAE,EADQ;QAElBhS,OAAO,EAAE,EAFS;QAGlBiS,QAAQ,EAAE/E,UAHQ;QAIlBgF,EAAE,EAAEhF,UAJc;QAKlBiF,MAAM,EAAE,KALU;QAMlB5R,IAAI,EAAEA,IAAI,GAAG6R,OAAP,CAAelF,UAAf;MANY,CAApB;;MASA,KAAKmF,WAAL,CACEN,WADF,EAEE/I,IAFF,EAGEvE,UAHF,EAIEyI,UAJF,EAKE1D,SALF,EAMEyJ,YANF;;MASAA,YAAY,CAACtQ,GAAb,CAAiB2G,QAAjB,EAA2ByI,WAAW,CAAC/R,OAAvC;IACD,CApBD,MAoBO;MACL;MACAiT,YAAY,CAACtQ,GAAb,CAAiB2G,QAAjB,EAA2B,KAAKoK,aAAL,CAAmB1K,IAAnB,EAAyBvE,UAAzB,CAA3B;IACD;;IAED,OAAOwO,YAAY,CAAC/Q,GAAb,CAAiBoH,QAAjB,CAAP;EACD;;EAED+I,WAAW,CACTN,WADS,EAET/I,IAFS,EAGTvE,UAHS,EAITyI,UAJS,EAKTrD,OALS,EAMTiI,cANS,EAOT;IACA,IAAIvR,IAAI,GAAGoT,OAAP,CAAezG,UAAf,MAA+B,OAAnC,EAA4C;MAC1C,MAAM0G,IAAI,GAAG,CAAC,GAAG5S,SAAS,GAAGd,OAAhB,EAAyB,KAAK6Q,QAAL,CAAc7D,UAAd,CAAzB,CAAb;;MAEA,MAAM2G,eAAe,GAAG,KAAKpM,kBAAL,CAAwBqM,aAAxB,CACtB5G,UADsB,EAEtB,KAAK6G,6BAAL,CAAmClK,OAAnC,CAFsB,EAGtB+J,IAHsB,CAAxB;;MAMA7B,WAAW,CAAC/R,OAAZ,GACE,KAAKmG,YAAL,CAAkB6N,MAAlB,CAAyBC,IAAzB,CAA8BhD,KAA9B,CAAoC4C,eAApC,CADF;IAED,CAXD,MAWO,IAAItT,IAAI,GAAGoT,OAAP,CAAezG,UAAf,MAA+B,OAAnC,EAA4C;MACjD6E,WAAW,CAAC/R,OAAZ,GAAsBM,OAAO,CAAC4M,UAAD,CAA7B;IACD,CAFM,MAEA;MACL;MACA,MAAMgH,QAAQ,GAAGzP,UAAU,GAAGuE,IAAH,GAAU,IAArC;;MAEA,KAAKmL,WAAL,CAAiBpC,WAAjB,EAA8BlI,OAA9B,EAAuCiI,cAAvC,EAAuDoC,QAAvD;IACD;;IAEDnC,WAAW,CAACI,MAAZ,GAAqB,IAArB;EACD;;EAED4B,6BAA6B,GAAoC;IAAA,IAAnClK,OAAmC,uEAAzB3G,uBAAyB;IAC/D,OAAO,EAAC,GAAG2G,OAAJ;MAAa,GAAG,KAAK5D;IAArB,CAAP;EACD;;EAEDgK,mBAAmB,CAACjH,IAAD,EAAOvE,UAAP,EAAmB;IACpC;IACA,IAAIA,UAAU,KAAK,eAAnB,EAAoC;MAClC;MACA,OAAO,KAAK2P,gBAAL,CAAsBpL,IAAtB,CAAP;IACD;;IAED,IAAI;MACF,IACE,KAAKuG,WAAL,CAAiBvG,IAAjB,EAAuBvE,UAAvB,EAAmC,KAAK2B,mBAAxC,EAA6D;QAC3DqD,UAAU,EAAE,KAAKR;MAD0C,CAA7D,CADF,EAIE;QACA,OAAO,KAAK8J,WAAL,CAAiB/J,IAAjB,EAAuBvE,UAAvB,CAAP;MACD,CAND,MAMO;QACL,OAAO,KAAK4M,aAAL,CAAmBrI,IAAnB,EAAyBvE,UAAzB,CAAP;MACD;IACF,CAVD,CAUE,OAAO4P,CAAP,EAAU;MACV,MAAMC,cAAc,GAClBjT,YAAY,GAAGnB,OAAf,CAAuBqU,0BAAvB,CAAkDF,CAAlD,CADF;;MAGA,IAAIC,cAAJ,EAAoB;QAClB,IACEA,cAAc,CAACE,gCAAf,KAAoD,IAApD,IACAF,cAAc,CAACE,gCAAf,KAAoDhL,SAFtD,EAGE;UACA8K,cAAc,CAACG,IAAf,GAAsB,CAAC,GAAGjT,QAAQ,CAACkT,6BAAb,EACpB,KAAK1O,OAAL,CAAa4F,oBADO,EAEpB5C,IAFoB,EAGpBsL,cAAc,CAAC7P,UAAf,IAA6BA,UAHT,CAAtB;UAKA6P,cAAc,CAACE,gCAAf,GAAkDtJ,OAAO,CACvDoJ,cAAc,CAACG,IADwC,CAAzD;QAGD;;QAEDH,cAAc,CAACK,YAAf,CAA4B,KAAK3O,OAAL,CAAagF,OAAzC;QACA,MAAMsJ,cAAN;MACD;;MAED,MAAMD,CAAN;IACD;EACF;;EAEDO,cAAc,CAACC,EAAD,EAAK;IACjB,IAAI,KAAK5N,uBAAL,IAAgC,KAAKC,qBAAzC,EAAgE;MAC9D,MAAM,IAAI4F,KAAJ,CACJ,gEADI,CAAN;IAGD;;IAED,KAAK7F,uBAAL,GAA+B,IAAIZ,GAAJ,EAA/B;IACA,KAAKa,qBAAL,GAA6B,IAAIb,GAAJ,EAA7B;;IAEA,IAAI;MACFwO,EAAE;IACH,CAFD,SAEU;MACR,IAAIC,qBAAJ,EAA2BC,sBAA3B,CADQ,CAGR;;;MACA,CAACD,qBAAqB,GAAG,KAAK7N,uBAA9B,MAA2D,IAA3D,IACA6N,qBAAqB,KAAK,KAAK,CAD/B,GAEI,KAAK,CAFT,GAGIA,qBAAqB,CAACE,KAAtB,EAHJ;MAIA,CAACD,sBAAsB,GAAG,KAAK7N,qBAA/B,MAA0D,IAA1D,IACA6N,sBAAsB,KAAK,KAAK,CADhC,GAEI,KAAK,CAFT,GAGIA,sBAAsB,CAACC,KAAvB,EAHJ;MAIA,KAAK/N,uBAAL,GAA+B,IAA/B;MACA,KAAKC,qBAAL,GAA6B,IAA7B;IACD;EACF;;EAEDyC,YAAY,GAAG;IACb,IAAIsL,sBAAJ,EAA4BC,sBAA5B;;IAEA,CAACD,sBAAsB,GAAG,KAAKhO,uBAA/B,MAA4D,IAA5D,IACAgO,sBAAsB,KAAK,KAAK,CADhC,GAEI,KAAK,CAFT,GAGIA,sBAAsB,CAACD,KAAvB,EAHJ;IAIA,CAACE,sBAAsB,GAAG,KAAKhO,qBAA/B,MAA0D,IAA1D,IACAgO,sBAAsB,KAAK,KAAK,CADhC,GAEI,KAAK,CAFT,GAGIA,sBAAsB,CAACF,KAAvB,EAHJ;IAIA,KAAK/N,uBAAL,GAA+B,IAA/B;IACA,KAAKC,qBAAL,GAA6B,IAA7B;;IAEA,KAAKP,aAAL,CAAmBqO,KAAnB;;IAEA,KAAK7N,eAAL,CAAqB6N,KAArB;;IAEA,KAAK5N,iBAAL,CAAuB4N,KAAvB;;IAEA,KAAK3N,gBAAL,CAAsB2N,KAAtB;;IAEA,KAAKpO,mBAAL,CAAyBoO,KAAzB;;IAEA,IAAI,KAAK7O,YAAT,EAAuB;MACrB,IAAI,KAAKA,YAAL,CAAkB6N,MAAtB,EAA8B;QAC5B,MAAMmB,SAAS,GAAG,KAAKhP,YAAL,CAAkB6N,MAApC;QACAlU,MAAM,CAAC2Q,IAAP,CAAY0E,SAAZ,EAAuBhM,OAAvB,CAA+B7G,GAAG,IAAI;UACpC,MAAM8S,UAAU,GAAGD,SAAS,CAAC7S,GAAD,CAA5B;;UAEA,IACE,CAAE,OAAO8S,UAAP,KAAsB,QAAtB,IAAkCA,UAAU,KAAK,IAAlD,IACC,OAAOA,UAAP,KAAsB,UADxB,KAEAA,UAAU,CAACC,eAAX,KAA+B,IAHjC,EAIE;YACAD,UAAU,CAACE,SAAX;UACD;QACF,CAVD;MAWD;;MAED,IAAI,KAAKnP,YAAL,CAAkBqC,UAAtB,EAAkC;QAChC,KAAKrC,YAAL,CAAkBqC,UAAlB,CAA6B+M,cAA7B;MACD;IACF;EACF;;EAEsB,MAAjBC,iBAAiB,GAAG;IACxB,KAAKC,uBAAL,GACE,KAAK9U,kBAAkB,GAAG+U,oBAA1B,GADF;IAEA,MAAM,KAAKD,uBAAL,CAA6BE,kBAA7B,EAAN;EACD;;EAE6B,MAAxBC,wBAAwB,GAAG;IAC/B,IAAI,CAAC,KAAKH,uBAAV,EAAmC;MACjC,MAAM,IAAI3I,KAAJ,CAAU,6CAAV,CAAN;IACD;;IAED,KAAK+I,iBAAL,GACE,MAAM,KAAKJ,uBAAL,CAA6BK,iBAA7B,EADR;EAED;;EAEDC,sBAAsB,GAAG;IACvB,OAAO,CAAC,GAAGxU,SAAS,GAAGyU,cAAhB,EACL,KAAK7P,YAAL,CAAkB6N,MAAlB,CAAyBiC,YADpB,CAAP;EAGD;;EAEDC,wBAAwB,GAAG;IACzB,IAAI,CAAC,KAAKL,iBAAV,EAA6B;MAC3B,MAAM,IAAI/I,KAAJ,CAAU,8CAAV,CAAN;IACD;;IAED,OAAO,KAAK+I,iBAAL,CACJ5K,MADI,CACGkL,GAAG,IAAIA,GAAG,CAAC1H,GAAJ,CAAQ1D,UAAR,CAAmB,SAAnB,CADV,EAEJxG,GAFI,CAEA4R,GAAG,KAAK,EAAC,GAAGA,GAAJ;MAAS1H,GAAG,EAAE,CAAC,GAAGjO,IAAI,GAAG6O,aAAX,EAA0B8G,GAAG,CAAC1H,GAA9B;IAAd,CAAL,CAFH,EAGJxD,MAHI,CAIH,CACEkL,GADF,CACM;IADN,KAGEA,GAAG,CAAC1H,GAAJ,CAAQ1D,UAAR,CAAmB,KAAK/E,OAAL,CAAagF,OAAhC,KACA,KAAKnD,eAAL,CAAqB5F,GAArB,CAAyBkU,GAAG,CAAC1H,GAA7B,CADA,IAEA,CAAC,GAAGxN,UAAU,GAAGmV,gBAAjB,EACED,GAAG,CAAC1H,GADN,EAEE,KAAKxI,gBAFP,EAGE,KAAKD,OAHP,CATC,EAeJzB,GAfI,CAeA8R,MAAM,IAAI;MACb,MAAMxC,eAAe,GAAG,KAAKhM,eAAL,CAAqB3F,GAArB,CAAyBmU,MAAM,CAAC5H,GAAhC,CAAxB;;MAEA,OAAO;QACL6H,mBAAmB,EAAEzC,eADhB;QAELwC;MAFK,CAAP;IAID,CAtBI,CAAP;EAuBD;;EAEDE,aAAa,GAAG;IACd,OAAO,KAAK3O,kBAAZ;EACD;;EAED4O,OAAO,CAACxN,IAAD,EAAOvE,UAAP,EAAmBgS,WAAnB,EAAgC5M,OAAhC,EAAyC;IAC9C,IAAIA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC6M,OAAtD,EAA+D;MAC7D,MAAMC,QAAQ,GAAG,KAAKnP,SAAL,CAAeoP,aAAf,CAA6B5N,IAA7B,EAAmCvE,UAAnC,CAAjB;;MAEA,KAAKsD,aAAL,CAAmBpF,GAAnB,CAAuBgU,QAAvB,EAAiC,IAAjC;IACD;;IAED,MAAMrN,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKxB,aADU,EAEfiB,IAFe,EAGfvE,UAHe,EAIf;MACEgF,UAAU,EAAE,KAAKR;IADnB,CAJe,CAAjB;;IASA,KAAK7C,mBAAL,CAAyBzD,GAAzB,CAA6B2G,QAA7B,EAAuC,IAAvC;;IAEA,KAAK5C,cAAL,CAAoB/D,GAApB,CAAwB2G,QAAxB,EAAkCmN,WAAlC;EACD;;EAEDI,aAAa,CAAC7N,IAAD,EAAOvE,UAAP,EAAmBgS,WAAnB,EAAgC5M,OAAhC,EAAyC;IACpD,IAAIA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC6M,OAAtD,EAA+D;MAC7D,MAAMC,QAAQ,GAAG,KAAKnP,SAAL,CAAeoP,aAAf,CAA6B5N,IAA7B,EAAmCvE,UAAnC,CAAjB;;MAEA,KAAKuD,mBAAL,CAAyBrF,GAAzB,CAA6BgU,QAA7B,EAAuC,IAAvC;IACD;;IAED,MAAMrN,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKvB,mBADU,EAEfgB,IAFe,EAGfvE,UAHe,EAIf;MACEgF,UAAU,EAAE,KAAKV;IADnB,CAJe,CAAjB;;IASA,KAAKzC,yBAAL,CAA+B3D,GAA/B,CAAmC2G,QAAnC,EAA6C,IAA7C;;IAEA,KAAKzC,oBAAL,CAA0BlE,GAA1B,CAA8B2G,QAA9B,EAAwCmN,WAAxC;EACD;;EAEDK,eAAe,GAAG;IAChB,KAAK9P,aAAL,CAAmB8P,eAAnB;EACD;;EAEDC,aAAa,GAAG;IACd,KAAK/P,aAAL,CAAmB+P,aAAnB;EACD;;EAEDC,aAAa,GAAG;IACd,KAAKhQ,aAAL,CAAmBgQ,aAAnB;EACD;;EAEDC,QAAQ,GAAG;IACT,KAAKH,eAAL;IACA,KAAKC,aAAL;IACA,KAAKpN,YAAL;;IAEA,KAAKpD,uBAAL,CAA6ByO,KAA7B;;IAEA,KAAKvO,WAAL,GAAmB,IAAnB;;IAEA,KAAKC,cAAL,CAAoBsO,KAApB;;IAEA,KAAKnO,oBAAL,CAA0BmO,KAA1B;;IAEA,KAAK9M,kBAAL,CAAwB8M,KAAxB;;IAEA,KAAK7M,sBAAL,CAA4B6M,KAA5B;;IAEA,KAAK5M,wCAAL,CAA8C4M,KAA9C;;IAEA,KAAK5O,mBAAL,CAAyB4O,KAAzB;;IAEA,KAAK1O,yBAAL,CAA+B0O,KAA/B;;IAEA,KAAK3M,qBAAL,CAA2B2M,KAA3B;;IAEA,KAAKjN,aAAL,CAAmBiN,KAAnB;;IAEA,KAAKhN,mBAAL,CAAyBgN,KAAzB;;IAEA,KAAKjP,QAAL,CAAciP,KAAd;;IAEA,KAAKtM,WAAL,GAAmBc,SAAnB;;IAEA,KAAK5B,kBAAL,CAAwBoN,KAAxB;;IAEA,KAAKnN,eAAL,CAAqBmN,KAArB;;IAEA,KAAKlN,oBAAL,CAA0BkN,KAA1B;;IAEA,KAAK/M,gBAAL,CAAsB+M,KAAtB;IACA,KAAKa,iBAAL,GAAyB,EAAzB;IACA,KAAKJ,uBAAL,GAA+BjM,SAA/B;IACA,KAAK0N,qBAAL,GAA6B1N,SAA7B;IACA,KAAKsF,UAAL,GAAkB,IAAlB;EACD;;EAEDY,cAAc,CAAC1G,IAAD,EAAOwJ,EAAP,EAAW3I,OAAX,EAAoB;IAChC,OAAO2I,EAAE,GAAG,KAAKhL,SAAL,CAAe6G,aAAf,CAA6BrF,IAA7B,EAAmCwJ,EAAnC,EAAuC3I,OAAvC,CAAH,GAAqDb,IAA9D;EACD;;EAEDmO,eAAe,CAACnO,IAAD,EAAOvE,UAAP,EAAiC;IAAA,IAAdoF,OAAc,uEAAJ,EAAI;;IAC9C,IAAIpF,UAAU,IAAI,IAAlB,EAAwB;MACtB,MAAM,IAAIqI,KAAJ,CACJ,qFADI,CAAN;IAGD;;IAED,IAAIvM,IAAI,GAAG6W,UAAP,CAAkB3S,UAAlB,CAAJ,EAAmC;MACjC,MAAMuJ,MAAM,GAAG,KAAKxG,SAAL,CAAe6P,4BAAf,CACb5S,UADa,EAEbA,UAFa,EAGb;QACEgF,UAAU,EAAE,KAAKR,aADnB;QAEEqO,KAAK,EAAE;MAFT,CAHa,CAAf;;MASA,IAAItJ,MAAJ,EAAY;QACV,OAAOA,MAAP;MACD;IACF,CAbD,MAaO;MACL,MAAM;QAACsJ;MAAD,IAAUzN,OAAhB;;MAEA,IAAIyN,KAAJ,EAAW;QACT,KAAK,MAAMC,CAAX,IAAgBD,KAAhB,EAAuB;UACrB,MAAME,YAAY,GAAGjX,IAAI,GAAGmN,OAAP,CAAe1E,IAAf,EAAqB,IAArB,EAA2BuO,CAA3B,CAArB;;UAEA,MAAMvJ,MAAM,GAAG,KAAKxG,SAAL,CAAe6P,4BAAf,CACbG,YADa,EAEb/S,UAFa,EAED;UACZ;YACEgF,UAAU,EAAE,KAAKR,aADnB;YAEEqO,KAAK,EAAE,CAACE,YAAD;UAFT,CAHa,CAAf;;UASA,IAAIxJ,MAAJ,EAAY;YACV,OAAOA,MAAP;UACD;QACF;;QAED,MAAM,KAAK3M,YAAY,GAAGnB,OAAf,CAAuBuX,mBAA5B,EACH,0BAAyBhT,UAAW,kBAAiB6S,KAAK,CAAC1O,IAAN,CACpD,MADoD,CAEpD,WAAUI,IAAK,EAHb,CAAN;MAKD;IACF;;IAED,IAAI;MACF,OAAO,KAAK0G,cAAL,CAAoB1G,IAApB,EAA0BvE,UAA1B,EAAsC;QAC3CgF,UAAU,EAAE,KAAKR;MAD0B,CAAtC,CAAP;IAGD,CAJD,CAIE,OAAOyO,GAAP,EAAY;MACZ,MAAM1J,MAAM,GAAG,KAAKxG,SAAL,CAAeoK,aAAf,CAA6B5I,IAA7B,EAAmCvE,UAAnC,CAAf;;MAEA,IAAIuJ,MAAJ,EAAY;QACV,OAAOA,MAAP;MACD,CAFD,MAEO;QACL,MAAM0J,GAAN;MACD;IACF;EACF;;EAEDC,oBAAoB,CAAC3O,IAAD,EAAOvE,UAAP,EAAmB;IACrC,IAAIA,UAAU,IAAI,IAAlB,EAAwB;MACtB,MAAM,IAAIqI,KAAJ,CACJ,2FADI,CAAN;IAGD;;IAED,IAAI,CAACrI,UAAU,CAACH,MAAhB,EAAwB;MACtB,MAAM,IAAIwI,KAAJ,CACJ,2EADI,CAAN;IAGD;;IAED,IAAIrI,UAAU,CAAC,CAAD,CAAV,KAAkB,GAAtB,EAA2B;MACzB,OAAO,CAAClE,IAAI,GAAGmN,OAAP,CAAe1E,IAAf,EAAqB,IAArB,CAAD,CAAP;IACD;;IAED,IAAI,KAAKxB,SAAL,CAAemG,YAAf,CAA4BlJ,UAA5B,CAAJ,EAA6C;MAC3C,OAAO,IAAP;IACD;;IAED,OAAO,KAAK+C,SAAL,CAAeoQ,cAAf,CAA8BrX,IAAI,GAAGmN,OAAP,CAAe1E,IAAf,EAAqB,IAArB,CAA9B,CAAP;EACD;;EAEDmL,WAAW,CAACpC,WAAD,EAAclI,OAAd,EAAuBiI,cAAvB,EAAuC9I,IAAvC,EAA6C;IACtD,IAAI,KAAK8F,UAAT,EAAqB;MACnB,KAAKC,2BAAL,CACE,kFADF;;MAIAC,OAAO,CAACC,QAAR,GAAmB,CAAnB;MACA;IACD,CARqD,CAQpD;;;IAEF,IAAI,CAAC,KAAK9I,YAAL,CAAkB6N,MAAvB,EAA+B;MAC7B;IACD;;IAED,MAAMhG,MAAM,GAAG+D,WAAf;IACA,MAAME,QAAQ,GAAGjE,MAAM,CAACiE,QAAxB;IACA,MAAM4F,uBAAuB,GAAG,KAAK3R,6BAArC;IACA,KAAKA,6BAAL,GAAqC+L,QAArC;IACA,MAAM6F,2BAA2B,GAAG,KAAKtR,+BAAzC;IACA,KAAKA,+BAAL,GAAuCyL,QAAvC;IACAjE,MAAM,CAACgE,QAAP,GAAkB,EAAlB;IACAlS,MAAM,CAACC,cAAP,CAAsBiO,MAAtB,EAA8B,QAA9B,EAAwC;MACtCnL,UAAU,EAAE,IAD0B;;MAGtCX,GAAG,GAAG;QACJ,MAAMI,GAAG,GAAG0G,IAAI,IAAI,EAApB;QACA,OAAO8I,cAAc,CAAC5P,GAAf,CAAmBI,GAAnB,KAA2B,IAAlC;MACD;;IANqC,CAAxC;IAQA0L,MAAM,CAACsJ,KAAP,GAAe,KAAK9P,SAAL,CAAeoQ,cAAf,CAA8B5J,MAAM,CAACzN,IAArC,CAAf;IACAT,MAAM,CAACC,cAAP,CAAsBiO,MAAtB,EAA8B,SAA9B,EAAyC;MACvC/N,KAAK,EAAE,KAAK8X,4BAAL,CAAkC/J,MAAlC,EAA0CnE,OAA1C;IADgC,CAAzC;IAGA,MAAMiE,eAAe,GAAG,KAAKkK,aAAL,CAAmB/F,QAAnB,EAA6BpI,OAA7B,CAAxB;IACA,IAAIoO,gBAAgB,GAAG,IAAvB;IACA,MAAMC,MAAM,GAAG,KAAKC,oBAAL,CAA0BrK,eAA1B,EAA2CmE,QAA3C,CAAf;IACA,IAAImG,SAAS,GAAG,IAAhB;;IAEA,MAAMC,SAAS,GAAG,KAAKlS,YAAL,CAAkBkH,YAAlB,EAAlB;;IAEA,IAAIgL,SAAJ,EAAe;MACbD,SAAS,GAAGF,MAAM,CAACI,YAAP,CAAoBD,SAApB,EAA+B;QACzCpG;MADyC,CAA/B,CAAZ;IAGD;;IAED,IAAImG,SAAS,KAAK,IAAlB,EAAwB;MACtBH,gBAAgB,GAAGG,SAAS,CAACxT,oBAAD,CAA5B;IACD;;IAED,IAAIqT,gBAAgB,KAAK,IAAzB,EAA+B;MAC7B,KAAKlJ,2BAAL,CACE,kFADF;;MAIAC,OAAO,CAACC,QAAR,GAAmB,CAAnB;MACA;IACD;;IAED,MAAMsJ,UAAU,GAAG,KAAKC,oBAAL,CAA0BvG,QAA1B,CAAnB;;IAEA,KAAKhK,gBAAL,CAAsBtF,GAAtB,CAA0BsP,QAA1B,EAAoCsG,UAApC;IACA,MAAME,QAAQ,GAAG,CACf,KAAKzS,OAAL,CAAa0S,aAAb,GAA6BH,UAA7B,GAA0C/O,SAD3B,EACsC;IACrD,GAAG,KAAKxD,OAAL,CAAa2S,YAAb,CAA0BpU,GAA1B,CAA8BqU,cAAc,IAAI;MACjD,IAAI,KAAKzS,YAAL,CAAkB6N,MAAlB,CAAyB4E,cAAzB,CAAJ,EAA8C;QAC5C,OAAO,KAAKzS,YAAL,CAAkB6N,MAAlB,CAAyB4E,cAAzB,CAAP;MACD;;MAED,MAAM,IAAI9L,KAAJ,CACH,uBAAsB8L,cAAe,sGADlC,CAAN;IAGD,CARE,CAFY,CAAjB;;IAaA,IAAI,CAAC,KAAKnS,WAAN,IAAqBwL,QAAQ,KAAK,KAAK1K,SAA3C,EAAsD;MACpD,KAAKd,WAAL,GAAmBuH,MAAnB;IACD;;IAEDlO,MAAM,CAACC,cAAP,CAAsBiO,MAAtB,EAA8B,MAA9B,EAAsC;MACpCnL,UAAU,EAAE,IADwB;MAEpC5C,KAAK,EAAE,KAAKwG;IAFwB,CAAtC;;IAKA,IAAI;MACFwR,gBAAgB,CAACxV,IAAjB,CACEuL,MAAM,CAAChO,OADT,EAEEgO,MAFF,EAEU;MACRA,MAAM,CAAChO,OAHT,EAGkB;MAChBgO,MAAM,CAAC1N,OAJT,EAIkB;MAChB0N,MAAM,CAACzN,IALT,EAKe;MACbyN,MAAM,CAACiE,QANT,EAMmB;MACjB;MACA,GAAGwG,QAAQ,CAACxN,MAAT,CAAgB4N,QAAhB,CARL;IAUD,CAXD,CAWE,OAAOjK,KAAP,EAAc;MACd,KAAKkK,oBAAL,CAA0BlK,KAA1B,EAAiCZ,MAAjC;IACD;;IAED,KAAKxH,+BAAL,GAAuCsR,2BAAvC;IACA,KAAK5R,6BAAL,GAAqC2R,uBAArC;EACD;;EAEDG,aAAa,CAAC/F,QAAD,EAAWpI,OAAX,EAAoB;IAC/B,MAAMkP,MAAM,GAAG,KAAKhI,QAAL,CAAckB,QAAd,CAAf;;IAEA,IAAIpI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC1G,gBAAtD,EAAwE;MACtE,OAAO4V,MAAP;IACD;;IAED,IAAIlF,eAAe,GAAG,KAAKhM,eAAL,CAAqB3F,GAArB,CAAyB+P,QAAzB,CAAtB;;IAEA,IAAI4B,eAAJ,EAAqB;MACnB,OAAOA,eAAe,CAAC/C,IAAvB;IACD;;IAED+C,eAAe,GAAG,KAAKpM,kBAAL,CAAwBuR,SAAxB,CAChB/G,QADgB,EAEhB,KAAK8B,6BAAL,CAAmClK,OAAnC,CAFgB,EAGhBkP,MAHgB,CAAlB;;IAMA,KAAKlR,eAAL,CAAqBlF,GAArB,CAAyBsP,QAAzB,EAAmC,EACjC,GAAG4B,eAD8B;MAEjCoF,aAAa,EAAE,KAAKC,2BAAL,GAAmC5U;IAFjB,CAAnC;;IAKA,IAAIuP,eAAe,CAACsF,aAApB,EAAmC;MACjC,KAAKvR,kBAAL,CAAwBjF,GAAxB,CAA4BsP,QAA5B,EAAsC4B,eAAe,CAACsF,aAAtD;IACD;;IAED,OAAOtF,eAAe,CAAC/C,IAAvB;EACD;;EAEuB,MAAlB/C,kBAAkB,CAACkE,QAAD,EAAWpI,OAAX,EAAoB;IAC1C,MAAMkP,MAAM,GAAG,KAAKhI,QAAL,CAAckB,QAAd,CAAf;;IAEA,IAAIpI,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC1G,gBAAtD,EAAwE;MACtE,OAAO4V,MAAP;IACD;;IAED,IAAIlF,eAAe,GAAG,KAAKhM,eAAL,CAAqB3F,GAArB,CAAyB+P,QAAzB,CAAtB;;IAEA,IAAI4B,eAAJ,EAAqB;MACnB,OAAOA,eAAe,CAAC/C,IAAvB;IACD;;IAED+C,eAAe,GAAG,MAAM,KAAKpM,kBAAL,CAAwB2R,cAAxB,CACtBnH,QADsB,EAEtB,KAAK8B,6BAAL,CAAmClK,OAAnC,CAFsB,EAGtBkP,MAHsB,CAAxB;;IAMA,KAAKlR,eAAL,CAAqBlF,GAArB,CAAyBsP,QAAzB,EAAmC,EAAC,GAAG4B,eAAJ;MAAqBoF,aAAa,EAAE;IAApC,CAAnC;;IAEA,IAAIpF,eAAe,CAACsF,aAApB,EAAmC;MACjC,KAAKvR,kBAAL,CAAwBjF,GAAxB,CAA4BsP,QAA5B,EAAsC4B,eAAe,CAACsF,aAAtD;IACD;;IAED,OAAOtF,eAAe,CAAC/C,IAAvB;EACD;;EAEDqH,oBAAoB,CAACkB,YAAD,EAAepH,QAAf,EAAyB;IAC3C,IAAI;MACF,MAAMqH,cAAc,GAAG,KAAK9R,SAAL,CAAemG,YAAf,CAA4BsE,QAA5B,IAClB,oBAAmBA,QAAS,EADV,GAEnBA,QAFJ;MAGA,OAAO,KAAKxR,GAAG,GAAG8Y,MAAX,EAAmB,KAAKC,uBAAL,CAA6BH,YAA7B,CAAnB,EAA+D;QACpEI,aAAa,EAAE,IADqD;QAEpExH,QAAQ,EAAEqH,cAF0D;QAGpE;QACApL,uBAAuB,EAAE,MAAMC,SAAN,IAAmB;UAC1C,IAAIuL,qBAAJ,EAA2BC,mBAA3B;;UAEA7S,SAAS,CACPjC,wBADO,EAEP,8HAFO,CAAT;UAIA,MAAMyI,OAAO,GACX,CAACoM,qBAAqB,GAAG,CAACC,mBAAmB,GAAG,KAAKxT,YAA5B,EACtBkH,YADH,MACqB,IADrB,IAC6BqM,qBAAqB,KAAK,KAAK,CAD5D,GAEI,KAAK,CAFT,GAGIA,qBAAqB,CAACjX,IAAtB,CAA2BkX,mBAA3B,CAJN;UAKA7S,SAAS,CAACwG,OAAD,EAAU,qCAAV,CAAT;UACA,MAAMU,MAAM,GAAG,MAAM,KAAKK,aAAL,CACnBF,SADmB,EAEnBmL,cAFmB,EAGnBhM,OAHmB,CAArB;UAKA,OAAO,KAAKgB,qBAAL,CAA2BN,MAA3B,CAAP;QACD;MAvBmE,CAA/D,CAAP;IAyBD,CA7BD,CA6BE,OAAOqG,CAAP,EAAU;MACV,MAAM,CAAC,GAAGpT,UAAU,GAAG2Y,0BAAjB,EAA6CvF,CAA7C,CAAN;IACD;EACF;;EAEDxC,kBAAkB,CAACpN,UAAD,EAAaoV,aAAb,EAA4B;IAC5C,MAAMC,uBAAuB,GAC3BD,aAAa,IAAIpV,UAAU,CAACsG,UAAX,CAAsB,OAAtB,CAAjB,GACItG,UAAU,CAACsV,KAAX,CAAiB,QAAQzV,MAAzB,CADJ,GAEIG,UAHN;;IAKA,IAAIqV,uBAAuB,KAAK,SAAhC,EAA2C;MACzC,OAAO,KAAK3T,YAAL,CAAkB6N,MAAlB,CAAyBhF,OAAhC;IACD;;IAED,IAAI8K,uBAAuB,KAAK,QAAhC,EAA0C;MACxC,OAAO,KAAKE,sBAAL,EAAP;IACD;;IAED,OAAO1Z,OAAO,CAACwZ,uBAAD,CAAd;EACD;;EAEDjM,iBAAiB,CAACpJ,UAAD,EAAa6I,OAAb,EAAsB;IACrC,MAAM2M,QAAQ,GAAG,KAAKpI,kBAAL,CACfpN,UADe,EAEfO,qCAFe,CAAjB;;IAKA,MAAMgJ,MAAM,GAAG,KAAKvN,GAAG,GAAGqE,eAAX,EACb,CAAC,SAAD,EAAY,GAAGhF,MAAM,CAAC2Q,IAAP,CAAYwJ,QAAZ,CAAf,CADa,EAEb,YAAY;MACV;MACA,KAAK3J,SAAL,CAAe,SAAf,EAA0B2J,QAA1B;MACAna,MAAM,CAAC4Q,OAAP,CAAeuJ,QAAf,EAAyB9Q,OAAzB,CAAiC,SAAkB;QAAA,IAAjB,CAAC7G,GAAD,EAAMrC,KAAN,CAAiB;QACjD;QACA,KAAKqQ,SAAL,CAAehO,GAAf,EAAoBrC,KAApB;MACD,CAHD;IAID,CATY,EASV;IACH;MACEqN,OADF;MAEEW,UAAU,EAAExJ;IAFd,CAVa,CAAf;IAeA,OAAO8L,uBAAuB,CAACvC,MAAD,CAA9B;EACD;;EAEDgM,sBAAsB,GAAG;IACvB,IAAI,KAAK9C,qBAAT,EAAgC;MAC9B,OAAO,KAAKA,qBAAZ;IACD;;IAED,MAAMxE,aAAa,GAAGxF,UAAU,IAAI;MAClC,MAAM+E,QAAQ,GACZ,OAAO/E,UAAP,KAAsB,QAAtB,GACIA,UAAU,CAACnC,UAAX,CAAsB,UAAtB,IACE,CAAC,GAAGvK,IAAI,GAAG6O,aAAX,EAA0B,KAAK7O,IAAI,GAAG0Z,GAAZ,EAAiBhN,UAAjB,CAA1B,CADF,GAEEA,UAHN,GAII,CAAC,GAAG1M,IAAI,GAAG6O,aAAX,EAA0BnC,UAA1B,CALN;;MAOA,IAAI,CAAC3M,IAAI,GAAG6W,UAAP,CAAkBnF,QAAlB,CAAL,EAAkC;QAChC,MAAMrD,KAAK,GAAG,IAAIuL,SAAJ,CACX,0GAAyGlI,QAAS,GADvG,CAAd,CADgC,CAG7B;;QAEHrD,KAAK,CAACkC,IAAN,GAAa,sBAAb;QACA,MAAMlC,KAAN;MACD;;MAED,OAAO,KAAKmJ,4BAAL,CAAkC;QACvC/F,QAAQ,EAAE,EAD6B;QAEvChS,OAAO,EAAE,EAF8B;QAGvCiS,QAHuC;QAIvCC,EAAE,EAAED,QAJmC;QAKvCE,MAAM,EAAE,KAL+B;QAMvC5R,IAAI,EAAEA,IAAI,GAAG6R,OAAP,CAAeH,QAAf;MANiC,CAAlC,CAAP;IAQD,CAzBD,CALuB,CA8BpB;;;IAEH,MAAMmI,MAAN,SAAqBja,YAAY,GAAGia,MAApC,CAA2C;;IAE3Cta,MAAM,CAAC4Q,OAAP,CAAevQ,YAAY,GAAGia,MAA9B,EAAsCjR,OAAtC,CAA8C,SAAkB;MAAA,IAAjB,CAAC7G,GAAD,EAAMrC,KAAN,CAAiB;MAC9D;MACAma,MAAM,CAAC9X,GAAD,CAAN,GAAcrC,KAAd;IACD,CAHD;IAIAma,MAAM,CAACA,MAAP,GAAgBA,MAAhB;;IAEA,IAAI,mBAAmBja,YAAY,EAAnC,EAAuC;MACrCia,MAAM,CAAC1H,aAAP,GAAuBA,aAAvB;IACD;;IAED,IAAI,2BAA2BvS,YAAY,EAA3C,EAA+C;MAC7Cia,MAAM,CAACzH,qBAAP,GAA+B,SAASA,qBAAT,CAA+BV,QAA/B,EAAyC;QACtE,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;UAChC,MAAMrD,KAAK,GAAG,IAAIuL,SAAJ,CACX,qDAAoDlI,QAAS,KAC5DA,QAAQ,YAAYzR,IAAI,GAAG0Z,GAA3B,GACI,sCADJ,GAEI,EACL,EALW,CAAd,CADgC,CAO7B;;UAEHtL,KAAK,CAACkC,IAAN,GAAa,sBAAb;UACA,MAAMlC,KAAN;QACD;;QAED,OAAO8D,aAAa,CAACT,QAAD,CAApB;MACD,CAfD;IAgBD;;IAED,IAAI,2BAA2B9R,YAAY,EAA3C,EAA+C;MAC7C;MACAia,MAAM,CAACC,qBAAP,GAA+B,SAASA,qBAAT,GAAiC,CAAE,CAAlE;IACD;;IAED,KAAKnD,qBAAL,GAA6BkD,MAA7B;IACA,OAAOA,MAAP;EACD;;EAED1G,aAAa,CAAC1K,IAAD,EAAOvE,UAAP,EAAmB;IAC9B,MAAMyI,UAAU,GACd,KAAK1F,SAAL,CAAe4L,qBAAf,CAAqCpK,IAArC,EAA2CvE,UAA3C,KACA,KAAKiL,cAAL,CAAoB1G,IAApB,EAA0BvE,UAA1B,EAAsC;MACpCgF,UAAU,EAAE,KAAKR;IADmB,CAAtC,CAFF;;IAMA,IAAI,CAAC,KAAKf,kBAAL,CAAwBjG,GAAxB,CAA4BiL,UAA5B,CAAL,EAA8C;MAC5C;MACA;MACA,KAAKhF,kBAAL,CAAwBvF,GAAxB,CACEuK,UADF,EAEE,KAAKlG,aAAL,CAAmBsT,WAAnB,CAA+B,EAA/B,KAAsC,EAFxC,EAH4C,CAMzC;MACH;MACA;MACA;;;MAEA,MAAMC,gBAAgB,GAAG,KAAK5T,aAA9B;MACA,MAAM6T,kBAAkB,GAAG,KAAKrT,eAAhC;MACA,KAAKR,aAAL,GAAqB,IAAIN,GAAJ,EAArB;MACA,KAAKc,eAAL,GAAuB,IAAId,GAAJ,EAAvB;MACA,MAAMoU,aAAa,GAAG,KAAKpJ,aAAL,CAAmBrI,IAAnB,EAAyBvE,UAAzB,CAAtB,CAf4C,CAegB;;MAE5D,KAAKkC,aAAL,GAAqB4T,gBAArB;MACA,KAAKpT,eAAL,GAAuBqT,kBAAvB;;MAEA,MAAME,YAAY,GAAG,KAAK1T,aAAL,CAAmBsT,WAAnB,CAA+BG,aAA/B,CAArB;;MAEA,IAAIC,YAAY,IAAI,IAApB,EAA0B;QACxB,MAAM,IAAI5N,KAAJ,CACH,gCAA+BI,UAAW,MAA3C,GACE,kDAFE,CAAN;MAID;;MAED,KAAKhF,kBAAL,CAAwBvF,GAAxB,CAA4BuK,UAA5B,EAAwCwN,YAAxC;IACD;;IAED,OAAO,KAAK1T,aAAL,CAAmB2T,oBAAnB,EACL;IACA,KAAKzS,kBAAL,CAAwBhG,GAAxB,CAA4BgL,UAA5B,CAFK,CAAP;EAID;;EAEDqC,WAAW,CAACvG,IAAD,EAAOvE,UAAP,EAAmBmW,kBAAnB,EAAuC/Q,OAAvC,EAAgD;IACzD,MAAMP,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKxB,aADU,EAEfiB,IAFe,EAGfvE,UAHe,EAIfoF,OAJe,CAAjB;;IAOA,MAAMvH,GAAG,GAAG0G,IAAI,GAAGzI,IAAI,GAAGsa,SAAd,GAA0BvR,QAAtC;;IAEA,IAAIsR,kBAAkB,CAAC3Y,GAAnB,CAAuBqH,QAAvB,CAAJ,EAAsC;MACpC;MACA,OAAOsR,kBAAkB,CAAC1Y,GAAnB,CAAuBoH,QAAvB,CAAP;IACD;;IAED,IACE,CAAC,KAAK5B,eAAN,IACA,KAAKF,SAAL,CAAemG,YAAf,CAA4BlJ,UAA5B,CADA,IAEA,KAAK2D,wCAAL,CAA8ClG,GAA9C,CAAkDI,GAAlD,CAHF,EAIE;MACA,OAAO,KAAP;IACD;;IAED,IAAI,KAAK6F,sBAAL,CAA4BlG,GAA5B,CAAgCqH,QAAhC,CAAJ,EAA+C;MAC7C;MACA,OAAO,KAAKnB,sBAAL,CAA4BjG,GAA5B,CAAgCoH,QAAhC,CAAP;IACD;;IAED,IAAI4D,UAAJ;;IAEA,IAAI;MACFA,UAAU,GAAG,KAAKwC,cAAL,CAAoB1G,IAApB,EAA0BvE,UAA1B,EAAsCoF,OAAtC,CAAb;IACD,CAFD,CAEE,OAAOwK,CAAP,EAAU;MACV,MAAM1C,UAAU,GAAG,KAAKnK,SAAL,CAAeoK,aAAf,CAA6B5I,IAA7B,EAAmCvE,UAAnC,CAAnB;;MAEA,IAAIkN,UAAJ,EAAgB;QACd,KAAKxJ,sBAAL,CAA4BxF,GAA5B,CAAgC2G,QAAhC,EAA0C,IAA1C;;QAEA,OAAO,IAAP;MACD;;MAED,MAAM+K,CAAN;IACD;;IAED,IAAI,KAAK3L,WAAL,IAAoB,KAAKA,WAAL,CAAiBoS,IAAjB,CAAsB5N,UAAtB,CAAxB,EAA2D;MACzD,KAAK/E,sBAAL,CAA4BxF,GAA5B,CAAgC2G,QAAhC,EAA0C,KAA1C;;MAEA,OAAO,KAAP;IACD,CAhDwD,CAgDvD;;;IAEF,MAAMyR,eAAe,GAAG,KAAKvT,SAAL,CAAe+B,WAAf,CACtB,KAAKxB,aADiB,EAEtBiB,IAFsB,EAGtBQ,SAHsB,EAItBK,OAJsB,CAAxB;;IAOA,IACE,KAAKxB,qBAAL,CAA2BnG,GAA3B,CAA+B6Y,eAA/B,MAAoD,KAApD,IACC/R,IAAI,CAACK,QAAL,CAActF,YAAd,KACCmJ,UAAU,CAAC7D,QAAX,CAAoBtF,YAApB,CADD,KAEG,KAAK2E,WAAL,IAAoB,KAAKA,WAAL,CAAiBoS,IAAjB,CAAsB9R,IAAtB,CAArB,IACC4R,kBAAkB,CAAC1Y,GAAnB,CAAuB6Y,eAAvB,MAA4C,KAH/C,CAFH,EAME;MACA,KAAK1S,qBAAL,CAA2B1F,GAA3B,CAA+B2G,QAA/B,EAAyC,KAAzC;;MAEA,KAAKlB,wCAAL,CAA8CzF,GAA9C,CAAkDL,GAAlD,EAAuD,IAAvD;;MAEA,OAAO,KAAP;IACD;;IAED,KAAK6F,sBAAL,CAA4BxF,GAA5B,CAAgC2G,QAAhC,EAA0C,IAA1C;;IAEA,OAAO,IAAP;EACD;;EAEDyO,4BAA4B,CAAC/O,IAAD,EAAOa,OAAP,EAAgB;IAC1C,MAAM6D,OAAO,GAAG,CAACjJ,UAAD,EAAauW,cAAb,KAAgC;MAC9C,MAAMvL,QAAQ,GAAG,KAAK0H,eAAL,CACfnO,IAAI,CAACiJ,QADU,EAEfxN,UAFe,EAGfuW,cAHe,CAAjB;;MAMA,IACEA,cAAc,KAAK,IAAnB,IACAA,cAAc,KAAK,KAAK,CADxB,IAEAA,cAAc,CAACtX,8BAAD,CAFd,IAGAmG,OAAO,KAAK,IAHZ,IAIAA,OAAO,KAAK,KAAK,CAJjB,IAKAA,OAAO,CAAC1G,gBANV,EAOE;QACA,OAAO,CAAC,GAAG3B,QAAQ,CAACyZ,uBAAb,EAAsCxL,QAAtC,CAAP;MACD;;MAED,OAAOA,QAAP;IACD,CAnBD;;IAqBA/B,OAAO,CAAC4J,KAAR,GAAgB7S,UAAU,IACxB,KAAKkT,oBAAL,CAA0B3O,IAAI,CAACiJ,QAA/B,EAAyCxN,UAAzC,CADF;;IAGA,MAAMyW,aAAa,GACjBrR,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAAC1G,gBAAlD,GACIsB,UAAU,IAAI,KAAK8N,qBAAL,CAA2BvJ,IAAI,CAACiJ,QAAhC,EAA0CxN,UAA1C,CADlB,GAEI,KAAKwL,mBAAL,CAAyBkL,IAAzB,CAA8B,IAA9B,EAAoCnS,IAAI,CAACiJ,QAAzC,CAHN;IAIAiJ,aAAa,CAACzP,UAAd,GAA2B3L,MAAM,CAACsL,MAAP,CAAc,IAAd,CAA3B;IACA8P,aAAa,CAACxN,OAAd,GAAwBA,OAAxB;;IAEAwN,aAAa,CAAClZ,KAAd,GAAsB,CAAC,MAAM;MAC3B;MACA,MAAMoZ,kBAAkB,GAAG,MAAM,IAAjC;;MAEA,OAAO,IAAIC,KAAJ,CAAUvb,MAAM,CAACsL,MAAP,CAAc,IAAd,CAAV,EAA+B;QACpCrL,cAAc,EAAEqb,kBADoB;QAEpCE,cAAc,EAAEF,kBAFoB;QAGpClZ,GAAG,EAAE,CAACqZ,OAAD,EAAUjZ,GAAV,KACH,OAAOA,GAAP,KAAe,QAAf,GAA0B,KAAK6E,eAAL,CAAqBjF,GAArB,CAAyBI,GAAzB,CAA1B,GAA0DkH,SAJxB;;QAMpCnH,wBAAwB,GAAG;UACzB,OAAO;YACLS,YAAY,EAAE,IADT;YAELD,UAAU,EAAE;UAFP,CAAP;QAID,CAXmC;;QAapCZ,GAAG,EAAE,CAACsZ,OAAD,EAAUjZ,GAAV,KACH,OAAOA,GAAP,KAAe,QAAf,IAA2B,KAAK6E,eAAL,CAAqBlF,GAArB,CAAyBK,GAAzB,CAdO;QAepCkZ,OAAO,EAAE,MAAMrX,KAAK,CAAC6E,IAAN,CAAW,KAAK7B,eAAL,CAAqBsJ,IAArB,EAAX,CAfqB;QAgBpC9N,GAAG,EAAEyY;MAhB+B,CAA/B,CAAP;IAkBD,CAtBqB,GAAtB;;IAwBAtb,MAAM,CAACC,cAAP,CAAsBmb,aAAtB,EAAqC,MAArC,EAA6C;MAC3CrY,UAAU,EAAE,IAD+B;MAE3C5C,KAAK,EAAE,KAAKwG;IAF+B,CAA7C;IAIA,OAAOyU,aAAP;EACD;;EAED1C,oBAAoB,CAACxP,IAAD,EAAO;IAAA;;IACzB,IAAIyS,qBAAJ,EAA2BC,sBAA3B;;IAEA,MAAMC,eAAe,GAAG,MAAM;MAC5B,KAAKjU,eAAL,GAAuB,KAAvB;MACA,OAAO6Q,UAAP;IACD,CAHD;;IAKA,MAAMqD,cAAc,GAAG,MAAM;MAC3B,KAAKlU,eAAL,GAAuB,IAAvB;MACA,OAAO6Q,UAAP;IACD,CAHD;;IAKA,MAAMsD,MAAM,GAAGpX,UAAU,IAAI;MAC3B,MAAM6E,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKxB,aADU,EAEfiB,IAFe,EAGfvE,UAHe,EAIf;QACEgF,UAAU,EAAE,KAAKR;MADnB,CAJe,CAAjB;;MASA,KAAK7C,mBAAL,CAAyBzD,GAAzB,CAA6B2G,QAA7B,EAAuC,KAAvC;;MAEA,OAAOiP,UAAP;IACD,CAbD;;IAeA,MAAMuD,UAAU,GAAGrX,UAAU,IAAI;MAC/B,MAAM6E,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKxB,aADU,EAEfiB,IAFe,EAGfvE,UAHe,EAIf;QACEgF,UAAU,EAAE,KAAKR;MADnB,CAJe,CAAjB;;MASA,KAAK7C,mBAAL,CAAyBzD,GAAzB,CAA6B2G,QAA7B,EAAuC,KAAvC;;MAEA,KAAKjB,qBAAL,CAA2B1F,GAA3B,CAA+B2G,QAA/B,EAAyC,KAAzC;;MAEA,OAAOiP,UAAP;IACD,CAfD;;IAiBA,MAAMwD,IAAI,GAAG,CAACtX,UAAD,EAAagS,WAAb,EAA0B5M,OAA1B,KAAsC;MACjD,IAAI4M,WAAW,KAAKjN,SAApB,EAA+B;QAC7B,OAAOwS,cAAc,CAACvX,UAAD,EAAagS,WAAb,EAA0B5M,OAA1B,CAArB;MACD;;MAED,MAAMP,QAAQ,GAAG,KAAK9B,SAAL,CAAe+B,WAAf,CACf,KAAKxB,aADU,EAEfiB,IAFe,EAGfvE,UAHe,EAIf;QACEgF,UAAU,EAAE,KAAKR;MADnB,CAJe,CAAjB;;MASA,KAAK7C,mBAAL,CAAyBzD,GAAzB,CAA6B2G,QAA7B,EAAuC,IAAvC;;MAEA,OAAOiP,UAAP;IACD,CAjBD;;IAmBA,MAAMyD,cAAc,GAAG,CAACvX,UAAD,EAAagS,WAAb,EAA0B5M,OAA1B,KAAsC;MAC3D,KAAK2M,OAAL,CAAaxN,IAAb,EAAmBvE,UAAnB,EAA+BgS,WAA/B,EAA4C5M,OAA5C;MACA,OAAO0O,UAAP;IACD,CAHD;;IAKA,MAAM0D,UAAU,GAAG,CAACxX,UAAD,EAAagS,WAAb,EAA0B5M,OAA1B,KAAsC;MACvD,IAAI,OAAO4M,WAAP,KAAuB,UAA3B,EAAuC;QACrC,MAAM,IAAI3J,KAAJ,CAAU,qDAAV,CAAN;MACD;;MAED,KAAK+J,aAAL,CAAmB7N,IAAnB,EAAyBvE,UAAzB,EAAqCgS,WAArC,EAAkD5M,OAAlD;MACA,OAAO0O,UAAP;IACD,CAPD;;IASA,MAAMvB,aAAa,GAAG,MAAM;MAC1B,KAAKA,aAAL;MACA,OAAOuB,UAAP;IACD,CAHD;;IAKA,MAAMxB,aAAa,GAAG,MAAM;MAC1B,KAAKA,aAAL;MACA,OAAOwB,UAAP;IACD,CAHD;;IAKA,MAAMzB,eAAe,GAAG,MAAM;MAC5B,KAAKA,eAAL;MACA,OAAOyB,UAAP;IACD,CAHD;;IAKA,MAAM2D,cAAc,GAAG,MAAM;MAC3B,IACE,KAAKpN,UAAL,IACA,EAAE,KAAK3I,YAAL,CAAkBqC,UAAlB,IAAgC,KAAKrC,YAAL,CAAkBsC,gBAApD,CAFF,EAGE;QACA,KAAKsG,2BAAL,CACE,oGADF;;QAIAC,OAAO,CAACC,QAAR,GAAmB,CAAnB;MACD;;MAED,OAAO,KAAK3G,yBAAZ;IACD,CAbD;;IAeA,MAAM6T,aAAa,GAAG,YAAqB;MAAA,IAApBC,IAAoB,uEAAb,QAAa;;MACzC,IAAIA,IAAI,KAAK,QAAb,EAAuB;QACrB,KAAI,CAAC9T,yBAAL,GAAiC,KAAI,CAACnC,YAAL,CAAkBqC,UAAnD;MACD,CAFD,MAEO;QACL,KAAI,CAACF,yBAAL,GAAiC,KAAI,CAACnC,YAAL,CAAkBsC,gBAAnD;MACD;;MAED,KAAI,CAACH,yBAAL,CAA+B6T,aAA/B;;MAEA,OAAO5D,UAAP;IACD,CAVD;;IAYA,MAAM8D,aAAa,GAAG,MAAM;MAC1BH,cAAc,GAAGG,aAAjB;;MAEA,OAAO9D,UAAP;IACD,CAJD;;IAMA,MAAM5O,YAAY,GAAG,MAAM;MACzB,KAAKA,YAAL;MACA,OAAO4O,UAAP;IACD,CAHD;;IAKA,MAAM3D,cAAc,GAAGC,EAAE,IAAI;MAC3B,KAAKD,cAAL,CAAoBC,EAApB;MACA,OAAO0D,UAAP;IACD,CAHD;;IAKA,MAAM1D,EAAE,GAAG,KAAK7N,aAAL,CAAmB6N,EAAnB,CAAsBsG,IAAtB,CAA2B,KAAKnU,aAAhC,CAAX;;IAEA,MAAMsV,KAAK,GAAG,KAAKtV,aAAL,CAAmBsV,KAAnB,CAAyBnB,IAAzB,CAA8B,KAAKnU,aAAnC,CAAd;;IAEA,MAAMuV,MAAM,GACV,CAACd,qBAAqB,GACpB,CAACC,sBAAsB,GAAG,KAAK1U,aAAL,CAAmBuV,MAA7C,MAAyD,IAAzD,IACAb,sBAAsB,KAAK,KAAK,CADhC,GAEI,KAAK,CAFT,GAGIA,sBAAsB,CAACP,IAAvB,CAA4B,KAAKnU,aAAjC,CAJN,MAI2D,IAJ3D,IAKAyU,qBAAqB,KAAK,KAAK,CAL/B,GAMIA,qBANJ,GAOI,MAAM;MACJ,MAAM,IAAI3O,KAAJ,CACJ,oEADI,CAAN;IAGD,CAZP;;IAcA,MAAM0P,UAAU,GAAGC,OAAO,IAAI;MAC5B,IAAI,KAAKtW,YAAL,CAAkB6N,MAAlB,CAAyB0I,OAA7B,EAAsC;QACpC,KAAKvW,YAAL,CAAkB6N,MAAlB,CAAyB0I,OAAzB,CAAiCC,yBAAjC,GAA6DF,OAA7D;MACD,CAFD,MAEO;QACL;QACA,KAAKtW,YAAL,CAAkB6N,MAAlB,CAAyBnQ,iBAAzB,IAA8C4Y,OAA9C;MACD;;MAED,OAAOlE,UAAP;IACD,CATD;;IAWA,MAAMqE,UAAU,GAAGC,cAAc,IAAI;MACnC;MACA,KAAK1W,YAAL,CAAkB6N,MAAlB,CAAyBlQ,gBAAzB,IAA6C+Y,cAA7C;MACA,OAAOtE,UAAP;IACD,CAJD;;IAMA,MAAMA,UAAU,GAAG;MACjBuE,mBAAmB,EAAEC,OAAO,IAC1Bb,cAAc,GAAGY,mBAAjB,CAAqCC,OAArC,CAFe;MAGjBC,wBAAwB,EAAEC,KAAK,IAC7Bf,cAAc,GAAGc,wBAAjB,CAA0CC,KAA1C,CAJe;MAKjBC,WAAW,EAAEvB,eALI;MAMjBwB,UAAU,EAAEvB,cANK;MAOjB5E,aAPiB;MAQjBzB,cAAc,EAAE,MAAM2G,cAAc,GAAG3G,cAAjB,EARL;MASjB6H,oBAAoB,EAAE3Y,UAAU,IAAI,KAAKiP,aAAL,CAAmB1K,IAAnB,EAAyBvE,UAAzB,CATnB;MAUjBqX,UAViB;MAWjBH,eAXiB;MAYjB0B,MAAM,EAAEtB,IAZS;MAajBuB,QAAQ,EAAEzB,MAbO;MAcjBD,cAdiB;MAejB/G,EAfiB;MAgBjB0I,iBAAiB,EAAE9Y,UAAU,IAAI,KAAKiP,aAAL,CAAmB1K,IAAnB,EAAyBvE,UAAzB,CAhBhB;MAiBjB+Y,iBAAiB,EAAE,MAAM;QACvB,MAAMhV,UAAU,GAAG0T,cAAc,EAAjC;;QAEA,IAAI1T,UAAU,KAAK,KAAKrC,YAAL,CAAkBsC,gBAArC,EAAuD;UACrD,OAAOD,UAAU,CAACgV,iBAAX,EAAP;QACD,CAFD,MAEO;UACL,MAAM,IAAIrD,SAAJ,CACJ,iEADI,CAAN;QAGD;MACF,CA3BgB;MA4BjBsD,aAAa,EAAE,MAAMvB,cAAc,GAAGuB,aAAjB,EA5BJ;MA6BjBC,cAAc,EAAE,KAAK1W,aAAL,CAAmB0W,cA7BlB;MA8BjB9I,cA9BiB;MA+BjBmH,IA/BiB;MAgCjBQ,MAhCiB;MAiCjBzJ,aAAa,EAAE,KAAKA,aAAL,CAAmBqI,IAAnB,CAAwB,IAAxB,EAA8BnS,IAA9B,CAjCE;MAkCjB+J,WAAW,EAAE,KAAKA,WAAL,CAAiBoI,IAAjB,CAAsB,IAAtB,EAA4BnS,IAA5B,CAlCI;MAmCjB+N,aAnCiB;MAoCjBpN,YApCiB;MAqCjBmN,eArCiB;MAsCjB8F,UAtCiB;MAuCjBe,gBAAgB,EAAE,MAAM;QACtB,MAAMnV,UAAU,GAAG0T,cAAc,EAAjC;;QAEA,IAAI1T,UAAU,KAAK,KAAKrC,YAAL,CAAkBqC,UAArC,EAAiD;UAC/CA,UAAU,CAACmV,gBAAX;QACD,CAFD,MAEO;UACL,MAAM,IAAIxD,SAAJ,CACJ,4DADI,CAAN;QAGD;MACF,CAjDgB;MAkDjByD,WAAW,EAAE,MAAM1B,cAAc,GAAG0B,WAAjB,EAlDF;MAmDjBC,YAAY,EAAE,MAAM3B,cAAc,GAAG2B,YAAjB,EAnDH;MAoDjBC,oBAAoB,EAAE,MAAM5B,cAAc,GAAG4B,oBAAjB,EApDX;MAqDjBtH,OAAO,EAAE,CAAC/R,UAAD,EAAasX,IAAb,KAAsBC,cAAc,CAACvX,UAAD,EAAa,MAAMsX,IAAnB,CArD5B;MAsDjBgC,aAAa,EAAEC,GAAG,IAAI;QACpB,MAAMxV,UAAU,GAAG0T,cAAc,EAAjC;;QAEA,IAAI1T,UAAU,KAAK,KAAKrC,YAAL,CAAkBsC,gBAArC,EAAuD;UACrDD,UAAU,CAACuV,aAAX,CAAyBC,GAAzB;QACD,CAFD,MAEO;UACL,MAAM,IAAI7D,SAAJ,CACJ,6DADI,CAAN;QAGD;MACF,CAhEgB;MAiEjBqC,UAjEiB;MAkEjBF,KAlEiB;MAmEjBT,MAnEiB;MAoEjBoC,mBAAmB,EAAEhC,UApEJ;MAqEjBE,aArEiB;MAsEjBE;IAtEiB,CAAnB;IAwEA,OAAO9D,UAAP;EACD;;EAEDxJ,2BAA2B,CAACmP,YAAD,EAAe;IACxC,MAAMvY,QAAQ,GAAG,KAAK4B,SAAL,GACZ,SAAQ,CAAC,GAAGxG,MAAM,GAAGb,OAAb,EACPK,IAAI,GAAG4d,QAAP,CAAgB,KAAKnY,OAAL,CAAagF,OAA7B,EAAsC,KAAKzD,SAA3C,CADO,CAEP,GAHW,GAIb,EAJJ;IAKA,MAAM6W,aAAa,GAAG,IAAIC,cAAJ,CAAoB,GAAEH,YAAa,GAAEvY,QAAS,EAA9C,EAAiD2Y,KAAjD,CACnBhP,KADmB,CACb,IADa,EACP;IADO,CAEnBrE,MAFmB,CAEZsT,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAaC,UAAb,MAA6B,CAAC,CAF1B,EAGnB7V,IAHmB,CAGd,IAHc,CAAtB;IAIA,MAAM;MAAC8V,OAAD;MAAUJ;IAAV,IAAmB,CAAC,GAAGnd,gBAAgB,GAAGwd,wBAAvB,EACvBP,aADuB,CAAzB;IAGAlU,OAAO,CAAC0E,KAAR,CACG,KAAI8P,OAAQ,IAAb,GACE,CAAC,GAAGvd,gBAAgB,GAAGyd,gBAAvB,EAAyCN,KAAzC,EAAgD,KAAKtY,OAArD,EAA8D;MAC5D6Y,YAAY,EAAE;IAD8C,CAA9D,CAFJ;EAMD;;EAEDrF,uBAAuB,CAACsF,OAAD,EAAU;IAC/B,OAAO,KAAK5F,2BAAL,KAAqC4F,OAArC,GAA+C,QAAtD;EACD;;EAED5F,2BAA2B,GAAG;IAC5B,MAAM6F,IAAI,GAAG,KAAKC,iCAAL,EAAb;IACA,OAAO,QAAQpa,oBAAR,GAAgC,cAAama,IAAI,CAACnW,IAAL,CAAU,GAAV,CAAe,IAAnE;EACD;;EAEDoW,iCAAiC,GAAG;IAClC,OAAO,CACL,QADK,EAEL,SAFK,EAGL,SAHK,EAIL,WAJK,EAKL,YALK,EAML,KAAKhZ,OAAL,CAAa0S,aAAb,GAA6B,MAA7B,GAAsClP,SANjC,EAOL,GAAG,KAAKxD,OAAL,CAAa2S,YAPX,EAQL1N,MARK,CAQE4N,QARF,CAAP;EASD;;EAEDC,oBAAoB,CAACzE,CAAD,EAAIrG,MAAJ,EAAY;IAC9B,MAAMiR,mBAAmB,GACvB5d,YAAY,GAAGnB,OAAf,CAAuBqU,0BAAvB,CAAkDF,CAAlD,CADF;;IAGA,IAAI4K,mBAAJ,EAAyB;MACvB,IAAI,CAACA,mBAAmB,CAACC,YAAzB,EAAuC;QACrCD,mBAAmB,CAACC,YAApB,GAAmC,CAAClR,MAAM,CAACiE,QAAP,IAAmBjE,MAAM,CAACkE,EAA3B,CAAnC;;QAEA,KAAK,IAAIiN,MAAM,GAAGnR,MAAM,CAACoR,MAAzB,EAAiCD,MAAjC,EAAyCA,MAAM,GAAGA,MAAM,CAACC,MAAzD,EAAiE;UAC/DH,mBAAmB,CAACC,YAApB,CAAiCG,IAAjC,CAAsCF,MAAM,CAAClN,QAAP,IAAmBkN,MAAM,CAACjN,EAAhE;QACD;;QAED+M,mBAAmB,CAACtK,YAApB,CAAiC,KAAK3O,OAAL,CAAagF,OAA9C;MACD;;MAED,MAAMiU,mBAAN;IACD;;IAED,MAAM5K,CAAN;EACD;;EAEDD,gBAAgB,CAACpL,IAAD,EAAO;IACrB,MAAMsW,IAAI,GAAG,KAAKrX,gBAAL,CAAsB/F,GAAtB,CAA0B8G,IAA1B,CAAb;IACAlC,SAAS,CAACwY,IAAD,EAAO,8CAAP,CAAT;IACA,OAAO,EAAC,GAAG,KAAKC,yBAAL,EAAJ;MAAsCD;IAAtC,CAAP;EACD;;EAEDlQ,gBAAgB,CAACpG,IAAD,EAAOsE,OAAP,EAAgB;IAC9B,IAAIgS,IAAI,GAAG,KAAKrX,gBAAL,CAAsB/F,GAAtB,CAA0B8G,IAA1B,CAAX;;IAEA,IAAI,CAACsW,IAAL,EAAW;MACTA,IAAI,GAAG,KAAK9G,oBAAL,CAA0BxP,IAA1B,CAAP;MACA,KAAKf,gBAAL,CAAsBtF,GAAtB,CAA0BqG,IAA1B,EAAgCsW,IAAhC;IACD;;IAED,MAAMnQ,OAAO,GAAG,EAAC,GAAG,KAAKoQ,yBAAL,EAAJ;MAAsCD;IAAtC,CAAhB;IACA,MAAMtR,MAAM,GAAG,KAAKvN,GAAG,GAAGqE,eAAX,EACbhF,MAAM,CAAC2Q,IAAP,CAAYtB,OAAZ,CADa,EAEb,YAAY;MACVrP,MAAM,CAAC4Q,OAAP,CAAevB,OAAf,EAAwBhG,OAAxB,CAAgC,SAAkB;QAAA,IAAjB,CAAC7G,GAAD,EAAMrC,KAAN,CAAiB;QAChD;QACA,KAAKqQ,SAAL,CAAehO,GAAf,EAAoBrC,KAApB;MACD,CAHD;IAID,CAPY,EAQb;MACEqN,OADF;MAEEW,UAAU,EAAE;IAFd,CARa,CAAf;IAaA,OAAOsC,uBAAuB,CAACvC,MAAD,CAA9B;EACD;;EAEDuR,yBAAyB,GAAG;IAC1B,IAAI,KAAKC,WAAT,EAAsB;MACpB,OAAO,EAAC,GAAG,KAAKA;MAAT,CAAP;IACD;;IAED,OAAO;MACLC,QAAQ,EAAE,KAAKtZ,YAAL,CAAkB6N,MAAlB,CAAyByL,QAD9B;MAELC,SAAS,EAAE,KAAKvZ,YAAL,CAAkB6N,MAAlB,CAAyB0L,SAF/B;MAGLC,SAAS,EAAE,KAAKxZ,YAAL,CAAkB6N,MAAlB,CAAyB2L,SAH/B;MAILC,UAAU,EAAE,KAAKzZ,YAAL,CAAkB6N,MAAlB,CAAyB4L,UAJhC;MAKLC,QAAQ,EAAE,KAAK1Z,YAAL,CAAkB6N,MAAlB,CAAyB6L,QAL9B;MAMLC,MAAM,EAAE,KAAK3Z,YAAL,CAAkB6N,MAAlB,CAAyB8L,MAN5B;MAOLC,SAAS,EAAE,KAAK5Z,YAAL,CAAkB6N,MAAlB,CAAyB+L,SAP/B;MAQLC,GAAG,EAAE,KAAK7Z,YAAL,CAAkB6N,MAAlB,CAAyBgM,GARzB;MASLC,EAAE,EAAE,KAAK9Z,YAAL,CAAkB6N,MAAlB,CAAyBiM,EATxB;MAULnF,IAAI,EAAE,KAAK3U,YAAL,CAAkB6N,MAAlB,CAAyB8G,IAV1B;MAWLoF,SAAS,EAAE,KAAK/Z,YAAL,CAAkB6N,MAAlB,CAAyBkM,SAX/B;MAYLC,GAAG,EAAE,KAAKha,YAAL,CAAkB6N,MAAlB,CAAyBmM,GAZzB;MAaLC,KAAK,EAAE,KAAKja,YAAL,CAAkB6N,MAAlB,CAAyBoM;IAb3B,CAAP;EAeD;;EAEDrP,QAAQ,CAACkB,QAAD,EAAW;IACjB,IAAI8G,MAAM,GAAG,KAAKhT,QAAL,CAAc7D,GAAd,CAAkB+P,QAAlB,CAAb;;IAEA,IAAI,CAAC8G,MAAL,EAAa;MACXA,MAAM,GAAGjY,EAAE,GAAGuf,YAAL,CAAkBpO,QAAlB,EAA4B,MAA5B,CAAT;;MAEA,KAAKlM,QAAL,CAAcpD,GAAd,CAAkBsP,QAAlB,EAA4B8G,MAA5B;IACD;;IAED,OAAOA,MAAP;EACD;;EAEDuH,oBAAoB,CAACnR,OAAD,EAAU;IAC5B,KAAKqQ,WAAL,GAAmBrQ,OAAnB;EACD;;AA9jEW;;AAikEdnP,OAAO,CAACE,OAAR,GAAkBkF,OAAlB;;AAEAxC,eAAe,CAACwC,OAAD,EAAU,kBAAV,EAA8BnE,UAAU,GAAGmV,gBAA3C,CAAf;;AAEA,SAAStP,SAAT,CAAmByZ,SAAnB,EAA8B7B,OAA9B,EAAuC;EACrC,IAAI,CAAC6B,SAAL,EAAgB;IACd,MAAM,IAAIzT,KAAJ,CAAU4R,OAAV,CAAN;EACD;AACF;;AAED,SAAS7F,QAAT,CAAkB5Y,KAAlB,EAAyB;EACvB,OAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKuJ,SAAnC;AACD;;AAED,eAAe+G,uBAAf,CAAuCvC,MAAvC,EAA+C;EAC7C,MAAMA,MAAM,CAAC6B,IAAP,CAAY,MAAM;IACtB,MAAM,IAAI/C,KAAJ,CAAU,0BAAV,CAAN;EACD,CAFK,CAAN;EAGA,MAAMkB,MAAM,CAAC8B,QAAP,EAAN;EACA,OAAO9B,MAAP;AACD"},"metadata":{},"sourceType":"script"}