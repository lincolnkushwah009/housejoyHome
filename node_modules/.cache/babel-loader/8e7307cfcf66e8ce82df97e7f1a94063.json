{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nclass BaseWatchPlugin {\n  constructor(_ref) {\n    let {\n      stdin,\n      stdout\n    } = _ref;\n\n    _defineProperty(this, '_stdin', void 0);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    this._stdin = stdin;\n    this._stdout = stdout;\n  }\n\n  apply(_hooks) {}\n\n  getUsageInfo(_globalConfig) {\n    return null;\n  }\n\n  onKey(_key) {}\n\n  run(_globalConfig, _updateConfigAndRun) {\n    return Promise.resolve();\n  }\n\n}\n\nvar _default = BaseWatchPlugin;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_defineProperty","obj","key","enumerable","configurable","writable","BaseWatchPlugin","constructor","stdin","stdout","_stdin","_stdout","apply","_hooks","getUsageInfo","_globalConfig","onKey","_key","run","_updateConfigAndRun","Promise","resolve","_default"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-watcher/build/BaseWatchPlugin.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass BaseWatchPlugin {\n  constructor({stdin, stdout}) {\n    _defineProperty(this, '_stdin', void 0);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    this._stdin = stdin;\n    this._stdout = stdout;\n  }\n\n  apply(_hooks) {}\n\n  getUsageInfo(_globalConfig) {\n    return null;\n  }\n\n  onKey(_key) {}\n\n  run(_globalConfig, _updateConfigAndRun) {\n    return Promise.resolve();\n  }\n}\n\nvar _default = BaseWatchPlugin;\nexports.default = _default;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCJ,KAAnC,EAA0C;EACxC,IAAII,GAAG,IAAID,GAAX,EAAgB;IACdN,MAAM,CAACC,cAAP,CAAsBK,GAAtB,EAA2BC,GAA3B,EAAgC;MAC9BJ,KAAK,EAAEA,KADuB;MAE9BK,UAAU,EAAE,IAFkB;MAG9BC,YAAY,EAAE,IAHgB;MAI9BC,QAAQ,EAAE;IAJoB,CAAhC;EAMD,CAPD,MAOO;IACLJ,GAAG,CAACC,GAAD,CAAH,GAAWJ,KAAX;EACD;;EACD,OAAOG,GAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMK,eAAN,CAAsB;EACpBC,WAAW,OAAkB;IAAA,IAAjB;MAACC,KAAD;MAAQC;IAAR,CAAiB;;IAC3BT,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,KAAK,CAAtB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,KAAK,CAAvB,CAAf;;IAEA,KAAKU,MAAL,GAAcF,KAAd;IACA,KAAKG,OAAL,GAAeF,MAAf;EACD;;EAEDG,KAAK,CAACC,MAAD,EAAS,CAAE;;EAEhBC,YAAY,CAACC,aAAD,EAAgB;IAC1B,OAAO,IAAP;EACD;;EAEDC,KAAK,CAACC,IAAD,EAAO,CAAE;;EAEdC,GAAG,CAACH,aAAD,EAAgBI,mBAAhB,EAAqC;IACtC,OAAOC,OAAO,CAACC,OAAR,EAAP;EACD;;AApBmB;;AAuBtB,IAAIC,QAAQ,GAAGhB,eAAf;AACAT,OAAO,CAACE,OAAR,GAAkBuB,QAAlB"},"metadata":{},"sourceType":"script"}