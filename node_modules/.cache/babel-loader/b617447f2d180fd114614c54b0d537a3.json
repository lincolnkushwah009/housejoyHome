{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\n\n\nclass ReporterDispatcher {\n  constructor() {\n    _defineProperty(this, '_reporters', void 0);\n\n    this._reporters = [];\n  }\n\n  register(reporter) {\n    this._reporters.push(reporter);\n  }\n\n  unregister(ReporterClass) {\n    this._reporters = this._reporters.filter(reporter => !(reporter instanceof ReporterClass));\n  }\n\n  async onTestFileResult(test, testResult, results) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestFileResult) {\n        await reporter.onTestFileResult(test, testResult, results);\n      } else if (reporter.onTestResult) {\n        await reporter.onTestResult(test, testResult, results);\n      }\n    } // Release memory if unused later.\n\n\n    testResult.coverage = undefined;\n    testResult.console = undefined;\n  }\n\n  async onTestFileStart(test) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestFileStart) {\n        await reporter.onTestFileStart(test);\n      } else if (reporter.onTestStart) {\n        await reporter.onTestStart(test);\n      }\n    }\n  }\n\n  async onRunStart(results, options) {\n    for (const reporter of this._reporters) {\n      reporter.onRunStart && (await reporter.onRunStart(results, options));\n    }\n  }\n\n  async onTestCaseResult(test, testCaseResult) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestCaseResult) {\n        await reporter.onTestCaseResult(test, testCaseResult);\n      }\n    }\n  }\n\n  async onRunComplete(contexts, results) {\n    for (const reporter of this._reporters) {\n      if (reporter.onRunComplete) {\n        await reporter.onRunComplete(contexts, results);\n      }\n    }\n  } // Return a list of last errors for every reporter\n\n\n  getErrors() {\n    return this._reporters.reduce((list, reporter) => {\n      const error = reporter.getLastError && reporter.getLastError();\n      return error ? list.concat(error) : list;\n    }, []);\n  }\n\n  hasErrors() {\n    return this.getErrors().length !== 0;\n  }\n\n}\n\nexports.default = ReporterDispatcher;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_defineProperty","obj","key","enumerable","configurable","writable","ReporterDispatcher","constructor","_reporters","register","reporter","push","unregister","ReporterClass","filter","onTestFileResult","test","testResult","results","onTestResult","coverage","undefined","console","onTestFileStart","onTestStart","onRunStart","options","onTestCaseResult","testCaseResult","onRunComplete","contexts","getErrors","reduce","list","error","getLastError","concat","hasErrors","length"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/@jest/core/build/ReporterDispatcher.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\nclass ReporterDispatcher {\n  constructor() {\n    _defineProperty(this, '_reporters', void 0);\n\n    this._reporters = [];\n  }\n\n  register(reporter) {\n    this._reporters.push(reporter);\n  }\n\n  unregister(ReporterClass) {\n    this._reporters = this._reporters.filter(\n      reporter => !(reporter instanceof ReporterClass)\n    );\n  }\n\n  async onTestFileResult(test, testResult, results) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestFileResult) {\n        await reporter.onTestFileResult(test, testResult, results);\n      } else if (reporter.onTestResult) {\n        await reporter.onTestResult(test, testResult, results);\n      }\n    } // Release memory if unused later.\n\n    testResult.coverage = undefined;\n    testResult.console = undefined;\n  }\n\n  async onTestFileStart(test) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestFileStart) {\n        await reporter.onTestFileStart(test);\n      } else if (reporter.onTestStart) {\n        await reporter.onTestStart(test);\n      }\n    }\n  }\n\n  async onRunStart(results, options) {\n    for (const reporter of this._reporters) {\n      reporter.onRunStart && (await reporter.onRunStart(results, options));\n    }\n  }\n\n  async onTestCaseResult(test, testCaseResult) {\n    for (const reporter of this._reporters) {\n      if (reporter.onTestCaseResult) {\n        await reporter.onTestCaseResult(test, testCaseResult);\n      }\n    }\n  }\n\n  async onRunComplete(contexts, results) {\n    for (const reporter of this._reporters) {\n      if (reporter.onRunComplete) {\n        await reporter.onRunComplete(contexts, results);\n      }\n    }\n  } // Return a list of last errors for every reporter\n\n  getErrors() {\n    return this._reporters.reduce((list, reporter) => {\n      const error = reporter.getLastError && reporter.getLastError();\n      return error ? list.concat(error) : list;\n    }, []);\n  }\n\n  hasErrors() {\n    return this.getErrors().length !== 0;\n  }\n}\n\nexports.default = ReporterDispatcher;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}