{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _ModuleNotFoundError = _interopRequireDefault(require('./ModuleNotFoundError'));\n\nvar _defaultResolver = _interopRequireDefault(require('./defaultResolver'));\n\nvar _fileWalkers = require('./fileWalkers');\n\nvar _isBuiltinModule = _interopRequireDefault(require('./isBuiltinModule'));\n\nvar _nodeModulesPaths = _interopRequireDefault(require('./nodeModulesPaths'));\n\nvar _shouldLoadAsEsm = _interopRequireWildcard(require('./shouldLoadAsEsm'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst NATIVE_PLATFORM = 'native'; // We might be inside a symlink.\n\nconst resolvedCwd = (0, _jestUtil().tryRealpath)(process.cwd());\nconst {\n  NODE_PATH\n} = process.env;\nconst nodePaths = NODE_PATH ? NODE_PATH.split(path().delimiter).filter(Boolean) // The resolver expects absolute paths.\n.map(p => path().resolve(resolvedCwd, p)) : undefined;\n\nclass Resolver {\n  constructor(moduleMap, options) {\n    _defineProperty(this, '_options', void 0);\n\n    _defineProperty(this, '_moduleMap', void 0);\n\n    _defineProperty(this, '_moduleIDCache', void 0);\n\n    _defineProperty(this, '_moduleNameCache', void 0);\n\n    _defineProperty(this, '_modulePathCache', void 0);\n\n    _defineProperty(this, '_supportsNativePlatform', void 0);\n\n    this._options = {\n      defaultPlatform: options.defaultPlatform,\n      extensions: options.extensions,\n      hasCoreModules: options.hasCoreModules === undefined ? true : options.hasCoreModules,\n      moduleDirectories: options.moduleDirectories || ['node_modules'],\n      moduleNameMapper: options.moduleNameMapper,\n      modulePaths: options.modulePaths,\n      platforms: options.platforms,\n      resolver: options.resolver,\n      rootDir: options.rootDir\n    };\n    this._supportsNativePlatform = options.platforms ? options.platforms.includes(NATIVE_PLATFORM) : false;\n    this._moduleMap = moduleMap;\n    this._moduleIDCache = new Map();\n    this._moduleNameCache = new Map();\n    this._modulePathCache = new Map();\n  }\n\n  static tryCastModuleNotFoundError(error) {\n    if (error instanceof _ModuleNotFoundError.default) {\n      return error;\n    }\n\n    const casted = error;\n\n    if (casted.code === 'MODULE_NOT_FOUND') {\n      return _ModuleNotFoundError.default.duckType(casted);\n    }\n\n    return null;\n  }\n\n  static clearDefaultResolverCache() {\n    (0, _fileWalkers.clearFsCache)();\n    (0, _shouldLoadAsEsm.clearCachedLookups)();\n  }\n\n  static findNodeModule(path, options) {\n    const resolver = options.resolver ? require(options.resolver) : _defaultResolver.default;\n    const paths = options.paths;\n\n    try {\n      return resolver(path, {\n        basedir: options.basedir,\n        browser: options.browser,\n        conditions: options.conditions,\n        defaultResolver: _defaultResolver.default,\n        extensions: options.extensions,\n        moduleDirectory: options.moduleDirectory,\n        paths: paths ? (nodePaths || []).concat(paths) : nodePaths,\n        rootDir: options.rootDir\n      });\n    } catch (e) {\n      if (options.throwIfNotFound) {\n        throw e;\n      }\n    }\n\n    return null;\n  } // unstable as it should be replaced by https://github.com/nodejs/modules/issues/393, and we don't want people to use it\n\n\n  resolveModuleFromDirIfExists(dirname, moduleName, options) {\n    var _this = this;\n\n    const paths = (options === null || options === void 0 ? void 0 : options.paths) || this._options.modulePaths;\n    const moduleDirectory = this._options.moduleDirectories;\n    const stringifiedOptions = options ? JSON.stringify(options) : '';\n    const key = dirname + path().delimiter + moduleName + stringifiedOptions;\n    const defaultPlatform = this._options.defaultPlatform;\n\n    const extensions = this._options.extensions.slice();\n\n    let module;\n\n    if (this._supportsNativePlatform) {\n      extensions.unshift(...this._options.extensions.map(ext => '.' + NATIVE_PLATFORM + ext));\n    }\n\n    if (defaultPlatform) {\n      extensions.unshift(...this._options.extensions.map(ext => '.' + defaultPlatform + ext));\n    } // 1. If we have already resolved this module for this directory name,\n    // return a value from the cache.\n\n\n    const cacheResult = this._moduleNameCache.get(key);\n\n    if (cacheResult) {\n      return cacheResult;\n    } // 2. Check if the module is a haste module.\n\n\n    module = this.getModule(moduleName);\n\n    if (module) {\n      this._moduleNameCache.set(key, module);\n\n      return module;\n    } // 3. Check if the module is a node module and resolve it based on\n    // the node module resolution algorithm. If skipNodeResolution is given we\n    // ignore all modules that look like node modules (ie. are not relative\n    // requires). This enables us to speed up resolution when we build a\n    // dependency graph because we don't have to look at modules that may not\n    // exist and aren't mocked.\n\n\n    const skipResolution = options && options.skipNodeResolution && !moduleName.includes(path().sep);\n\n    const resolveNodeModule = function (name) {\n      let throwIfNotFound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (_this.isCoreModule(name)) {\n        return name;\n      }\n\n      return Resolver.findNodeModule(name, {\n        basedir: dirname,\n        conditions: options === null || options === void 0 ? void 0 : options.conditions,\n        extensions,\n        moduleDirectory,\n        paths,\n        resolver: _this._options.resolver,\n        rootDir: _this._options.rootDir,\n        throwIfNotFound\n      });\n    };\n\n    if (!skipResolution) {\n      module = resolveNodeModule(moduleName, Boolean(process.versions.pnp));\n\n      if (module) {\n        this._moduleNameCache.set(key, module);\n\n        return module;\n      }\n    } // 4. Resolve \"haste packages\" which are `package.json` files outside of\n    // `node_modules` folders anywhere in the file system.\n\n\n    const parts = moduleName.split('/');\n    const hastePackage = this.getPackage(parts.shift());\n\n    if (hastePackage) {\n      try {\n        const module = path().join.apply(path(), [path().dirname(hastePackage)].concat(parts)); // try resolving with custom resolver first to support extensions,\n        // then fallback to require.resolve\n\n        const resolvedModule = resolveNodeModule(module) || require.resolve(module);\n\n        this._moduleNameCache.set(key, resolvedModule);\n\n        return resolvedModule;\n      } catch {}\n    }\n\n    return null;\n  }\n\n  resolveModule(from, moduleName, options) {\n    const dirname = path().dirname(from);\n    const module = this.resolveStubModuleName(from, moduleName) || this.resolveModuleFromDirIfExists(dirname, moduleName, options);\n    if (module) return module; // 5. Throw an error if the module could not be found. `resolve.sync` only\n    // produces an error based on the dirname but we have the actual current\n    // module name available.\n\n    const relativePath = (0, _slash().default)(path().relative(this._options.rootDir, from)) || '.';\n    throw new _ModuleNotFoundError.default(`Cannot find module '${moduleName}' from '${relativePath}'`, moduleName);\n  }\n\n  _isAliasModule(moduleName) {\n    const moduleNameMapper = this._options.moduleNameMapper;\n\n    if (!moduleNameMapper) {\n      return false;\n    }\n\n    return moduleNameMapper.some(_ref => {\n      let {\n        regex\n      } = _ref;\n      return regex.test(moduleName);\n    });\n  }\n\n  isCoreModule(moduleName) {\n    return this._options.hasCoreModules && ((0, _isBuiltinModule.default)(moduleName) || moduleName.startsWith('node:') && (0, _isBuiltinModule.default)(moduleName.slice('node:'.length))) && !this._isAliasModule(moduleName);\n  }\n\n  getModule(name) {\n    return this._moduleMap.getModule(name, this._options.defaultPlatform, this._supportsNativePlatform);\n  }\n\n  getModulePath(from, moduleName) {\n    if (moduleName[0] !== '.' || path().isAbsolute(moduleName)) {\n      return moduleName;\n    }\n\n    return path().normalize(path().dirname(from) + '/' + moduleName);\n  }\n\n  getPackage(name) {\n    return this._moduleMap.getPackage(name, this._options.defaultPlatform, this._supportsNativePlatform);\n  }\n\n  getMockModule(from, name) {\n    const mock = this._moduleMap.getMockModule(name);\n\n    if (mock) {\n      return mock;\n    } else {\n      const moduleName = this.resolveStubModuleName(from, name);\n\n      if (moduleName) {\n        return this.getModule(moduleName) || moduleName;\n      }\n    }\n\n    return null;\n  }\n\n  getModulePaths(from) {\n    const cachedModule = this._modulePathCache.get(from);\n\n    if (cachedModule) {\n      return cachedModule;\n    }\n\n    const moduleDirectory = this._options.moduleDirectories;\n    const paths = (0, _nodeModulesPaths.default)(from, {\n      moduleDirectory\n    });\n\n    if (paths[paths.length - 1] === undefined) {\n      // circumvent node-resolve bug that adds `undefined` as last item.\n      paths.pop();\n    }\n\n    this._modulePathCache.set(from, paths);\n\n    return paths;\n  }\n\n  getModuleID(virtualMocks, from) {\n    let moduleName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    let options = arguments.length > 3 ? arguments[3] : undefined;\n    const stringifiedOptions = options ? JSON.stringify(options) : '';\n    const key = from + path().delimiter + moduleName + stringifiedOptions;\n\n    const cachedModuleID = this._moduleIDCache.get(key);\n\n    if (cachedModuleID) {\n      return cachedModuleID;\n    }\n\n    const moduleType = this._getModuleType(moduleName);\n\n    const absolutePath = this._getAbsolutePath(virtualMocks, from, moduleName, options);\n\n    const mockPath = this._getMockPath(from, moduleName);\n\n    const sep = path().delimiter;\n    const id = moduleType + sep + (absolutePath ? absolutePath + sep : '') + (mockPath ? mockPath + sep : '') + (stringifiedOptions ? stringifiedOptions + sep : '');\n\n    this._moduleIDCache.set(key, id);\n\n    return id;\n  }\n\n  _getModuleType(moduleName) {\n    return this.isCoreModule(moduleName) ? 'node' : 'user';\n  }\n\n  _getAbsolutePath(virtualMocks, from, moduleName, options) {\n    if (this.isCoreModule(moduleName)) {\n      return moduleName;\n    }\n\n    return this._isModuleResolved(from, moduleName) ? this.getModule(moduleName) : this._getVirtualMockPath(virtualMocks, from, moduleName, options);\n  }\n\n  _getMockPath(from, moduleName) {\n    return !this.isCoreModule(moduleName) ? this.getMockModule(from, moduleName) : null;\n  }\n\n  _getVirtualMockPath(virtualMocks, from, moduleName, options) {\n    const virtualMockPath = this.getModulePath(from, moduleName);\n    return virtualMocks.get(virtualMockPath) ? virtualMockPath : moduleName ? this.resolveModule(from, moduleName, options) : from;\n  }\n\n  _isModuleResolved(from, moduleName) {\n    return !!(this.getModule(moduleName) || this.getMockModule(from, moduleName));\n  }\n\n  resolveStubModuleName(from, moduleName) {\n    const dirname = path().dirname(from);\n    const paths = this._options.modulePaths;\n\n    const extensions = this._options.extensions.slice();\n\n    const moduleDirectory = this._options.moduleDirectories;\n    const moduleNameMapper = this._options.moduleNameMapper;\n    const resolver = this._options.resolver;\n    const defaultPlatform = this._options.defaultPlatform;\n\n    if (this._supportsNativePlatform) {\n      extensions.unshift(...this._options.extensions.map(ext => '.' + NATIVE_PLATFORM + ext));\n    }\n\n    if (defaultPlatform) {\n      extensions.unshift(...this._options.extensions.map(ext => '.' + defaultPlatform + ext));\n    }\n\n    if (moduleNameMapper) {\n      for (const {\n        moduleName: mappedModuleName,\n        regex\n      } of moduleNameMapper) {\n        if (regex.test(moduleName)) {\n          // Note: once a moduleNameMapper matches the name, it must result\n          // in a module, or else an error is thrown.\n          const matches = moduleName.match(regex);\n          const mapModuleName = matches ? moduleName => moduleName.replace(/\\$([0-9]+)/g, (_, index) => matches[parseInt(index, 10)]) : moduleName => moduleName;\n          const possibleModuleNames = Array.isArray(mappedModuleName) ? mappedModuleName : [mappedModuleName];\n          let module = null;\n\n          for (const possibleModuleName of possibleModuleNames) {\n            const updatedName = mapModuleName(possibleModuleName);\n            module = this.getModule(updatedName) || Resolver.findNodeModule(updatedName, {\n              basedir: dirname,\n              extensions,\n              moduleDirectory,\n              paths,\n              resolver,\n              rootDir: this._options.rootDir\n            });\n\n            if (module) {\n              break;\n            }\n          }\n\n          if (!module) {\n            throw createNoMappedModuleFoundError(moduleName, mapModuleName, mappedModuleName, regex, resolver);\n          }\n\n          return module;\n        }\n      }\n    }\n\n    return null;\n  }\n\n}\n\nexports.default = Resolver;\n\n_defineProperty(Resolver, 'ModuleNotFoundError', _ModuleNotFoundError.default);\n\n_defineProperty(Resolver, 'unstable_shouldLoadAsEsm', _shouldLoadAsEsm.default);\n\nconst createNoMappedModuleFoundError = (moduleName, mapModuleName, mappedModuleName, regex, resolver) => {\n  const mappedAs = Array.isArray(mappedModuleName) ? JSON.stringify(mappedModuleName.map(mapModuleName), null, 2) : mappedModuleName;\n  const original = Array.isArray(mappedModuleName) ? JSON.stringify(mappedModuleName, null, 6) // using 6 because of misalignment when nested below\n  .slice(0, -1) + '    ]' /// align last bracket correctly as well\n  : mappedModuleName;\n  const error = new Error(_chalk().default.red(`${_chalk().default.bold('Configuration error')}:\n\nCould not locate module ${_chalk().default.bold(moduleName)} mapped as:\n${_chalk().default.bold(mappedAs)}.\n\nPlease check your configuration for these entries:\n{\n  \"moduleNameMapper\": {\n    \"${regex.toString()}\": \"${_chalk().default.bold(original)}\"\n  },\n  \"resolver\": ${_chalk().default.bold(String(resolver))}\n}`));\n  error.name = '';\n  return error;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","default","path","data","_interopRequireWildcard","require","_chalk","_interopRequireDefault","_slash","_jestUtil","_ModuleNotFoundError","_defaultResolver","_fileWalkers","_isBuiltinModule","_nodeModulesPaths","_shouldLoadAsEsm","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","NATIVE_PLATFORM","resolvedCwd","tryRealpath","process","cwd","NODE_PATH","env","nodePaths","split","delimiter","filter","Boolean","map","p","resolve","undefined","Resolver","constructor","moduleMap","options","_options","defaultPlatform","extensions","hasCoreModules","moduleDirectories","moduleNameMapper","modulePaths","platforms","resolver","rootDir","_supportsNativePlatform","includes","_moduleMap","_moduleIDCache","Map","_moduleNameCache","_modulePathCache","tryCastModuleNotFoundError","error","casted","code","duckType","clearDefaultResolverCache","clearFsCache","clearCachedLookups","findNodeModule","paths","basedir","browser","conditions","defaultResolver","moduleDirectory","concat","e","throwIfNotFound","resolveModuleFromDirIfExists","dirname","moduleName","stringifiedOptions","JSON","stringify","slice","module","unshift","ext","cacheResult","getModule","skipResolution","skipNodeResolution","sep","resolveNodeModule","name","isCoreModule","versions","pnp","parts","hastePackage","getPackage","shift","join","apply","resolvedModule","resolveModule","from","resolveStubModuleName","relativePath","relative","_isAliasModule","some","regex","test","startsWith","length","getModulePath","isAbsolute","normalize","getMockModule","mock","getModulePaths","cachedModule","pop","getModuleID","virtualMocks","cachedModuleID","moduleType","_getModuleType","absolutePath","_getAbsolutePath","mockPath","_getMockPath","id","_isModuleResolved","_getVirtualMockPath","virtualMockPath","mappedModuleName","matches","match","mapModuleName","replace","_","index","parseInt","possibleModuleNames","Array","isArray","possibleModuleName","updatedName","createNoMappedModuleFoundError","mappedAs","original","Error","red","bold","toString","String"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-resolve/build/resolver.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _ModuleNotFoundError = _interopRequireDefault(\n  require('./ModuleNotFoundError')\n);\n\nvar _defaultResolver = _interopRequireDefault(require('./defaultResolver'));\n\nvar _fileWalkers = require('./fileWalkers');\n\nvar _isBuiltinModule = _interopRequireDefault(require('./isBuiltinModule'));\n\nvar _nodeModulesPaths = _interopRequireDefault(require('./nodeModulesPaths'));\n\nvar _shouldLoadAsEsm = _interopRequireWildcard(require('./shouldLoadAsEsm'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst NATIVE_PLATFORM = 'native'; // We might be inside a symlink.\n\nconst resolvedCwd = (0, _jestUtil().tryRealpath)(process.cwd());\nconst {NODE_PATH} = process.env;\nconst nodePaths = NODE_PATH\n  ? NODE_PATH.split(path().delimiter)\n      .filter(Boolean) // The resolver expects absolute paths.\n      .map(p => path().resolve(resolvedCwd, p))\n  : undefined;\n\nclass Resolver {\n  constructor(moduleMap, options) {\n    _defineProperty(this, '_options', void 0);\n\n    _defineProperty(this, '_moduleMap', void 0);\n\n    _defineProperty(this, '_moduleIDCache', void 0);\n\n    _defineProperty(this, '_moduleNameCache', void 0);\n\n    _defineProperty(this, '_modulePathCache', void 0);\n\n    _defineProperty(this, '_supportsNativePlatform', void 0);\n\n    this._options = {\n      defaultPlatform: options.defaultPlatform,\n      extensions: options.extensions,\n      hasCoreModules:\n        options.hasCoreModules === undefined ? true : options.hasCoreModules,\n      moduleDirectories: options.moduleDirectories || ['node_modules'],\n      moduleNameMapper: options.moduleNameMapper,\n      modulePaths: options.modulePaths,\n      platforms: options.platforms,\n      resolver: options.resolver,\n      rootDir: options.rootDir\n    };\n    this._supportsNativePlatform = options.platforms\n      ? options.platforms.includes(NATIVE_PLATFORM)\n      : false;\n    this._moduleMap = moduleMap;\n    this._moduleIDCache = new Map();\n    this._moduleNameCache = new Map();\n    this._modulePathCache = new Map();\n  }\n\n  static tryCastModuleNotFoundError(error) {\n    if (error instanceof _ModuleNotFoundError.default) {\n      return error;\n    }\n\n    const casted = error;\n\n    if (casted.code === 'MODULE_NOT_FOUND') {\n      return _ModuleNotFoundError.default.duckType(casted);\n    }\n\n    return null;\n  }\n\n  static clearDefaultResolverCache() {\n    (0, _fileWalkers.clearFsCache)();\n    (0, _shouldLoadAsEsm.clearCachedLookups)();\n  }\n\n  static findNodeModule(path, options) {\n    const resolver = options.resolver\n      ? require(options.resolver)\n      : _defaultResolver.default;\n    const paths = options.paths;\n\n    try {\n      return resolver(path, {\n        basedir: options.basedir,\n        browser: options.browser,\n        conditions: options.conditions,\n        defaultResolver: _defaultResolver.default,\n        extensions: options.extensions,\n        moduleDirectory: options.moduleDirectory,\n        paths: paths ? (nodePaths || []).concat(paths) : nodePaths,\n        rootDir: options.rootDir\n      });\n    } catch (e) {\n      if (options.throwIfNotFound) {\n        throw e;\n      }\n    }\n\n    return null;\n  } // unstable as it should be replaced by https://github.com/nodejs/modules/issues/393, and we don't want people to use it\n\n  resolveModuleFromDirIfExists(dirname, moduleName, options) {\n    const paths =\n      (options === null || options === void 0 ? void 0 : options.paths) ||\n      this._options.modulePaths;\n    const moduleDirectory = this._options.moduleDirectories;\n    const stringifiedOptions = options ? JSON.stringify(options) : '';\n    const key = dirname + path().delimiter + moduleName + stringifiedOptions;\n    const defaultPlatform = this._options.defaultPlatform;\n\n    const extensions = this._options.extensions.slice();\n\n    let module;\n\n    if (this._supportsNativePlatform) {\n      extensions.unshift(\n        ...this._options.extensions.map(ext => '.' + NATIVE_PLATFORM + ext)\n      );\n    }\n\n    if (defaultPlatform) {\n      extensions.unshift(\n        ...this._options.extensions.map(ext => '.' + defaultPlatform + ext)\n      );\n    } // 1. If we have already resolved this module for this directory name,\n    // return a value from the cache.\n\n    const cacheResult = this._moduleNameCache.get(key);\n\n    if (cacheResult) {\n      return cacheResult;\n    } // 2. Check if the module is a haste module.\n\n    module = this.getModule(moduleName);\n\n    if (module) {\n      this._moduleNameCache.set(key, module);\n\n      return module;\n    } // 3. Check if the module is a node module and resolve it based on\n    // the node module resolution algorithm. If skipNodeResolution is given we\n    // ignore all modules that look like node modules (ie. are not relative\n    // requires). This enables us to speed up resolution when we build a\n    // dependency graph because we don't have to look at modules that may not\n    // exist and aren't mocked.\n\n    const skipResolution =\n      options && options.skipNodeResolution && !moduleName.includes(path().sep);\n\n    const resolveNodeModule = (name, throwIfNotFound = false) => {\n      if (this.isCoreModule(name)) {\n        return name;\n      }\n\n      return Resolver.findNodeModule(name, {\n        basedir: dirname,\n        conditions:\n          options === null || options === void 0 ? void 0 : options.conditions,\n        extensions,\n        moduleDirectory,\n        paths,\n        resolver: this._options.resolver,\n        rootDir: this._options.rootDir,\n        throwIfNotFound\n      });\n    };\n\n    if (!skipResolution) {\n      module = resolveNodeModule(moduleName, Boolean(process.versions.pnp));\n\n      if (module) {\n        this._moduleNameCache.set(key, module);\n\n        return module;\n      }\n    } // 4. Resolve \"haste packages\" which are `package.json` files outside of\n    // `node_modules` folders anywhere in the file system.\n\n    const parts = moduleName.split('/');\n    const hastePackage = this.getPackage(parts.shift());\n\n    if (hastePackage) {\n      try {\n        const module = path().join.apply(\n          path(),\n          [path().dirname(hastePackage)].concat(parts)\n        ); // try resolving with custom resolver first to support extensions,\n        // then fallback to require.resolve\n\n        const resolvedModule =\n          resolveNodeModule(module) || require.resolve(module);\n\n        this._moduleNameCache.set(key, resolvedModule);\n\n        return resolvedModule;\n      } catch {}\n    }\n\n    return null;\n  }\n\n  resolveModule(from, moduleName, options) {\n    const dirname = path().dirname(from);\n    const module =\n      this.resolveStubModuleName(from, moduleName) ||\n      this.resolveModuleFromDirIfExists(dirname, moduleName, options);\n    if (module) return module; // 5. Throw an error if the module could not be found. `resolve.sync` only\n    // produces an error based on the dirname but we have the actual current\n    // module name available.\n\n    const relativePath =\n      (0, _slash().default)(path().relative(this._options.rootDir, from)) ||\n      '.';\n    throw new _ModuleNotFoundError.default(\n      `Cannot find module '${moduleName}' from '${relativePath}'`,\n      moduleName\n    );\n  }\n\n  _isAliasModule(moduleName) {\n    const moduleNameMapper = this._options.moduleNameMapper;\n\n    if (!moduleNameMapper) {\n      return false;\n    }\n\n    return moduleNameMapper.some(({regex}) => regex.test(moduleName));\n  }\n\n  isCoreModule(moduleName) {\n    return (\n      this._options.hasCoreModules &&\n      ((0, _isBuiltinModule.default)(moduleName) ||\n        (moduleName.startsWith('node:') &&\n          (0, _isBuiltinModule.default)(moduleName.slice('node:'.length)))) &&\n      !this._isAliasModule(moduleName)\n    );\n  }\n\n  getModule(name) {\n    return this._moduleMap.getModule(\n      name,\n      this._options.defaultPlatform,\n      this._supportsNativePlatform\n    );\n  }\n\n  getModulePath(from, moduleName) {\n    if (moduleName[0] !== '.' || path().isAbsolute(moduleName)) {\n      return moduleName;\n    }\n\n    return path().normalize(path().dirname(from) + '/' + moduleName);\n  }\n\n  getPackage(name) {\n    return this._moduleMap.getPackage(\n      name,\n      this._options.defaultPlatform,\n      this._supportsNativePlatform\n    );\n  }\n\n  getMockModule(from, name) {\n    const mock = this._moduleMap.getMockModule(name);\n\n    if (mock) {\n      return mock;\n    } else {\n      const moduleName = this.resolveStubModuleName(from, name);\n\n      if (moduleName) {\n        return this.getModule(moduleName) || moduleName;\n      }\n    }\n\n    return null;\n  }\n\n  getModulePaths(from) {\n    const cachedModule = this._modulePathCache.get(from);\n\n    if (cachedModule) {\n      return cachedModule;\n    }\n\n    const moduleDirectory = this._options.moduleDirectories;\n    const paths = (0, _nodeModulesPaths.default)(from, {\n      moduleDirectory\n    });\n\n    if (paths[paths.length - 1] === undefined) {\n      // circumvent node-resolve bug that adds `undefined` as last item.\n      paths.pop();\n    }\n\n    this._modulePathCache.set(from, paths);\n\n    return paths;\n  }\n\n  getModuleID(virtualMocks, from, moduleName = '', options) {\n    const stringifiedOptions = options ? JSON.stringify(options) : '';\n    const key = from + path().delimiter + moduleName + stringifiedOptions;\n\n    const cachedModuleID = this._moduleIDCache.get(key);\n\n    if (cachedModuleID) {\n      return cachedModuleID;\n    }\n\n    const moduleType = this._getModuleType(moduleName);\n\n    const absolutePath = this._getAbsolutePath(\n      virtualMocks,\n      from,\n      moduleName,\n      options\n    );\n\n    const mockPath = this._getMockPath(from, moduleName);\n\n    const sep = path().delimiter;\n    const id =\n      moduleType +\n      sep +\n      (absolutePath ? absolutePath + sep : '') +\n      (mockPath ? mockPath + sep : '') +\n      (stringifiedOptions ? stringifiedOptions + sep : '');\n\n    this._moduleIDCache.set(key, id);\n\n    return id;\n  }\n\n  _getModuleType(moduleName) {\n    return this.isCoreModule(moduleName) ? 'node' : 'user';\n  }\n\n  _getAbsolutePath(virtualMocks, from, moduleName, options) {\n    if (this.isCoreModule(moduleName)) {\n      return moduleName;\n    }\n\n    return this._isModuleResolved(from, moduleName)\n      ? this.getModule(moduleName)\n      : this._getVirtualMockPath(virtualMocks, from, moduleName, options);\n  }\n\n  _getMockPath(from, moduleName) {\n    return !this.isCoreModule(moduleName)\n      ? this.getMockModule(from, moduleName)\n      : null;\n  }\n\n  _getVirtualMockPath(virtualMocks, from, moduleName, options) {\n    const virtualMockPath = this.getModulePath(from, moduleName);\n    return virtualMocks.get(virtualMockPath)\n      ? virtualMockPath\n      : moduleName\n      ? this.resolveModule(from, moduleName, options)\n      : from;\n  }\n\n  _isModuleResolved(from, moduleName) {\n    return !!(\n      this.getModule(moduleName) || this.getMockModule(from, moduleName)\n    );\n  }\n\n  resolveStubModuleName(from, moduleName) {\n    const dirname = path().dirname(from);\n    const paths = this._options.modulePaths;\n\n    const extensions = this._options.extensions.slice();\n\n    const moduleDirectory = this._options.moduleDirectories;\n    const moduleNameMapper = this._options.moduleNameMapper;\n    const resolver = this._options.resolver;\n    const defaultPlatform = this._options.defaultPlatform;\n\n    if (this._supportsNativePlatform) {\n      extensions.unshift(\n        ...this._options.extensions.map(ext => '.' + NATIVE_PLATFORM + ext)\n      );\n    }\n\n    if (defaultPlatform) {\n      extensions.unshift(\n        ...this._options.extensions.map(ext => '.' + defaultPlatform + ext)\n      );\n    }\n\n    if (moduleNameMapper) {\n      for (const {moduleName: mappedModuleName, regex} of moduleNameMapper) {\n        if (regex.test(moduleName)) {\n          // Note: once a moduleNameMapper matches the name, it must result\n          // in a module, or else an error is thrown.\n          const matches = moduleName.match(regex);\n          const mapModuleName = matches\n            ? moduleName =>\n                moduleName.replace(\n                  /\\$([0-9]+)/g,\n                  (_, index) => matches[parseInt(index, 10)]\n                )\n            : moduleName => moduleName;\n          const possibleModuleNames = Array.isArray(mappedModuleName)\n            ? mappedModuleName\n            : [mappedModuleName];\n          let module = null;\n\n          for (const possibleModuleName of possibleModuleNames) {\n            const updatedName = mapModuleName(possibleModuleName);\n            module =\n              this.getModule(updatedName) ||\n              Resolver.findNodeModule(updatedName, {\n                basedir: dirname,\n                extensions,\n                moduleDirectory,\n                paths,\n                resolver,\n                rootDir: this._options.rootDir\n              });\n\n            if (module) {\n              break;\n            }\n          }\n\n          if (!module) {\n            throw createNoMappedModuleFoundError(\n              moduleName,\n              mapModuleName,\n              mappedModuleName,\n              regex,\n              resolver\n            );\n          }\n\n          return module;\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\nexports.default = Resolver;\n\n_defineProperty(Resolver, 'ModuleNotFoundError', _ModuleNotFoundError.default);\n\n_defineProperty(Resolver, 'unstable_shouldLoadAsEsm', _shouldLoadAsEsm.default);\n\nconst createNoMappedModuleFoundError = (\n  moduleName,\n  mapModuleName,\n  mappedModuleName,\n  regex,\n  resolver\n) => {\n  const mappedAs = Array.isArray(mappedModuleName)\n    ? JSON.stringify(mappedModuleName.map(mapModuleName), null, 2)\n    : mappedModuleName;\n  const original = Array.isArray(mappedModuleName)\n    ? JSON.stringify(mappedModuleName, null, 6) // using 6 because of misalignment when nested below\n        .slice(0, -1) + '    ]' /// align last bracket correctly as well\n    : mappedModuleName;\n  const error = new Error(\n    _chalk().default.red(`${_chalk().default.bold('Configuration error')}:\n\nCould not locate module ${_chalk().default.bold(moduleName)} mapped as:\n${_chalk().default.bold(mappedAs)}.\n\nPlease check your configuration for these entries:\n{\n  \"moduleNameMapper\": {\n    \"${regex.toString()}\": \"${_chalk().default.bold(original)}\"\n  },\n  \"resolver\": ${_chalk().default.bold(String(resolver))}\n}`)\n  );\n  error.name = '';\n  return error;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}