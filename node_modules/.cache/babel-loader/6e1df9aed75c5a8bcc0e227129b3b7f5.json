{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getChangedFilesPromise;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestChangedFiles() {\n  const data = require('jest-changed-files');\n\n  _jestChangedFiles = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction getChangedFilesPromise(globalConfig, configs) {\n  if (globalConfig.onlyChanged) {\n    const allRootsForAllProjects = configs.reduce((roots, config) => {\n      if (config.roots) {\n        roots.push(...config.roots);\n      }\n\n      return roots;\n    }, []);\n    return (0, _jestChangedFiles().getChangedFilesForRoots)(allRootsForAllProjects, {\n      changedSince: globalConfig.changedSince,\n      lastCommit: globalConfig.lastCommit,\n      withAncestor: globalConfig.changedFilesWithAncestor\n    }).catch(e => {\n      const message = (0, _jestMessageUtil().formatExecError)(e, configs[0], {\n        noStackTrace: true\n      }).split('\\n').filter(line => !line.includes('Command failed:')).join('\\n');\n      console.error(_chalk().default.red(`\\n\\n${message}`));\n      process.exit(1);\n    });\n  }\n\n  return undefined;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","getChangedFilesPromise","_chalk","data","_interopRequireDefault","require","_jestChangedFiles","_jestMessageUtil","obj","__esModule","globalConfig","configs","onlyChanged","allRootsForAllProjects","reduce","roots","config","push","getChangedFilesForRoots","changedSince","lastCommit","withAncestor","changedFilesWithAncestor","catch","e","message","formatExecError","noStackTrace","split","filter","line","includes","join","console","error","red","process","exit","undefined"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/@jest/core/build/getChangedFilesPromise.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = getChangedFilesPromise;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestChangedFiles() {\n  const data = require('jest-changed-files');\n\n  _jestChangedFiles = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction getChangedFilesPromise(globalConfig, configs) {\n  if (globalConfig.onlyChanged) {\n    const allRootsForAllProjects = configs.reduce((roots, config) => {\n      if (config.roots) {\n        roots.push(...config.roots);\n      }\n\n      return roots;\n    }, []);\n    return (0, _jestChangedFiles().getChangedFilesForRoots)(\n      allRootsForAllProjects,\n      {\n        changedSince: globalConfig.changedSince,\n        lastCommit: globalConfig.lastCommit,\n        withAncestor: globalConfig.changedFilesWithAncestor\n      }\n    ).catch(e => {\n      const message = (0, _jestMessageUtil().formatExecError)(e, configs[0], {\n        noStackTrace: true\n      })\n        .split('\\n')\n        .filter(line => !line.includes('Command failed:'))\n        .join('\\n');\n      console.error(_chalk().default.red(`\\n\\n${message}`));\n      process.exit(1);\n    });\n  }\n\n  return undefined;\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,sBAAlB;;AAEA,SAASC,MAAT,GAAkB;EAChB,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;EAEAH,MAAM,GAAG,YAAY;IACnB,OAAOC,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASG,iBAAT,GAA6B;EAC3B,MAAMH,IAAI,GAAGE,OAAO,CAAC,oBAAD,CAApB;;EAEAC,iBAAiB,GAAG,YAAY;IAC9B,OAAOH,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASI,gBAAT,GAA4B;EAC1B,MAAMJ,IAAI,GAAGE,OAAO,CAAC,mBAAD,CAApB;;EAEAE,gBAAgB,GAAG,YAAY;IAC7B,OAAOJ,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCI,GAAhC,EAAqC;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAACR,OAAO,EAAEQ;EAAV,CAArC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASP,sBAAT,CAAgCS,YAAhC,EAA8CC,OAA9C,EAAuD;EACrD,IAAID,YAAY,CAACE,WAAjB,EAA8B;IAC5B,MAAMC,sBAAsB,GAAGF,OAAO,CAACG,MAAR,CAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/D,IAAIA,MAAM,CAACD,KAAX,EAAkB;QAChBA,KAAK,CAACE,IAAN,CAAW,GAAGD,MAAM,CAACD,KAArB;MACD;;MAED,OAAOA,KAAP;IACD,CAN8B,EAM5B,EAN4B,CAA/B;IAOA,OAAO,CAAC,GAAGT,iBAAiB,GAAGY,uBAAxB,EACLL,sBADK,EAEL;MACEM,YAAY,EAAET,YAAY,CAACS,YAD7B;MAEEC,UAAU,EAAEV,YAAY,CAACU,UAF3B;MAGEC,YAAY,EAAEX,YAAY,CAACY;IAH7B,CAFK,EAOLC,KAPK,CAOCC,CAAC,IAAI;MACX,MAAMC,OAAO,GAAG,CAAC,GAAGlB,gBAAgB,GAAGmB,eAAvB,EAAwCF,CAAxC,EAA2Cb,OAAO,CAAC,CAAD,CAAlD,EAAuD;QACrEgB,YAAY,EAAE;MADuD,CAAvD,EAGbC,KAHa,CAGP,IAHO,EAIbC,MAJa,CAINC,IAAI,IAAI,CAACA,IAAI,CAACC,QAAL,CAAc,iBAAd,CAJH,EAKbC,IALa,CAKR,IALQ,CAAhB;MAMAC,OAAO,CAACC,KAAR,CAAchC,MAAM,GAAGF,OAAT,CAAiBmC,GAAjB,CAAsB,OAAMV,OAAQ,EAApC,CAAd;MACAW,OAAO,CAACC,IAAR,CAAa,CAAb;IACD,CAhBM,CAAP;EAiBD;;EAED,OAAOC,SAAP;AACD"},"metadata":{},"sourceType":"script"}