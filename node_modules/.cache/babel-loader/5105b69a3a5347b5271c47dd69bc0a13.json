{"ast":null,"code":"'use strict';\n\nvar _jestUtil = require('jest-util');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst FRAMEWORK_INITIALIZER = require.resolve('./jestAdapterInit');\n\nconst jestAdapter = async (globalConfig, config, environment, runtime, testPath, sendMessageToJest) => {\n  const {\n    initialize,\n    runAndTransformResultsToJestFormat\n  } = runtime.requireInternalModule(FRAMEWORK_INITIALIZER);\n  const {\n    globals,\n    snapshotState\n  } = await initialize({\n    config,\n    environment,\n    globalConfig,\n    localRequire: runtime.requireModule.bind(runtime),\n    parentProcess: process,\n    sendMessageToJest,\n    setGlobalsForRuntime: runtime.setGlobalsForRuntime.bind(runtime),\n    testPath\n  });\n\n  if (config.timers === 'fake' || config.timers === 'modern') {\n    // during setup, this cannot be null (and it's fine to explode if it is)\n    environment.fakeTimersModern.useFakeTimers();\n  } else if (config.timers === 'legacy') {\n    environment.fakeTimers.useFakeTimers();\n  }\n\n  globals.beforeEach(() => {\n    if (config.resetModules) {\n      runtime.resetModules();\n    }\n\n    if (config.clearMocks) {\n      runtime.clearAllMocks();\n    }\n\n    if (config.resetMocks) {\n      runtime.resetAllMocks();\n\n      if (config.timers === 'legacy') {\n        // during setup, this cannot be null (and it's fine to explode if it is)\n        environment.fakeTimers.useFakeTimers();\n      }\n    }\n\n    if (config.restoreMocks) {\n      runtime.restoreAllMocks();\n    }\n  });\n\n  for (const path of config.setupFilesAfterEnv) {\n    const esm = runtime.unstable_shouldLoadAsEsm(path);\n\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      runtime.requireModule(path);\n    }\n  }\n\n  const esm = runtime.unstable_shouldLoadAsEsm(testPath);\n\n  if (esm) {\n    await runtime.unstable_importModule(testPath);\n  } else {\n    runtime.requireModule(testPath);\n  }\n\n  const results = await runAndTransformResultsToJestFormat({\n    config,\n    globalConfig,\n    testPath\n  });\n\n  _addSnapshotData(results, snapshotState); // We need to copy the results object to ensure we don't leaks the prototypes\n  // from the VM. Jasmine creates the result objects in the parent process, we\n  // should consider doing that for circus as well.\n\n\n  return (0, _jestUtil.deepCyclicCopy)(results, {\n    keepPrototype: false\n  });\n};\n\nconst _addSnapshotData = (results, snapshotState) => {\n  results.testResults.forEach(_ref => {\n    let {\n      fullName,\n      status\n    } = _ref;\n\n    if (status === 'pending' || status === 'failed') {\n      // if test is skipped or failed, we don't want to mark\n      // its snapshots as obsolete.\n      snapshotState.markSnapshotsAsCheckedForTest(fullName);\n    }\n  });\n  const uncheckedCount = snapshotState.getUncheckedCount();\n  const uncheckedKeys = snapshotState.getUncheckedKeys();\n\n  if (uncheckedCount) {\n    snapshotState.removeUncheckedKeys();\n  }\n\n  const status = snapshotState.save();\n  results.snapshot.fileDeleted = status.deleted;\n  results.snapshot.added = snapshotState.added;\n  results.snapshot.matched = snapshotState.matched;\n  results.snapshot.unmatched = snapshotState.unmatched;\n  results.snapshot.updated = snapshotState.updated;\n  results.snapshot.unchecked = !status.deleted ? uncheckedCount : 0; // Copy the array to prevent memory leaks\n\n  results.snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n};\n\nmodule.exports = jestAdapter;","map":{"version":3,"names":["_jestUtil","require","FRAMEWORK_INITIALIZER","resolve","jestAdapter","globalConfig","config","environment","runtime","testPath","sendMessageToJest","initialize","runAndTransformResultsToJestFormat","requireInternalModule","globals","snapshotState","localRequire","requireModule","bind","parentProcess","process","setGlobalsForRuntime","timers","fakeTimersModern","useFakeTimers","fakeTimers","beforeEach","resetModules","clearMocks","clearAllMocks","resetMocks","resetAllMocks","restoreMocks","restoreAllMocks","path","setupFilesAfterEnv","esm","unstable_shouldLoadAsEsm","unstable_importModule","results","_addSnapshotData","deepCyclicCopy","keepPrototype","testResults","forEach","fullName","status","markSnapshotsAsCheckedForTest","uncheckedCount","getUncheckedCount","uncheckedKeys","getUncheckedKeys","removeUncheckedKeys","save","snapshot","fileDeleted","deleted","added","matched","unmatched","updated","unchecked","Array","from","module","exports"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js"],"sourcesContent":["'use strict';\n\nvar _jestUtil = require('jest-util');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst FRAMEWORK_INITIALIZER = require.resolve('./jestAdapterInit');\n\nconst jestAdapter = async (\n  globalConfig,\n  config,\n  environment,\n  runtime,\n  testPath,\n  sendMessageToJest\n) => {\n  const {initialize, runAndTransformResultsToJestFormat} =\n    runtime.requireInternalModule(FRAMEWORK_INITIALIZER);\n  const {globals, snapshotState} = await initialize({\n    config,\n    environment,\n    globalConfig,\n    localRequire: runtime.requireModule.bind(runtime),\n    parentProcess: process,\n    sendMessageToJest,\n    setGlobalsForRuntime: runtime.setGlobalsForRuntime.bind(runtime),\n    testPath\n  });\n\n  if (config.timers === 'fake' || config.timers === 'modern') {\n    // during setup, this cannot be null (and it's fine to explode if it is)\n    environment.fakeTimersModern.useFakeTimers();\n  } else if (config.timers === 'legacy') {\n    environment.fakeTimers.useFakeTimers();\n  }\n\n  globals.beforeEach(() => {\n    if (config.resetModules) {\n      runtime.resetModules();\n    }\n\n    if (config.clearMocks) {\n      runtime.clearAllMocks();\n    }\n\n    if (config.resetMocks) {\n      runtime.resetAllMocks();\n\n      if (config.timers === 'legacy') {\n        // during setup, this cannot be null (and it's fine to explode if it is)\n        environment.fakeTimers.useFakeTimers();\n      }\n    }\n\n    if (config.restoreMocks) {\n      runtime.restoreAllMocks();\n    }\n  });\n\n  for (const path of config.setupFilesAfterEnv) {\n    const esm = runtime.unstable_shouldLoadAsEsm(path);\n\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      runtime.requireModule(path);\n    }\n  }\n\n  const esm = runtime.unstable_shouldLoadAsEsm(testPath);\n\n  if (esm) {\n    await runtime.unstable_importModule(testPath);\n  } else {\n    runtime.requireModule(testPath);\n  }\n\n  const results = await runAndTransformResultsToJestFormat({\n    config,\n    globalConfig,\n    testPath\n  });\n\n  _addSnapshotData(results, snapshotState); // We need to copy the results object to ensure we don't leaks the prototypes\n  // from the VM. Jasmine creates the result objects in the parent process, we\n  // should consider doing that for circus as well.\n\n  return (0, _jestUtil.deepCyclicCopy)(results, {\n    keepPrototype: false\n  });\n};\n\nconst _addSnapshotData = (results, snapshotState) => {\n  results.testResults.forEach(({fullName, status}) => {\n    if (status === 'pending' || status === 'failed') {\n      // if test is skipped or failed, we don't want to mark\n      // its snapshots as obsolete.\n      snapshotState.markSnapshotsAsCheckedForTest(fullName);\n    }\n  });\n  const uncheckedCount = snapshotState.getUncheckedCount();\n  const uncheckedKeys = snapshotState.getUncheckedKeys();\n\n  if (uncheckedCount) {\n    snapshotState.removeUncheckedKeys();\n  }\n\n  const status = snapshotState.save();\n  results.snapshot.fileDeleted = status.deleted;\n  results.snapshot.added = snapshotState.added;\n  results.snapshot.matched = snapshotState.matched;\n  results.snapshot.unmatched = snapshotState.unmatched;\n  results.snapshot.updated = snapshotState.updated;\n  results.snapshot.unchecked = !status.deleted ? uncheckedCount : 0; // Copy the array to prevent memory leaks\n\n  results.snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n};\n\nmodule.exports = jestAdapter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}