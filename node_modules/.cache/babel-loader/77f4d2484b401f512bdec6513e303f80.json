{"ast":null,"code":"'use strict';\n\nconst nativePromisePrototype = (async () => {})().constructor.prototype;\n\nconst descriptors = ['then', 'catch', 'finally'].map(property => [property, Reflect.getOwnPropertyDescriptor(nativePromisePrototype, property)]); // The return value is a mixin of `childProcess` and `Promise`\n\nconst mergePromise = (spawned, promise) => {\n  for (const [property, descriptor] of descriptors) {\n    // Starting the main `promise` is deferred to avoid consuming streams\n    const value = typeof promise === 'function' ? function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return Reflect.apply(descriptor.value, promise(), args);\n    } : descriptor.value.bind(promise);\n    Reflect.defineProperty(spawned, property, { ...descriptor,\n      value\n    });\n  }\n\n  return spawned;\n}; // Use promises instead of `child_process` events\n\n\nconst getSpawnedPromise = spawned => {\n  return new Promise((resolve, reject) => {\n    spawned.on('exit', (exitCode, signal) => {\n      resolve({\n        exitCode,\n        signal\n      });\n    });\n    spawned.on('error', error => {\n      reject(error);\n    });\n\n    if (spawned.stdin) {\n      spawned.stdin.on('error', error => {\n        reject(error);\n      });\n    }\n  });\n};\n\nmodule.exports = {\n  mergePromise,\n  getSpawnedPromise\n};","map":{"version":3,"names":["nativePromisePrototype","constructor","prototype","descriptors","map","property","Reflect","getOwnPropertyDescriptor","mergePromise","spawned","promise","descriptor","value","args","apply","bind","defineProperty","getSpawnedPromise","Promise","resolve","reject","on","exitCode","signal","error","stdin","module","exports"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/execa/lib/promise.js"],"sourcesContent":["'use strict';\n\nconst nativePromisePrototype = (async () => {})().constructor.prototype;\nconst descriptors = ['then', 'catch', 'finally'].map(property => [\n\tproperty,\n\tReflect.getOwnPropertyDescriptor(nativePromisePrototype, property)\n]);\n\n// The return value is a mixin of `childProcess` and `Promise`\nconst mergePromise = (spawned, promise) => {\n\tfor (const [property, descriptor] of descriptors) {\n\t\t// Starting the main `promise` is deferred to avoid consuming streams\n\t\tconst value = typeof promise === 'function' ?\n\t\t\t(...args) => Reflect.apply(descriptor.value, promise(), args) :\n\t\t\tdescriptor.value.bind(promise);\n\n\t\tReflect.defineProperty(spawned, property, {...descriptor, value});\n\t}\n\n\treturn spawned;\n};\n\n// Use promises instead of `child_process` events\nconst getSpawnedPromise = spawned => {\n\treturn new Promise((resolve, reject) => {\n\t\tspawned.on('exit', (exitCode, signal) => {\n\t\t\tresolve({exitCode, signal});\n\t\t});\n\n\t\tspawned.on('error', error => {\n\t\t\treject(error);\n\t\t});\n\n\t\tif (spawned.stdin) {\n\t\t\tspawned.stdin.on('error', error => {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t}\n\t});\n};\n\nmodule.exports = {\n\tmergePromise,\n\tgetSpawnedPromise\n};\n\n"],"mappings":"AAAA;;AAEA,MAAMA,sBAAsB,GAAG,CAAC,YAAY,CAAE,CAAf,IAAmBC,WAAnB,CAA+BC,SAA9D;;AACA,MAAMC,WAAW,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,EAA6BC,GAA7B,CAAiCC,QAAQ,IAAI,CAChEA,QADgE,EAEhEC,OAAO,CAACC,wBAAR,CAAiCP,sBAAjC,EAAyDK,QAAzD,CAFgE,CAA7C,CAApB,C,CAKA;;AACA,MAAMG,YAAY,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;EAC1C,KAAK,MAAM,CAACL,QAAD,EAAWM,UAAX,CAAX,IAAqCR,WAArC,EAAkD;IACjD;IACA,MAAMS,KAAK,GAAG,OAAOF,OAAP,KAAmB,UAAnB,GACb;MAAA,kCAAIG,IAAJ;QAAIA,IAAJ;MAAA;;MAAA,OAAaP,OAAO,CAACQ,KAAR,CAAcH,UAAU,CAACC,KAAzB,EAAgCF,OAAO,EAAvC,EAA2CG,IAA3C,CAAb;IAAA,CADa,GAEbF,UAAU,CAACC,KAAX,CAAiBG,IAAjB,CAAsBL,OAAtB,CAFD;IAIAJ,OAAO,CAACU,cAAR,CAAuBP,OAAvB,EAAgCJ,QAAhC,EAA0C,EAAC,GAAGM,UAAJ;MAAgBC;IAAhB,CAA1C;EACA;;EAED,OAAOH,OAAP;AACA,CAXD,C,CAaA;;;AACA,MAAMQ,iBAAiB,GAAGR,OAAO,IAAI;EACpC,OAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACvCX,OAAO,CAACY,EAAR,CAAW,MAAX,EAAmB,CAACC,QAAD,EAAWC,MAAX,KAAsB;MACxCJ,OAAO,CAAC;QAACG,QAAD;QAAWC;MAAX,CAAD,CAAP;IACA,CAFD;IAIAd,OAAO,CAACY,EAAR,CAAW,OAAX,EAAoBG,KAAK,IAAI;MAC5BJ,MAAM,CAACI,KAAD,CAAN;IACA,CAFD;;IAIA,IAAIf,OAAO,CAACgB,KAAZ,EAAmB;MAClBhB,OAAO,CAACgB,KAAR,CAAcJ,EAAd,CAAiB,OAAjB,EAA0BG,KAAK,IAAI;QAClCJ,MAAM,CAACI,KAAD,CAAN;MACA,CAFD;IAGA;EACD,CAdM,CAAP;AAeA,CAhBD;;AAkBAE,MAAM,CAACC,OAAP,GAAiB;EAChBnB,YADgB;EAEhBS;AAFgB,CAAjB"},"metadata":{},"sourceType":"script"}