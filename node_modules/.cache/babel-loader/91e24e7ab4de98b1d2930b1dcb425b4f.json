{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.validateTemplateTableArguments = exports.validateArrayTable = exports.extractValidTemplateHeadings = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = require('pretty-format');\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nconst EXPECTED_COLOR = _chalk().default.green;\n\nconst RECEIVED_COLOR = _chalk().default.red;\n\nconst validateArrayTable = table => {\n  if (!Array.isArray(table)) {\n    throw new Error('`.each` must be called with an Array or Tagged Template Literal.\\n\\n' + `Instead was called with: ${(0, _prettyFormat().format)(table, {\n      maxDepth: 1,\n      min: true\n    })}\\n`);\n  }\n\n  if (isTaggedTemplateLiteral(table)) {\n    if (isEmptyString(table[0])) {\n      throw new Error('Error: `.each` called with an empty Tagged Template Literal of table data.\\n');\n    }\n\n    throw new Error('Error: `.each` called with a Tagged Template Literal with no data, remember to interpolate with ${expression} syntax.\\n');\n  }\n\n  if (isEmptyTable(table)) {\n    throw new Error('Error: `.each` called with an empty Array of table data.\\n');\n  }\n};\n\nexports.validateArrayTable = validateArrayTable;\n\nconst isTaggedTemplateLiteral = array => array.raw !== undefined;\n\nconst isEmptyTable = table => table.length === 0;\n\nconst isEmptyString = str => typeof str === 'string' && str.trim() === '';\n\nconst validateTemplateTableArguments = (headings, data) => {\n  const missingData = data.length % headings.length;\n\n  if (missingData > 0) {\n    throw new Error('Not enough arguments supplied for given headings:\\n' + EXPECTED_COLOR(headings.join(' | ')) + '\\n\\n' + 'Received:\\n' + RECEIVED_COLOR((0, _prettyFormat().format)(data)) + '\\n\\n' + `Missing ${RECEIVED_COLOR(missingData.toString())} ${pluralize('argument', missingData)}`);\n  }\n};\n\nexports.validateTemplateTableArguments = validateTemplateTableArguments;\n\nconst pluralize = (word, count) => word + (count === 1 ? '' : 's');\n\nconst START_OF_LINE = '^';\nconst NEWLINE = '\\\\n';\nconst HEADING = '\\\\s*[^\\\\s]+\\\\s*';\nconst PIPE = '\\\\|';\nconst REPEATABLE_HEADING = `(${PIPE}${HEADING})*`;\nconst HEADINGS_FORMAT = new RegExp(START_OF_LINE + NEWLINE + HEADING + REPEATABLE_HEADING + NEWLINE, 'g');\n\nconst extractValidTemplateHeadings = headings => {\n  const matches = headings.match(HEADINGS_FORMAT);\n\n  if (matches === null) {\n    throw new Error('Table headings do not conform to expected format:\\n\\n' + EXPECTED_COLOR('heading1 | headingN') + '\\n\\n' + 'Received:\\n\\n' + RECEIVED_COLOR((0, _prettyFormat().format)(headings)));\n  }\n\n  return matches[0];\n};\n\nexports.extractValidTemplateHeadings = extractValidTemplateHeadings;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateTemplateTableArguments","validateArrayTable","extractValidTemplateHeadings","_chalk","data","_interopRequireDefault","require","_prettyFormat","obj","__esModule","default","EXPECTED_COLOR","green","RECEIVED_COLOR","red","table","Array","isArray","Error","format","maxDepth","min","isTaggedTemplateLiteral","isEmptyString","isEmptyTable","array","raw","undefined","length","str","trim","headings","missingData","join","toString","pluralize","word","count","START_OF_LINE","NEWLINE","HEADING","PIPE","REPEATABLE_HEADING","HEADINGS_FORMAT","RegExp","matches","match"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-each/build/validation.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.validateTemplateTableArguments =\n  exports.validateArrayTable =\n  exports.extractValidTemplateHeadings =\n    void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = require('pretty-format');\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst EXPECTED_COLOR = _chalk().default.green;\n\nconst RECEIVED_COLOR = _chalk().default.red;\n\nconst validateArrayTable = table => {\n  if (!Array.isArray(table)) {\n    throw new Error(\n      '`.each` must be called with an Array or Tagged Template Literal.\\n\\n' +\n        `Instead was called with: ${(0, _prettyFormat().format)(table, {\n          maxDepth: 1,\n          min: true\n        })}\\n`\n    );\n  }\n\n  if (isTaggedTemplateLiteral(table)) {\n    if (isEmptyString(table[0])) {\n      throw new Error(\n        'Error: `.each` called with an empty Tagged Template Literal of table data.\\n'\n      );\n    }\n\n    throw new Error(\n      'Error: `.each` called with a Tagged Template Literal with no data, remember to interpolate with ${expression} syntax.\\n'\n    );\n  }\n\n  if (isEmptyTable(table)) {\n    throw new Error(\n      'Error: `.each` called with an empty Array of table data.\\n'\n    );\n  }\n};\n\nexports.validateArrayTable = validateArrayTable;\n\nconst isTaggedTemplateLiteral = array => array.raw !== undefined;\n\nconst isEmptyTable = table => table.length === 0;\n\nconst isEmptyString = str => typeof str === 'string' && str.trim() === '';\n\nconst validateTemplateTableArguments = (headings, data) => {\n  const missingData = data.length % headings.length;\n\n  if (missingData > 0) {\n    throw new Error(\n      'Not enough arguments supplied for given headings:\\n' +\n        EXPECTED_COLOR(headings.join(' | ')) +\n        '\\n\\n' +\n        'Received:\\n' +\n        RECEIVED_COLOR((0, _prettyFormat().format)(data)) +\n        '\\n\\n' +\n        `Missing ${RECEIVED_COLOR(missingData.toString())} ${pluralize(\n          'argument',\n          missingData\n        )}`\n    );\n  }\n};\n\nexports.validateTemplateTableArguments = validateTemplateTableArguments;\n\nconst pluralize = (word, count) => word + (count === 1 ? '' : 's');\n\nconst START_OF_LINE = '^';\nconst NEWLINE = '\\\\n';\nconst HEADING = '\\\\s*[^\\\\s]+\\\\s*';\nconst PIPE = '\\\\|';\nconst REPEATABLE_HEADING = `(${PIPE}${HEADING})*`;\nconst HEADINGS_FORMAT = new RegExp(\n  START_OF_LINE + NEWLINE + HEADING + REPEATABLE_HEADING + NEWLINE,\n  'g'\n);\n\nconst extractValidTemplateHeadings = headings => {\n  const matches = headings.match(HEADINGS_FORMAT);\n\n  if (matches === null) {\n    throw new Error(\n      'Table headings do not conform to expected format:\\n\\n' +\n        EXPECTED_COLOR('heading1 | headingN') +\n        '\\n\\n' +\n        'Received:\\n\\n' +\n        RECEIVED_COLOR((0, _prettyFormat().format)(headings))\n    );\n  }\n\n  return matches[0];\n};\n\nexports.extractValidTemplateHeadings = extractValidTemplateHeadings;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}