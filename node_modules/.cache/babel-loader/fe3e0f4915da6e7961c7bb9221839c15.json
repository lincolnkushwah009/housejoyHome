{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestConfig() {\n  const data = require('jest-config');\n\n  _jestConfig = function () {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst stringifyOption = function (option, map) {\n  let linePrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  const optionDescription = `  // ${_jestConfig().descriptions[option]}`;\n  const stringifiedObject = `${option}: ${JSON.stringify(map[option], null, 2)}`;\n  return optionDescription + '\\n' + stringifiedObject.split('\\n').map(line => '  ' + linePrefix + line).join('\\n') + ',\\n';\n};\n\nconst generateConfigFile = function (results) {\n  let generateEsm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const {\n    useTypescript,\n    coverage,\n    coverageProvider,\n    clearMocks,\n    environment\n  } = results;\n  const overrides = {};\n\n  if (coverage) {\n    Object.assign(overrides, {\n      collectCoverage: true,\n      coverageDirectory: 'coverage'\n    });\n  }\n\n  if (coverageProvider === 'v8') {\n    Object.assign(overrides, {\n      coverageProvider: 'v8'\n    });\n  }\n\n  if (environment === 'jsdom') {\n    Object.assign(overrides, {\n      testEnvironment: 'jsdom'\n    });\n  }\n\n  if (clearMocks) {\n    Object.assign(overrides, {\n      clearMocks: true\n    });\n  }\n\n  const overrideKeys = Object.keys(overrides);\n  const properties = [];\n\n  for (const option in _jestConfig().descriptions) {\n    const opt = option;\n\n    if (overrideKeys.includes(opt)) {\n      properties.push(stringifyOption(opt, overrides));\n    } else {\n      properties.push(stringifyOption(opt, _jestConfig().defaults, '// '));\n    }\n  }\n\n  const configHeaderMessage = `/*\n * For a detailed explanation regarding each configuration property${useTypescript ? ' and type check' : ''}, visit:\n * https://jestjs.io/docs/configuration\n */\n\n`;\n  return configHeaderMessage + (useTypescript || generateEsm ? 'export default {\\n' : 'module.exports = {\\n') + properties.join('\\n') + '};\\n';\n};\n\nvar _default = generateConfigFile;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_jestConfig","data","require","stringifyOption","option","map","linePrefix","optionDescription","descriptions","stringifiedObject","JSON","stringify","split","line","join","generateConfigFile","results","generateEsm","useTypescript","coverage","coverageProvider","clearMocks","environment","overrides","assign","collectCoverage","coverageDirectory","testEnvironment","overrideKeys","keys","properties","opt","includes","push","defaults","configHeaderMessage","_default"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-cli/build/init/generateConfigFile.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestConfig() {\n  const data = require('jest-config');\n\n  _jestConfig = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst stringifyOption = (option, map, linePrefix = '') => {\n  const optionDescription = `  // ${_jestConfig().descriptions[option]}`;\n  const stringifiedObject = `${option}: ${JSON.stringify(\n    map[option],\n    null,\n    2\n  )}`;\n  return (\n    optionDescription +\n    '\\n' +\n    stringifiedObject\n      .split('\\n')\n      .map(line => '  ' + linePrefix + line)\n      .join('\\n') +\n    ',\\n'\n  );\n};\n\nconst generateConfigFile = (results, generateEsm = false) => {\n  const {useTypescript, coverage, coverageProvider, clearMocks, environment} =\n    results;\n  const overrides = {};\n\n  if (coverage) {\n    Object.assign(overrides, {\n      collectCoverage: true,\n      coverageDirectory: 'coverage'\n    });\n  }\n\n  if (coverageProvider === 'v8') {\n    Object.assign(overrides, {\n      coverageProvider: 'v8'\n    });\n  }\n\n  if (environment === 'jsdom') {\n    Object.assign(overrides, {\n      testEnvironment: 'jsdom'\n    });\n  }\n\n  if (clearMocks) {\n    Object.assign(overrides, {\n      clearMocks: true\n    });\n  }\n\n  const overrideKeys = Object.keys(overrides);\n  const properties = [];\n\n  for (const option in _jestConfig().descriptions) {\n    const opt = option;\n\n    if (overrideKeys.includes(opt)) {\n      properties.push(stringifyOption(opt, overrides));\n    } else {\n      properties.push(stringifyOption(opt, _jestConfig().defaults, '// '));\n    }\n  }\n\n  const configHeaderMessage = `/*\n * For a detailed explanation regarding each configuration property${\n   useTypescript ? ' and type check' : ''\n }, visit:\n * https://jestjs.io/docs/configuration\n */\n\n`;\n  return (\n    configHeaderMessage +\n    (useTypescript || generateEsm\n      ? 'export default {\\n'\n      : 'module.exports = {\\n') +\n    properties.join('\\n') +\n    '};\\n'\n  );\n};\n\nvar _default = generateConfigFile;\nexports.default = _default;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}