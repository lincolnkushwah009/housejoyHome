{"ast":null,"code":"'use strict';\n\nconst isStream = require('is-stream');\n\nconst getStream = require('get-stream');\n\nconst mergeStream = require('merge-stream'); // `input` option\n\n\nconst handleInput = (spawned, input) => {\n  // Checking for stdin is workaround for https://github.com/nodejs/node/issues/26852\n  // @todo remove `|| spawned.stdin === undefined` once we drop support for Node.js <=12.2.0\n  if (input === undefined || spawned.stdin === undefined) {\n    return;\n  }\n\n  if (isStream(input)) {\n    input.pipe(spawned.stdin);\n  } else {\n    spawned.stdin.end(input);\n  }\n}; // `all` interleaves `stdout` and `stderr`\n\n\nconst makeAllStream = (spawned, _ref) => {\n  let {\n    all\n  } = _ref;\n\n  if (!all || !spawned.stdout && !spawned.stderr) {\n    return;\n  }\n\n  const mixed = mergeStream();\n\n  if (spawned.stdout) {\n    mixed.add(spawned.stdout);\n  }\n\n  if (spawned.stderr) {\n    mixed.add(spawned.stderr);\n  }\n\n  return mixed;\n}; // On failure, `result.stdout|stderr|all` should contain the currently buffered stream\n\n\nconst getBufferedData = async (stream, streamPromise) => {\n  if (!stream) {\n    return;\n  }\n\n  stream.destroy();\n\n  try {\n    return await streamPromise;\n  } catch (error) {\n    return error.bufferedData;\n  }\n};\n\nconst getStreamPromise = (stream, _ref2) => {\n  let {\n    encoding,\n    buffer,\n    maxBuffer\n  } = _ref2;\n\n  if (!stream || !buffer) {\n    return;\n  }\n\n  if (encoding) {\n    return getStream(stream, {\n      encoding,\n      maxBuffer\n    });\n  }\n\n  return getStream.buffer(stream, {\n    maxBuffer\n  });\n}; // Retrieve result of child process: exit code, signal, error, streams (stdout/stderr/all)\n\n\nconst getSpawnedResult = async (_ref3, _ref4, processDone) => {\n  let {\n    stdout,\n    stderr,\n    all\n  } = _ref3;\n  let {\n    encoding,\n    buffer,\n    maxBuffer\n  } = _ref4;\n  const stdoutPromise = getStreamPromise(stdout, {\n    encoding,\n    buffer,\n    maxBuffer\n  });\n  const stderrPromise = getStreamPromise(stderr, {\n    encoding,\n    buffer,\n    maxBuffer\n  });\n  const allPromise = getStreamPromise(all, {\n    encoding,\n    buffer,\n    maxBuffer: maxBuffer * 2\n  });\n\n  try {\n    return await Promise.all([processDone, stdoutPromise, stderrPromise, allPromise]);\n  } catch (error) {\n    return Promise.all([{\n      error,\n      signal: error.signal,\n      timedOut: error.timedOut\n    }, getBufferedData(stdout, stdoutPromise), getBufferedData(stderr, stderrPromise), getBufferedData(all, allPromise)]);\n  }\n};\n\nconst validateInputSync = _ref5 => {\n  let {\n    input\n  } = _ref5;\n\n  if (isStream(input)) {\n    throw new TypeError('The `input` option cannot be a stream in sync mode');\n  }\n};\n\nmodule.exports = {\n  handleInput,\n  makeAllStream,\n  getSpawnedResult,\n  validateInputSync\n};","map":{"version":3,"names":["isStream","require","getStream","mergeStream","handleInput","spawned","input","undefined","stdin","pipe","end","makeAllStream","all","stdout","stderr","mixed","add","getBufferedData","stream","streamPromise","destroy","error","bufferedData","getStreamPromise","encoding","buffer","maxBuffer","getSpawnedResult","processDone","stdoutPromise","stderrPromise","allPromise","Promise","signal","timedOut","validateInputSync","TypeError","module","exports"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/execa/lib/stream.js"],"sourcesContent":["'use strict';\nconst isStream = require('is-stream');\nconst getStream = require('get-stream');\nconst mergeStream = require('merge-stream');\n\n// `input` option\nconst handleInput = (spawned, input) => {\n\t// Checking for stdin is workaround for https://github.com/nodejs/node/issues/26852\n\t// @todo remove `|| spawned.stdin === undefined` once we drop support for Node.js <=12.2.0\n\tif (input === undefined || spawned.stdin === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n};\n\n// `all` interleaves `stdout` and `stderr`\nconst makeAllStream = (spawned, {all}) => {\n\tif (!all || (!spawned.stdout && !spawned.stderr)) {\n\t\treturn;\n\t}\n\n\tconst mixed = mergeStream();\n\n\tif (spawned.stdout) {\n\t\tmixed.add(spawned.stdout);\n\t}\n\n\tif (spawned.stderr) {\n\t\tmixed.add(spawned.stderr);\n\t}\n\n\treturn mixed;\n};\n\n// On failure, `result.stdout|stderr|all` should contain the currently buffered stream\nconst getBufferedData = async (stream, streamPromise) => {\n\tif (!stream) {\n\t\treturn;\n\t}\n\n\tstream.destroy();\n\n\ttry {\n\t\treturn await streamPromise;\n\t} catch (error) {\n\t\treturn error.bufferedData;\n\t}\n};\n\nconst getStreamPromise = (stream, {encoding, buffer, maxBuffer}) => {\n\tif (!stream || !buffer) {\n\t\treturn;\n\t}\n\n\tif (encoding) {\n\t\treturn getStream(stream, {encoding, maxBuffer});\n\t}\n\n\treturn getStream.buffer(stream, {maxBuffer});\n};\n\n// Retrieve result of child process: exit code, signal, error, streams (stdout/stderr/all)\nconst getSpawnedResult = async ({stdout, stderr, all}, {encoding, buffer, maxBuffer}, processDone) => {\n\tconst stdoutPromise = getStreamPromise(stdout, {encoding, buffer, maxBuffer});\n\tconst stderrPromise = getStreamPromise(stderr, {encoding, buffer, maxBuffer});\n\tconst allPromise = getStreamPromise(all, {encoding, buffer, maxBuffer: maxBuffer * 2});\n\n\ttry {\n\t\treturn await Promise.all([processDone, stdoutPromise, stderrPromise, allPromise]);\n\t} catch (error) {\n\t\treturn Promise.all([\n\t\t\t{error, signal: error.signal, timedOut: error.timedOut},\n\t\t\tgetBufferedData(stdout, stdoutPromise),\n\t\t\tgetBufferedData(stderr, stderrPromise),\n\t\t\tgetBufferedData(all, allPromise)\n\t\t]);\n\t}\n};\n\nconst validateInputSync = ({input}) => {\n\tif (isStream(input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n};\n\nmodule.exports = {\n\thandleInput,\n\tmakeAllStream,\n\tgetSpawnedResult,\n\tvalidateInputSync\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}