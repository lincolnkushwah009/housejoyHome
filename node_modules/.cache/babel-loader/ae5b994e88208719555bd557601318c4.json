{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _FailedTestsInteractiveMode = _interopRequireDefault(require('../FailedTestsInteractiveMode'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass FailedTestsInteractivePlugin extends _jestWatcher().BaseWatchPlugin {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, '_failedTestAssertions', void 0);\n\n    _defineProperty(this, '_manager', new _FailedTestsInteractiveMode.default(this._stdout));\n  }\n\n  apply(hooks) {\n    hooks.onTestRunComplete(results => {\n      this._failedTestAssertions = this.getFailedTestAssertions(results);\n      if (this._manager.isActive()) this._manager.updateWithResults(results);\n    });\n  }\n\n  getUsageInfo() {\n    var _this$_failedTestAsse;\n\n    if ((_this$_failedTestAsse = this._failedTestAssertions) !== null && _this$_failedTestAsse !== void 0 && _this$_failedTestAsse.length) {\n      return {\n        key: 'i',\n        prompt: 'run failing tests interactively'\n      };\n    }\n\n    return null;\n  }\n\n  onKey(key) {\n    if (this._manager.isActive()) {\n      this._manager.put(key);\n    }\n  }\n\n  run(_, updateConfigAndRun) {\n    return new Promise(resolve => {\n      if (!this._failedTestAssertions || this._failedTestAssertions.length === 0) {\n        resolve();\n        return;\n      }\n\n      this._manager.run(this._failedTestAssertions, failure => {\n        updateConfigAndRun({\n          mode: 'watch',\n          testNamePattern: failure ? `^${failure.fullName}$` : '',\n          testPathPattern: (failure === null || failure === void 0 ? void 0 : failure.path) || ''\n        });\n\n        if (!this._manager.isActive()) {\n          resolve();\n        }\n      });\n    });\n  }\n\n  getFailedTestAssertions(results) {\n    const failedTestPaths = [];\n\n    if ( // skip if no failed tests\n    results.numFailedTests === 0 || // skip if missing test results\n    !results.testResults || // skip if unmatched snapshots are present\n    results.snapshot.unmatched) {\n      return failedTestPaths;\n    }\n\n    results.testResults.forEach(testResult => {\n      testResult.testResults.forEach(result => {\n        if (result.status === 'failed') {\n          failedTestPaths.push({\n            fullName: result.fullName,\n            path: testResult.testFilePath\n          });\n        }\n      });\n    });\n    return failedTestPaths;\n  }\n\n}\n\nexports.default = FailedTestsInteractivePlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_jestWatcher","data","require","_FailedTestsInteractiveMode","_interopRequireDefault","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","FailedTestsInteractivePlugin","BaseWatchPlugin","constructor","_stdout","apply","hooks","onTestRunComplete","results","_failedTestAssertions","getFailedTestAssertions","_manager","isActive","updateWithResults","getUsageInfo","_this$_failedTestAsse","length","prompt","onKey","put","run","_","updateConfigAndRun","Promise","resolve","failure","mode","testNamePattern","fullName","testPathPattern","path","failedTestPaths","numFailedTests","testResults","snapshot","unmatched","forEach","testResult","result","status","push","testFilePath"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/@jest/core/build/plugins/FailedTestsInteractive.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _FailedTestsInteractiveMode = _interopRequireDefault(\n  require('../FailedTestsInteractiveMode')\n);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass FailedTestsInteractivePlugin extends _jestWatcher().BaseWatchPlugin {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, '_failedTestAssertions', void 0);\n\n    _defineProperty(\n      this,\n      '_manager',\n      new _FailedTestsInteractiveMode.default(this._stdout)\n    );\n  }\n\n  apply(hooks) {\n    hooks.onTestRunComplete(results => {\n      this._failedTestAssertions = this.getFailedTestAssertions(results);\n      if (this._manager.isActive()) this._manager.updateWithResults(results);\n    });\n  }\n\n  getUsageInfo() {\n    var _this$_failedTestAsse;\n\n    if (\n      (_this$_failedTestAsse = this._failedTestAssertions) !== null &&\n      _this$_failedTestAsse !== void 0 &&\n      _this$_failedTestAsse.length\n    ) {\n      return {\n        key: 'i',\n        prompt: 'run failing tests interactively'\n      };\n    }\n\n    return null;\n  }\n\n  onKey(key) {\n    if (this._manager.isActive()) {\n      this._manager.put(key);\n    }\n  }\n\n  run(_, updateConfigAndRun) {\n    return new Promise(resolve => {\n      if (\n        !this._failedTestAssertions ||\n        this._failedTestAssertions.length === 0\n      ) {\n        resolve();\n        return;\n      }\n\n      this._manager.run(this._failedTestAssertions, failure => {\n        updateConfigAndRun({\n          mode: 'watch',\n          testNamePattern: failure ? `^${failure.fullName}$` : '',\n          testPathPattern:\n            (failure === null || failure === void 0 ? void 0 : failure.path) ||\n            ''\n        });\n\n        if (!this._manager.isActive()) {\n          resolve();\n        }\n      });\n    });\n  }\n\n  getFailedTestAssertions(results) {\n    const failedTestPaths = [];\n\n    if (\n      // skip if no failed tests\n      results.numFailedTests === 0 || // skip if missing test results\n      !results.testResults || // skip if unmatched snapshots are present\n      results.snapshot.unmatched\n    ) {\n      return failedTestPaths;\n    }\n\n    results.testResults.forEach(testResult => {\n      testResult.testResults.forEach(result => {\n        if (result.status === 'failed') {\n          failedTestPaths.push({\n            fullName: result.fullName,\n            path: testResult.testFilePath\n          });\n        }\n      });\n    });\n    return failedTestPaths;\n  }\n}\n\nexports.default = FailedTestsInteractivePlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}