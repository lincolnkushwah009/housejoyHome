{"ast":null,"code":"var _jsxFileName = \"/Users/lincolnkushwah/Desktop/housejoyHome/src/Components/home/js/home.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { fetchPlace } from '../';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst city = () => {\n  _s();\n\n  const [city, setCity] = useState(\"\");\n  const [autocompleteCities, setAutocompleteCities] = useState([]);\n  const [autocompleteErr, setAutocompleteErr] = useState(\"\");\n\n  const handleCityChange = async e => {\n    setCity(e.target.value);\n    if (!city) return;\n    const res = await fetchPlace(city);\n    !autocompleteCities.includes(e.target.value) && res.features && setAutocompleteCities(res.features.map(place => place.place_name));\n    res.error ? setAutocompleteErr(res.error) : setAutocompleteErr(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placesAutocomplete\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placesAutocomplete__inputWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          className: \"label\",\n          children: [\"Your city\", autocompleteErr && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inputError\",\n            children: autocompleteErr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          list: \"places\",\n          type: \"text\",\n          id: \"city\",\n          name: \"city\",\n          onChange: handleCityChange,\n          value: city,\n          required: true,\n          pattern: autocompleteCities.join(\"|\"),\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"places\",\n          children: autocompleteCities.map((city, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: city\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"placesAutocomplete__hint\",\n          children: \"*start typing and choose your city from the given options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(city, \"NhNmaBO9KzKqEr0rTHIy1fQxgR4=\");\n\nexport default city;","map":{"version":3,"names":["useState","fetchPlace","city","setCity","autocompleteCities","setAutocompleteCities","autocompleteErr","setAutocompleteErr","handleCityChange","e","target","value","res","includes","features","map","place","place_name","error","join","i"],"sources":["/Users/lincolnkushwah/Desktop/housejoyHome/src/Components/home/js/home.js"],"sourcesContent":["import { useState } from 'react';\nimport { fetchPlace } from '../';\n\nconst city = () => {\n  const [city, setCity] = useState(\"\");\n  const [autocompleteCities, setAutocompleteCities] = useState([]);\n  const [autocompleteErr, setAutocompleteErr] = useState(\"\");\n\n  const handleCityChange = async (e) => {\n    setCity(e.target.value);\n    if (!city) return;\n\n    const res = await fetchPlace(city);\n    !autocompleteCities.includes(e.target.value) &&\n      res.features &&\n      setAutocompleteCities(res.features.map((place) => place.place_name));\n    res.error ? setAutocompleteErr(res.error) : setAutocompleteErr(\"\");\n  };\n\n  return (\n    <form>\n      <div className=\"placesAutocomplete\">\n        <div className=\"placesAutocomplete__inputWrap\">\n          <label htmlFor=\"city\" className=\"label\">\n            Your city\n            {autocompleteErr && (\n              <span className=\"inputError\">{autocompleteErr}</span>\n            )}\n          </label>\n          <input\n            list=\"places\"\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            onChange={handleCityChange}\n            value={city}\n            required\n            pattern={autocompleteCities.join(\"|\")}\n            autoComplete=\"off\"\n          />\n          <datalist id=\"places\">\n            {autocompleteCities.map((city, i) => (\n              <option key={i}>{city}</option>\n            ))}\n          </datalist>\n          <span className=\"placesAutocomplete__hint\">\n            *start typing and choose your city from the given options\n          </span>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default city"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,KAA3B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACA,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACI,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,CAAC,EAAD,CAA5D;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;;EAEA,MAAMQ,gBAAgB,GAAG,MAAOC,CAAP,IAAa;IACpCN,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;IACA,IAAI,CAACT,IAAL,EAAW;IAEX,MAAMU,GAAG,GAAG,MAAMX,UAAU,CAACC,IAAD,CAA5B;IACA,CAACE,kBAAkB,CAACS,QAAnB,CAA4BJ,CAAC,CAACC,MAAF,CAASC,KAArC,CAAD,IACEC,GAAG,CAACE,QADN,IAEET,qBAAqB,CAACO,GAAG,CAACE,QAAJ,CAAaC,GAAb,CAAkBC,KAAD,IAAWA,KAAK,CAACC,UAAlC,CAAD,CAFvB;IAGAL,GAAG,CAACM,KAAJ,GAAYX,kBAAkB,CAACK,GAAG,CAACM,KAAL,CAA9B,GAA4CX,kBAAkB,CAAC,EAAD,CAA9D;EACD,CATD;;EAWA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,oBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,+BAAf;QAAA,wBACE;UAAO,OAAO,EAAC,MAAf;UAAsB,SAAS,EAAC,OAAhC;UAAA,wBAEGD,eAAe,iBACd;YAAM,SAAS,EAAC,YAAhB;YAAA,UAA8BA;UAA9B;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UACE,IAAI,EAAC,QADP;UAEE,IAAI,EAAC,MAFP;UAGE,EAAE,EAAC,MAHL;UAIE,IAAI,EAAC,MAJP;UAKE,QAAQ,EAAEE,gBALZ;UAME,KAAK,EAAEN,IANT;UAOE,QAAQ,MAPV;UAQE,OAAO,EAAEE,kBAAkB,CAACe,IAAnB,CAAwB,GAAxB,CARX;UASE,YAAY,EAAC;QATf;UAAA;UAAA;UAAA;QAAA,QAPF,eAkBE;UAAU,EAAE,EAAC,QAAb;UAAA,UACGf,kBAAkB,CAACW,GAAnB,CAAuB,CAACb,IAAD,EAAOkB,CAAP,kBACtB;YAAA,UAAiBlB;UAAjB,GAAakB,CAAb;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QAlBF,eAuBE;UAAM,SAAS,EAAC,0BAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAvBF,eA0BE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QA1BF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CAlDD;;GAAMlB,I;;AAoDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}