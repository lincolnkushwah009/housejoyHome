{"ast":null,"code":"const {\n  parseSync,\n  traverse\n} = require('@babel/core');\n\nconst {\n  defaults\n} = require('@istanbuljs/schema');\n\nconst {\n  MAGIC_KEY,\n  MAGIC_VALUE\n} = require('./constants');\n\nfunction getAst(code) {\n  if (typeof code === 'object' && typeof code.type === 'string') {\n    // Assume code is already a babel ast.\n    return code;\n  }\n\n  if (typeof code !== 'string') {\n    throw new Error('Code must be a string');\n  } // Parse as leniently as possible\n\n\n  return parseSync(code, {\n    babelrc: false,\n    configFile: false,\n    parserOpts: {\n      allowAwaitOutsideFunction: true,\n      allowImportExportEverywhere: true,\n      allowReturnOutsideFunction: true,\n      allowSuperOutsideMethod: true,\n      sourceType: 'script',\n      plugins: defaults.instrumenter.parserPlugins\n    }\n  });\n}\n\nmodule.exports = function readInitialCoverage(code) {\n  const ast = getAst(code);\n  let covScope;\n  traverse(ast, {\n    ObjectProperty(path) {\n      const {\n        node\n      } = path;\n\n      if (!node.computed && path.get('key').isIdentifier() && node.key.name === MAGIC_KEY) {\n        const magicValue = path.get('value').evaluate();\n\n        if (!magicValue.confident || magicValue.value !== MAGIC_VALUE) {\n          return;\n        }\n\n        covScope = path.scope.getFunctionParent() || path.scope.getProgramParent();\n        path.stop();\n      }\n    }\n\n  });\n\n  if (!covScope) {\n    return null;\n  }\n\n  const result = {};\n\n  for (const key of ['path', 'hash', 'gcv', 'coverageData']) {\n    const binding = covScope.getOwnBinding(key);\n\n    if (!binding) {\n      return null;\n    }\n\n    const valuePath = binding.path.get('init');\n    const value = valuePath.evaluate();\n\n    if (!value.confident) {\n      return null;\n    }\n\n    result[key] = value.value;\n  }\n\n  delete result.coverageData[MAGIC_KEY];\n  delete result.coverageData.hash;\n  return result;\n};","map":{"version":3,"names":["parseSync","traverse","require","defaults","MAGIC_KEY","MAGIC_VALUE","getAst","code","type","Error","babelrc","configFile","parserOpts","allowAwaitOutsideFunction","allowImportExportEverywhere","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","plugins","instrumenter","parserPlugins","module","exports","readInitialCoverage","ast","covScope","ObjectProperty","path","node","computed","get","isIdentifier","key","name","magicValue","evaluate","confident","value","scope","getFunctionParent","getProgramParent","stop","result","binding","getOwnBinding","valuePath","coverageData","hash"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/istanbul-lib-instrument/src/read-coverage.js"],"sourcesContent":["const { parseSync, traverse } = require('@babel/core');\nconst { defaults } = require('@istanbuljs/schema');\nconst { MAGIC_KEY, MAGIC_VALUE } = require('./constants');\n\nfunction getAst(code) {\n    if (typeof code === 'object' && typeof code.type === 'string') {\n        // Assume code is already a babel ast.\n        return code;\n    }\n\n    if (typeof code !== 'string') {\n        throw new Error('Code must be a string');\n    }\n\n    // Parse as leniently as possible\n    return parseSync(code, {\n        babelrc: false,\n        configFile: false,\n        parserOpts: {\n            allowAwaitOutsideFunction: true,\n            allowImportExportEverywhere: true,\n            allowReturnOutsideFunction: true,\n            allowSuperOutsideMethod: true,\n            sourceType: 'script',\n            plugins: defaults.instrumenter.parserPlugins\n        }\n    });\n}\n\nmodule.exports = function readInitialCoverage(code) {\n    const ast = getAst(code);\n\n    let covScope;\n    traverse(ast, {\n        ObjectProperty(path) {\n            const { node } = path;\n            if (\n                !node.computed &&\n                path.get('key').isIdentifier() &&\n                node.key.name === MAGIC_KEY\n            ) {\n                const magicValue = path.get('value').evaluate();\n                if (!magicValue.confident || magicValue.value !== MAGIC_VALUE) {\n                    return;\n                }\n                covScope =\n                    path.scope.getFunctionParent() ||\n                    path.scope.getProgramParent();\n                path.stop();\n            }\n        }\n    });\n\n    if (!covScope) {\n        return null;\n    }\n\n    const result = {};\n\n    for (const key of ['path', 'hash', 'gcv', 'coverageData']) {\n        const binding = covScope.getOwnBinding(key);\n        if (!binding) {\n            return null;\n        }\n        const valuePath = binding.path.get('init');\n        const value = valuePath.evaluate();\n        if (!value.confident) {\n            return null;\n        }\n        result[key] = value.value;\n    }\n\n    delete result.coverageData[MAGIC_KEY];\n    delete result.coverageData.hash;\n\n    return result;\n};\n"],"mappings":"AAAA,MAAM;EAAEA,SAAF;EAAaC;AAAb,IAA0BC,OAAO,CAAC,aAAD,CAAvC;;AACA,MAAM;EAAEC;AAAF,IAAeD,OAAO,CAAC,oBAAD,CAA5B;;AACA,MAAM;EAAEE,SAAF;EAAaC;AAAb,IAA6BH,OAAO,CAAC,aAAD,CAA1C;;AAEA,SAASI,MAAT,CAAgBC,IAAhB,EAAsB;EAClB,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAI,CAACC,IAAZ,KAAqB,QAArD,EAA+D;IAC3D;IACA,OAAOD,IAAP;EACH;;EAED,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;IAC1B,MAAM,IAAIE,KAAJ,CAAU,uBAAV,CAAN;EACH,CARiB,CAUlB;;;EACA,OAAOT,SAAS,CAACO,IAAD,EAAO;IACnBG,OAAO,EAAE,KADU;IAEnBC,UAAU,EAAE,KAFO;IAGnBC,UAAU,EAAE;MACRC,yBAAyB,EAAE,IADnB;MAERC,2BAA2B,EAAE,IAFrB;MAGRC,0BAA0B,EAAE,IAHpB;MAIRC,uBAAuB,EAAE,IAJjB;MAKRC,UAAU,EAAE,QALJ;MAMRC,OAAO,EAAEf,QAAQ,CAACgB,YAAT,CAAsBC;IANvB;EAHO,CAAP,CAAhB;AAYH;;AAEDC,MAAM,CAACC,OAAP,GAAiB,SAASC,mBAAT,CAA6BhB,IAA7B,EAAmC;EAChD,MAAMiB,GAAG,GAAGlB,MAAM,CAACC,IAAD,CAAlB;EAEA,IAAIkB,QAAJ;EACAxB,QAAQ,CAACuB,GAAD,EAAM;IACVE,cAAc,CAACC,IAAD,EAAO;MACjB,MAAM;QAAEC;MAAF,IAAWD,IAAjB;;MACA,IACI,CAACC,IAAI,CAACC,QAAN,IACAF,IAAI,CAACG,GAAL,CAAS,KAAT,EAAgBC,YAAhB,EADA,IAEAH,IAAI,CAACI,GAAL,CAASC,IAAT,KAAkB7B,SAHtB,EAIE;QACE,MAAM8B,UAAU,GAAGP,IAAI,CAACG,GAAL,CAAS,OAAT,EAAkBK,QAAlB,EAAnB;;QACA,IAAI,CAACD,UAAU,CAACE,SAAZ,IAAyBF,UAAU,CAACG,KAAX,KAAqBhC,WAAlD,EAA+D;UAC3D;QACH;;QACDoB,QAAQ,GACJE,IAAI,CAACW,KAAL,CAAWC,iBAAX,MACAZ,IAAI,CAACW,KAAL,CAAWE,gBAAX,EAFJ;QAGAb,IAAI,CAACc,IAAL;MACH;IACJ;;EAjBS,CAAN,CAAR;;EAoBA,IAAI,CAAChB,QAAL,EAAe;IACX,OAAO,IAAP;EACH;;EAED,MAAMiB,MAAM,GAAG,EAAf;;EAEA,KAAK,MAAMV,GAAX,IAAkB,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,cAAxB,CAAlB,EAA2D;IACvD,MAAMW,OAAO,GAAGlB,QAAQ,CAACmB,aAAT,CAAuBZ,GAAvB,CAAhB;;IACA,IAAI,CAACW,OAAL,EAAc;MACV,OAAO,IAAP;IACH;;IACD,MAAME,SAAS,GAAGF,OAAO,CAAChB,IAAR,CAAaG,GAAb,CAAiB,MAAjB,CAAlB;IACA,MAAMO,KAAK,GAAGQ,SAAS,CAACV,QAAV,EAAd;;IACA,IAAI,CAACE,KAAK,CAACD,SAAX,EAAsB;MAClB,OAAO,IAAP;IACH;;IACDM,MAAM,CAACV,GAAD,CAAN,GAAcK,KAAK,CAACA,KAApB;EACH;;EAED,OAAOK,MAAM,CAACI,YAAP,CAAoB1C,SAApB,CAAP;EACA,OAAOsC,MAAM,CAACI,YAAP,CAAoBC,IAA3B;EAEA,OAAOL,MAAP;AACH,CA/CD"},"metadata":{},"sourceType":"script"}