{"ast":null,"code":"'use strict';\n\nconst defaultExclude = require('./default-exclude.js');\n\nconst defaultExtension = require('./default-extension.js');\n\nconst nycCommands = {\n  all: [null, 'check-coverage', 'instrument', 'merge', 'report'],\n  testExclude: [null, 'instrument', 'report', 'check-coverage'],\n  instrument: [null, 'instrument'],\n  checkCoverage: [null, 'report', 'check-coverage'],\n  report: [null, 'report'],\n  main: [null],\n  instrumentOnly: ['instrument']\n};\nconst cwd = {\n  description: 'working directory used when resolving paths',\n  type: 'string',\n\n  get default() {\n    return process.cwd();\n  },\n\n  nycCommands: nycCommands.all\n};\nconst nycrcPath = {\n  description: 'specify an explicit path to find nyc configuration',\n  nycCommands: nycCommands.all\n};\nconst tempDir = {\n  description: 'directory to output raw coverage information to',\n  type: 'string',\n  default: './.nyc_output',\n  nycAlias: 't',\n  nycHiddenAlias: 'temp-directory',\n  nycCommands: [null, 'check-coverage', 'merge', 'report']\n};\nconst testExclude = {\n  exclude: {\n    description: 'a list of specific files and directories that should be excluded from coverage, glob patterns are supported',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: defaultExclude,\n    nycCommands: nycCommands.testExclude,\n    nycAlias: 'x'\n  },\n  excludeNodeModules: {\n    description: 'whether or not to exclude all node_module folders (i.e. **/node_modules/**) by default',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.testExclude\n  },\n  include: {\n    description: 'a list of specific files that should be covered, glob patterns are supported',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: [],\n    nycCommands: nycCommands.testExclude,\n    nycAlias: 'n'\n  },\n  extension: {\n    description: 'a list of extensions that nyc should handle in addition to .js',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: defaultExtension,\n    nycCommands: nycCommands.testExclude,\n    nycAlias: 'e'\n  }\n};\nconst instrumentVisitor = {\n  coverageVariable: {\n    description: 'variable to store coverage',\n    type: 'string',\n    default: '__coverage__',\n    nycCommands: nycCommands.instrument\n  },\n  coverageGlobalScope: {\n    description: 'scope to store the coverage variable',\n    type: 'string',\n    default: 'this',\n    nycCommands: nycCommands.instrument\n  },\n  coverageGlobalScopeFunc: {\n    description: 'avoid potentially replaced `Function` when finding global scope',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  ignoreClassMethods: {\n    description: 'class method names to ignore for coverage',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: [],\n    nycCommands: nycCommands.instrument\n  }\n};\nconst instrumentParseGen = {\n  autoWrap: {\n    description: 'allow `return` statements outside of functions',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  esModules: {\n    description: 'should files be treated as ES Modules',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  parserPlugins: {\n    description: 'babel parser plugins to use when parsing the source',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n\n    /* Babel parser plugins are to be enabled when the feature is stage 3 and\n     * implemented in a released version of node.js. */\n    default: ['asyncGenerators', 'bigInt', 'classProperties', 'classPrivateProperties', 'classPrivateMethods', 'dynamicImport', 'importMeta', 'numericSeparator', 'objectRestSpread', 'optionalCatchBinding', 'topLevelAwait'],\n    nycCommands: nycCommands.instrument\n  },\n  compact: {\n    description: 'should the output be compacted?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  preserveComments: {\n    description: 'should comments be preserved in the output?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  },\n  produceSourceMap: {\n    description: 'should source maps be produced?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.instrument\n  }\n};\nconst checkCoverage = {\n  excludeAfterRemap: {\n    description: 'should exclude logic be performed after the source-map remaps filenames?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.checkCoverage\n  },\n  branches: {\n    description: 'what % of branches must be covered?',\n    type: 'number',\n    default: 0,\n    minimum: 0,\n    maximum: 100,\n    nycCommands: nycCommands.checkCoverage\n  },\n  functions: {\n    description: 'what % of functions must be covered?',\n    type: 'number',\n    default: 0,\n    minimum: 0,\n    maximum: 100,\n    nycCommands: nycCommands.checkCoverage\n  },\n  lines: {\n    description: 'what % of lines must be covered?',\n    type: 'number',\n    default: 90,\n    minimum: 0,\n    maximum: 100,\n    nycCommands: nycCommands.checkCoverage\n  },\n  statements: {\n    description: 'what % of statements must be covered?',\n    type: 'number',\n    default: 0,\n    minimum: 0,\n    maximum: 100,\n    nycCommands: nycCommands.checkCoverage\n  },\n  perFile: {\n    description: 'check thresholds per file',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.checkCoverage\n  }\n};\nconst report = {\n  checkCoverage: {\n    description: 'check whether coverage is within thresholds provided',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.report\n  },\n  reporter: {\n    description: 'coverage reporter(s) to use',\n    type: 'array',\n    items: {\n      type: 'string'\n    },\n    default: ['text'],\n    nycCommands: nycCommands.report,\n    nycAlias: 'r'\n  },\n  reportDir: {\n    description: 'directory to output coverage reports in',\n    type: 'string',\n    default: 'coverage',\n    nycCommands: nycCommands.report\n  },\n  showProcessTree: {\n    description: 'display the tree of spawned processes',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.report\n  },\n  skipEmpty: {\n    description: 'don\\'t show empty files (no lines of code) in report',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.report\n  },\n  skipFull: {\n    description: 'don\\'t show files with 100% statement, branch, and function coverage',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.report\n  }\n};\nconst nycMain = {\n  silent: {\n    description: 'don\\'t output a report after tests finish running',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main,\n    nycAlias: 's'\n  },\n  all: {\n    description: 'whether or not to instrument all files of the project (not just the ones touched by your test suite)',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main,\n    nycAlias: 'a'\n  },\n  eager: {\n    description: 'instantiate the instrumenter at startup (see https://git.io/vMKZ9)',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  cache: {\n    description: 'cache instrumentation results for improved performance',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.main,\n    nycAlias: 'c'\n  },\n  cacheDir: {\n    description: 'explicitly set location for instrumentation cache',\n    type: 'string',\n    nycCommands: nycCommands.main\n  },\n  babelCache: {\n    description: 'cache babel transpilation results for improved performance',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  useSpawnWrap: {\n    description: 'use spawn-wrap instead of setting process.env.NODE_OPTIONS',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  hookRequire: {\n    description: 'should nyc wrap require?',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.main\n  },\n  hookRunInContext: {\n    description: 'should nyc wrap vm.runInContext?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  hookRunInThisContext: {\n    description: 'should nyc wrap vm.runInThisContext?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.main\n  },\n  clean: {\n    description: 'should the .nyc_output folder be cleaned before executing tests',\n    type: 'boolean',\n    default: true,\n    nycCommands: nycCommands.main\n  }\n};\nconst instrumentOnly = {\n  inPlace: {\n    description: 'should nyc run the instrumentation in place?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.instrumentOnly\n  },\n  exitOnError: {\n    description: 'should nyc exit when an instrumentation failure occurs?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.instrumentOnly\n  },\n  delete: {\n    description: 'should the output folder be deleted before instrumenting files?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.instrumentOnly\n  },\n  completeCopy: {\n    description: 'should nyc copy all files from input to output as well as instrumented files?',\n    type: 'boolean',\n    default: false,\n    nycCommands: nycCommands.instrumentOnly\n  }\n};\nconst nyc = {\n  description: 'nyc configuration options',\n  type: 'object',\n  properties: {\n    cwd,\n    nycrcPath,\n    tempDir,\n\n    /* Test Exclude */\n    ...testExclude,\n\n    /* Instrumentation settings */\n    ...instrumentVisitor,\n\n    /* Instrumentation parser/generator settings */\n    ...instrumentParseGen,\n    sourceMap: {\n      description: 'should nyc detect and handle source maps?',\n      type: 'boolean',\n      default: true,\n      nycCommands: nycCommands.instrument\n    },\n    require: {\n      description: 'a list of additional modules that nyc should attempt to require in its subprocess, e.g., @babel/register, @babel/polyfill',\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      default: [],\n      nycCommands: nycCommands.instrument,\n      nycAlias: 'i'\n    },\n    instrument: {\n      description: 'should nyc handle instrumentation?',\n      type: 'boolean',\n      default: true,\n      nycCommands: nycCommands.instrument\n    },\n\n    /* Check coverage */\n    ...checkCoverage,\n\n    /* Report options */\n    ...report,\n\n    /* Main command options */\n    ...nycMain,\n\n    /* Instrument command options */\n    ...instrumentOnly\n  }\n};\nconst configs = {\n  nyc,\n  testExclude: {\n    description: 'test-exclude options',\n    type: 'object',\n    properties: {\n      cwd,\n      ...testExclude\n    }\n  },\n  babelPluginIstanbul: {\n    description: 'babel-plugin-istanbul options',\n    type: 'object',\n    properties: {\n      cwd,\n      ...testExclude,\n      ...instrumentVisitor\n    }\n  },\n  instrumentVisitor: {\n    description: 'instrument visitor options',\n    type: 'object',\n    properties: instrumentVisitor\n  },\n  instrumenter: {\n    description: 'stand-alone instrumenter options',\n    type: 'object',\n    properties: { ...instrumentVisitor,\n      ...instrumentParseGen\n    }\n  }\n};\n\nfunction defaultsReducer(defaults, _ref) {\n  let [name, {\n    default: value\n  }] = _ref;\n\n  /* Modifying arrays in defaults is safe, does not change schema. */\n  if (Array.isArray(value)) {\n    value = [...value];\n  }\n\n  return Object.assign(defaults, {\n    [name]: value\n  });\n}\n\nmodule.exports = { ...configs,\n  defaults: Object.keys(configs).reduce((defaults, id) => {\n    Object.defineProperty(defaults, id, {\n      enumerable: true,\n\n      get() {\n        /* This defers `process.cwd()` until defaults are requested. */\n        return Object.entries(configs[id].properties).filter(_ref2 => {\n          let [, info] = _ref2;\n          return 'default' in info;\n        }).reduce(defaultsReducer, {});\n      }\n\n    });\n    return defaults;\n  }, {})\n};","map":{"version":3,"names":["defaultExclude","require","defaultExtension","nycCommands","all","testExclude","instrument","checkCoverage","report","main","instrumentOnly","cwd","description","type","default","process","nycrcPath","tempDir","nycAlias","nycHiddenAlias","exclude","items","excludeNodeModules","include","extension","instrumentVisitor","coverageVariable","coverageGlobalScope","coverageGlobalScopeFunc","ignoreClassMethods","instrumentParseGen","autoWrap","esModules","parserPlugins","compact","preserveComments","produceSourceMap","excludeAfterRemap","branches","minimum","maximum","functions","lines","statements","perFile","reporter","reportDir","showProcessTree","skipEmpty","skipFull","nycMain","silent","eager","cache","cacheDir","babelCache","useSpawnWrap","hookRequire","hookRunInContext","hookRunInThisContext","clean","inPlace","exitOnError","delete","completeCopy","nyc","properties","sourceMap","configs","babelPluginIstanbul","instrumenter","defaultsReducer","defaults","name","value","Array","isArray","Object","assign","module","exports","keys","reduce","id","defineProperty","enumerable","get","entries","filter","info"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/@istanbuljs/schema/index.js"],"sourcesContent":["'use strict';\n\nconst defaultExclude = require('./default-exclude.js');\nconst defaultExtension = require('./default-extension.js');\n\nconst nycCommands = {\n\tall: [null, 'check-coverage', 'instrument', 'merge', 'report'],\n\ttestExclude: [null, 'instrument', 'report', 'check-coverage'],\n\tinstrument: [null, 'instrument'],\n\tcheckCoverage: [null, 'report', 'check-coverage'],\n\treport: [null, 'report'],\n\tmain: [null],\n\tinstrumentOnly: ['instrument']\n};\n\nconst cwd = {\n\tdescription: 'working directory used when resolving paths',\n\ttype: 'string',\n\tget default() {\n\t\treturn process.cwd();\n\t},\n\tnycCommands: nycCommands.all\n};\n\nconst nycrcPath = {\n\tdescription: 'specify an explicit path to find nyc configuration',\n\tnycCommands: nycCommands.all\n};\n\nconst tempDir = {\n\tdescription: 'directory to output raw coverage information to',\n\ttype: 'string',\n\tdefault: './.nyc_output',\n\tnycAlias: 't',\n\tnycHiddenAlias: 'temp-directory',\n\tnycCommands: [null, 'check-coverage', 'merge', 'report']\n};\n\nconst testExclude = {\n\texclude: {\n\t\tdescription: 'a list of specific files and directories that should be excluded from coverage, glob patterns are supported',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: defaultExclude,\n\t\tnycCommands: nycCommands.testExclude,\n\t\tnycAlias: 'x'\n\t},\n\texcludeNodeModules: {\n\t\tdescription: 'whether or not to exclude all node_module folders (i.e. **/node_modules/**) by default',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.testExclude\n\t},\n\tinclude: {\n\t\tdescription: 'a list of specific files that should be covered, glob patterns are supported',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: [],\n\t\tnycCommands: nycCommands.testExclude,\n\t\tnycAlias: 'n'\n\t},\n\textension: {\n\t\tdescription: 'a list of extensions that nyc should handle in addition to .js',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: defaultExtension,\n\t\tnycCommands: nycCommands.testExclude,\n\t\tnycAlias: 'e'\n\t}\n};\n\nconst instrumentVisitor = {\n\tcoverageVariable: {\n\t\tdescription: 'variable to store coverage',\n\t\ttype: 'string',\n\t\tdefault: '__coverage__',\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tcoverageGlobalScope: {\n\t\tdescription: 'scope to store the coverage variable',\n\t\ttype: 'string',\n\t\tdefault: 'this',\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tcoverageGlobalScopeFunc: {\n\t\tdescription: 'avoid potentially replaced `Function` when finding global scope',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tignoreClassMethods: {\n\t\tdescription: 'class method names to ignore for coverage',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: [],\n\t\tnycCommands: nycCommands.instrument\n\t}\n};\n\nconst instrumentParseGen = {\n\tautoWrap: {\n\t\tdescription: 'allow `return` statements outside of functions',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tesModules: {\n\t\tdescription: 'should files be treated as ES Modules',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tparserPlugins: {\n\t\tdescription: 'babel parser plugins to use when parsing the source',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\t/* Babel parser plugins are to be enabled when the feature is stage 3 and\n\t\t * implemented in a released version of node.js. */\n\t\tdefault: [\n\t\t\t'asyncGenerators',\n\t\t\t'bigInt',\n\t\t\t'classProperties',\n\t\t\t'classPrivateProperties',\n\t\t\t'classPrivateMethods',\n\t\t\t'dynamicImport',\n\t\t\t'importMeta',\n\t\t\t'numericSeparator',\n\t\t\t'objectRestSpread',\n\t\t\t'optionalCatchBinding',\n\t\t\t'topLevelAwait'\n\t\t],\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tcompact: {\n\t\tdescription: 'should the output be compacted?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tpreserveComments: {\n\t\tdescription: 'should comments be preserved in the output?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t},\n\tproduceSourceMap: {\n\t\tdescription: 'should source maps be produced?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.instrument\n\t}\n};\n\nconst checkCoverage = {\n\texcludeAfterRemap: {\n\t\tdescription: 'should exclude logic be performed after the source-map remaps filenames?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tbranches: {\n\t\tdescription: 'what % of branches must be covered?',\n\t\ttype: 'number',\n\t\tdefault: 0,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tfunctions: {\n\t\tdescription: 'what % of functions must be covered?',\n\t\ttype: 'number',\n\t\tdefault: 0,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tlines: {\n\t\tdescription: 'what % of lines must be covered?',\n\t\ttype: 'number',\n\t\tdefault: 90,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tstatements: {\n\t\tdescription: 'what % of statements must be covered?',\n\t\ttype: 'number',\n\t\tdefault: 0,\n\t\tminimum: 0,\n\t\tmaximum: 100,\n\t\tnycCommands: nycCommands.checkCoverage\n\t},\n\tperFile: {\n\t\tdescription: 'check thresholds per file',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.checkCoverage\n\t}\n};\n\nconst report = {\n\tcheckCoverage: {\n\t\tdescription: 'check whether coverage is within thresholds provided',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.report\n\t},\n\treporter: {\n\t\tdescription: 'coverage reporter(s) to use',\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tdefault: ['text'],\n\t\tnycCommands: nycCommands.report,\n\t\tnycAlias: 'r'\n\t},\n\treportDir: {\n\t\tdescription: 'directory to output coverage reports in',\n\t\ttype: 'string',\n\t\tdefault: 'coverage',\n\t\tnycCommands: nycCommands.report\n\t},\n\tshowProcessTree: {\n\t\tdescription: 'display the tree of spawned processes',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.report\n\t},\n\tskipEmpty: {\n\t\tdescription: 'don\\'t show empty files (no lines of code) in report',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.report\n\t},\n\tskipFull: {\n\t\tdescription: 'don\\'t show files with 100% statement, branch, and function coverage',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.report\n\t}\n};\n\nconst nycMain = {\n\tsilent: {\n\t\tdescription: 'don\\'t output a report after tests finish running',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main,\n\t\tnycAlias: 's'\n\t},\n\tall: {\n\t\tdescription: 'whether or not to instrument all files of the project (not just the ones touched by your test suite)',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main,\n\t\tnycAlias: 'a'\n\t},\n\teager: {\n\t\tdescription: 'instantiate the instrumenter at startup (see https://git.io/vMKZ9)',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\tcache: {\n\t\tdescription: 'cache instrumentation results for improved performance',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.main,\n\t\tnycAlias: 'c'\n\t},\n\tcacheDir: {\n\t\tdescription: 'explicitly set location for instrumentation cache',\n\t\ttype: 'string',\n\t\tnycCommands: nycCommands.main\n\t},\n\tbabelCache: {\n\t\tdescription: 'cache babel transpilation results for improved performance',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\tuseSpawnWrap: {\n\t\tdescription: 'use spawn-wrap instead of setting process.env.NODE_OPTIONS',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\thookRequire: {\n\t\tdescription: 'should nyc wrap require?',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.main\n\t},\n\thookRunInContext: {\n\t\tdescription: 'should nyc wrap vm.runInContext?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\thookRunInThisContext: {\n\t\tdescription: 'should nyc wrap vm.runInThisContext?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.main\n\t},\n\tclean: {\n\t\tdescription: 'should the .nyc_output folder be cleaned before executing tests',\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tnycCommands: nycCommands.main\n\t}\n};\n\nconst instrumentOnly = {\n\tinPlace: {\n\t\tdescription: 'should nyc run the instrumentation in place?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.instrumentOnly\n\t},\n\texitOnError: {\n\t\tdescription: 'should nyc exit when an instrumentation failure occurs?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.instrumentOnly\n\t},\n\tdelete: {\n\t\tdescription: 'should the output folder be deleted before instrumenting files?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.instrumentOnly\n\t},\n\tcompleteCopy: {\n\t\tdescription: 'should nyc copy all files from input to output as well as instrumented files?',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnycCommands: nycCommands.instrumentOnly\n\t}\n};\n\nconst nyc = {\n\tdescription: 'nyc configuration options',\n\ttype: 'object',\n\tproperties: {\n\t\tcwd,\n\t\tnycrcPath,\n\t\ttempDir,\n\n\t\t/* Test Exclude */\n\t\t...testExclude,\n\n\t\t/* Instrumentation settings */\n\t\t...instrumentVisitor,\n\n\t\t/* Instrumentation parser/generator settings */\n\t\t...instrumentParseGen,\n\t\tsourceMap: {\n\t\t\tdescription: 'should nyc detect and handle source maps?',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tnycCommands: nycCommands.instrument\n\t\t},\n\t\trequire: {\n\t\t\tdescription: 'a list of additional modules that nyc should attempt to require in its subprocess, e.g., @babel/register, @babel/polyfill',\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tdefault: [],\n\t\t\tnycCommands: nycCommands.instrument,\n\t\t\tnycAlias: 'i'\n\t\t},\n\t\tinstrument: {\n\t\t\tdescription: 'should nyc handle instrumentation?',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tnycCommands: nycCommands.instrument\n\t\t},\n\n\t\t/* Check coverage */\n\t\t...checkCoverage,\n\n\t\t/* Report options */\n\t\t...report,\n\n\t\t/* Main command options */\n\t\t...nycMain,\n\n\t\t/* Instrument command options */\n\t\t...instrumentOnly\n\t}\n};\n\nconst configs = {\n\tnyc,\n\ttestExclude: {\n\t\tdescription: 'test-exclude options',\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\tcwd,\n\t\t\t...testExclude\n\t\t}\n\t},\n\tbabelPluginIstanbul: {\n\t\tdescription: 'babel-plugin-istanbul options',\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\tcwd,\n\t\t\t...testExclude,\n\t\t\t...instrumentVisitor\n\t\t}\n\t},\n\tinstrumentVisitor: {\n\t\tdescription: 'instrument visitor options',\n\t\ttype: 'object',\n\t\tproperties: instrumentVisitor\n\t},\n\tinstrumenter: {\n\t\tdescription: 'stand-alone instrumenter options',\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t...instrumentVisitor,\n\t\t\t...instrumentParseGen\n\t\t}\n\t}\n};\n\nfunction defaultsReducer(defaults, [name, {default: value}]) {\n\t/* Modifying arrays in defaults is safe, does not change schema. */\n\tif (Array.isArray(value)) {\n\t\tvalue = [...value];\n\t}\n\n\treturn Object.assign(defaults, {[name]: value});\n}\n\nmodule.exports = {\n\t...configs,\n\tdefaults: Object.keys(configs).reduce(\n\t\t(defaults, id) => {\n\t\t\tObject.defineProperty(defaults, id, {\n\t\t\t\tenumerable: true,\n\t\t\t\tget() {\n\t\t\t\t\t/* This defers `process.cwd()` until defaults are requested. */\n\t\t\t\t\treturn Object.entries(configs[id].properties)\n\t\t\t\t\t\t.filter(([, info]) => 'default' in info)\n\t\t\t\t\t\t.reduce(defaultsReducer, {});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn defaults;\n\t\t},\n\t\t{}\n\t)\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}