{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _jestGetType = require('jest-get-type');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst supportTypes = ['map', 'array', 'object'];\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nclass Replaceable {\n  constructor(object) {\n    _defineProperty(this, 'object', void 0);\n\n    _defineProperty(this, 'type', void 0);\n\n    this.object = object;\n    this.type = (0, _jestGetType.getType)(object);\n\n    if (!supportTypes.includes(this.type)) {\n      throw new Error(`Type ${this.type} is not support in Replaceable!`);\n    }\n  }\n\n  static isReplaceable(obj1, obj2) {\n    const obj1Type = (0, _jestGetType.getType)(obj1);\n    const obj2Type = (0, _jestGetType.getType)(obj2);\n    return obj1Type === obj2Type && supportTypes.includes(obj1Type);\n  }\n\n  forEach(cb) {\n    if (this.type === 'object') {\n      const descriptors = Object.getOwnPropertyDescriptors(this.object);\n      [...Object.keys(descriptors), ...Object.getOwnPropertySymbols(descriptors)] //@ts-expect-error because typescript do not support symbol key in object\n      //https://github.com/microsoft/TypeScript/issues/1863\n      .filter(key => descriptors[key].enumerable).forEach(key => {\n        cb(this.object[key], key, this.object);\n      });\n    } else {\n      this.object.forEach(cb);\n    }\n  }\n\n  get(key) {\n    if (this.type === 'map') {\n      return this.object.get(key);\n    }\n\n    return this.object[key];\n  }\n\n  set(key, value) {\n    if (this.type === 'map') {\n      this.object.set(key, value);\n    } else {\n      this.object[key] = value;\n    }\n  }\n\n}\n/* eslint-enable */\n\n\nexports.default = Replaceable;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_jestGetType","require","_defineProperty","obj","key","enumerable","configurable","writable","supportTypes","Replaceable","constructor","object","type","getType","includes","Error","isReplaceable","obj1","obj2","obj1Type","obj2Type","forEach","cb","descriptors","getOwnPropertyDescriptors","keys","getOwnPropertySymbols","filter","get","set"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-matcher-utils/build/Replaceable.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _jestGetType = require('jest-get-type');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst supportTypes = ['map', 'array', 'object'];\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nclass Replaceable {\n  constructor(object) {\n    _defineProperty(this, 'object', void 0);\n\n    _defineProperty(this, 'type', void 0);\n\n    this.object = object;\n    this.type = (0, _jestGetType.getType)(object);\n\n    if (!supportTypes.includes(this.type)) {\n      throw new Error(`Type ${this.type} is not support in Replaceable!`);\n    }\n  }\n\n  static isReplaceable(obj1, obj2) {\n    const obj1Type = (0, _jestGetType.getType)(obj1);\n    const obj2Type = (0, _jestGetType.getType)(obj2);\n    return obj1Type === obj2Type && supportTypes.includes(obj1Type);\n  }\n\n  forEach(cb) {\n    if (this.type === 'object') {\n      const descriptors = Object.getOwnPropertyDescriptors(this.object);\n      [\n        ...Object.keys(descriptors),\n        ...Object.getOwnPropertySymbols(descriptors)\n      ] //@ts-expect-error because typescript do not support symbol key in object\n        //https://github.com/microsoft/TypeScript/issues/1863\n        .filter(key => descriptors[key].enumerable)\n        .forEach(key => {\n          cb(this.object[key], key, this.object);\n        });\n    } else {\n      this.object.forEach(cb);\n    }\n  }\n\n  get(key) {\n    if (this.type === 'map') {\n      return this.object.get(key);\n    }\n\n    return this.object[key];\n  }\n\n  set(key, value) {\n    if (this.type === 'map') {\n      this.object.set(key, value);\n    } else {\n      this.object[key] = value;\n    }\n  }\n}\n/* eslint-enable */\n\nexports.default = Replaceable;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}