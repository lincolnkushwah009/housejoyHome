{"ast":null,"code":"var _jsxFileName = \"/Users/lincolnkushwah/Desktop/housejoyHome/src/Components/home/js/home.js\";\nimport { useState } from 'react'; // import { fetchPlace } from '../../../fetchPlace';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst city = () => {\n  //   const [city, setCity] = useState(\"\");\n  //   const [autocompleteCities, setAutocompleteCities] = useState([]);\n  //   const [autocompleteErr, setAutocompleteErr] = useState(\"\");\n  //   const handleCityChange = async (e) => {\n  //     setCity(e.target.value);\n  //     if (!city) return;\n  //     const res = await fetchPlace(city);\n  //     !autocompleteCities.includes(e.target.value) &&\n  //       res.features &&\n  //       setAutocompleteCities(res.features.map((place) => place.place_name));\n  //     res.error ? setAutocompleteErr(res.error) : setAutocompleteErr(\"\");\n  //   };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placesAutocomplete\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placesAutocomplete__inputWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          className: \"label\",\n          children: [\"Your city\", autocompleteErr && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inputError\",\n            children: autocompleteErr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          list: \"places\",\n          type: \"text\",\n          id: \"city\",\n          name: \"city\",\n          onChange: handleCityChange,\n          value: city,\n          required: true,\n          pattern: autocompleteCities.join(\"|\"),\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"places\",\n          children: autocompleteCities.map((city, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: city\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"placesAutocomplete__hint\",\n          children: \"*start typing and choose your city from the given options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nexport default city;","map":{"version":3,"names":["useState","city","autocompleteErr","handleCityChange","autocompleteCities","join","map","i"],"sources":["/Users/lincolnkushwah/Desktop/housejoyHome/src/Components/home/js/home.js"],"sourcesContent":["import { useState } from 'react';\n// import { fetchPlace } from '../../../fetchPlace';\n\nconst city = () => {\n//   const [city, setCity] = useState(\"\");\n//   const [autocompleteCities, setAutocompleteCities] = useState([]);\n//   const [autocompleteErr, setAutocompleteErr] = useState(\"\");\n\n//   const handleCityChange = async (e) => {\n//     setCity(e.target.value);\n//     if (!city) return;\n\n//     const res = await fetchPlace(city);\n//     !autocompleteCities.includes(e.target.value) &&\n//       res.features &&\n//       setAutocompleteCities(res.features.map((place) => place.place_name));\n//     res.error ? setAutocompleteErr(res.error) : setAutocompleteErr(\"\");\n//   };\n\n  return (\n    <form>\n      <div className=\"placesAutocomplete\">\n        <div className=\"placesAutocomplete__inputWrap\">\n          <label htmlFor=\"city\" className=\"label\">\n            Your city\n            {autocompleteErr && (\n              <span className=\"inputError\">{autocompleteErr}</span>\n            )}\n          </label>\n          <input\n            list=\"places\"\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            onChange={handleCityChange}\n            value={city}\n            required\n            pattern={autocompleteCities.join(\"|\")}\n            autoComplete=\"off\"\n          />\n          <datalist id=\"places\">\n            {autocompleteCities.map((city, i) => (\n              <option key={i}>{city}</option>\n            ))}\n          </datalist>\n          <span className=\"placesAutocomplete__hint\">\n            *start typing and choose your city from the given options\n          </span>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default city"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACnB;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEE,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,oBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,+BAAf;QAAA,wBACE;UAAO,OAAO,EAAC,MAAf;UAAsB,SAAS,EAAC,OAAhC;UAAA,wBAEGC,eAAe,iBACd;YAAM,SAAS,EAAC,YAAhB;YAAA,UAA8BA;UAA9B;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UACE,IAAI,EAAC,QADP;UAEE,IAAI,EAAC,MAFP;UAGE,EAAE,EAAC,MAHL;UAIE,IAAI,EAAC,MAJP;UAKE,QAAQ,EAAEC,gBALZ;UAME,KAAK,EAAEF,IANT;UAOE,QAAQ,MAPV;UAQE,OAAO,EAAEG,kBAAkB,CAACC,IAAnB,CAAwB,GAAxB,CARX;UASE,YAAY,EAAC;QATf;UAAA;UAAA;UAAA;QAAA,QAPF,eAkBE;UAAU,EAAE,EAAC,QAAb;UAAA,UACGD,kBAAkB,CAACE,GAAnB,CAAuB,CAACL,IAAD,EAAOM,CAAP,kBACtB;YAAA,UAAiBN;UAAjB,GAAaM,CAAb;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QAlBF,eAuBE;UAAM,SAAS,EAAC,0BAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAvBF,eA0BE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QA1BF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CAlDD;;AAoDA,eAAeN,IAAf"},"metadata":{},"sourceType":"module"}