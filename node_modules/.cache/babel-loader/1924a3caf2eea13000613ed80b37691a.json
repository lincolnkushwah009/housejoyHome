{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = template;\n\nvar _interpolation = require('./interpolation');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nfunction template(title, headings, row) {\n  const table = convertRowToTable(row, headings);\n  const templates = convertTableToTemplates(table, headings);\n  return templates.map((template, index) => ({\n    arguments: [template],\n    title: (0, _interpolation.interpolateVariables)(title, template, index)\n  }));\n}\n\nconst convertRowToTable = (row, headings) => Array.from({\n  length: row.length / headings.length\n}).map((_, index) => row.slice(index * headings.length, index * headings.length + headings.length));\n\nconst convertTableToTemplates = (table, headings) => table.map(row => row.reduce((acc, value, index) => Object.assign(acc, {\n  [headings[index]]: value\n}), {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","default","template","_interpolation","require","title","headings","row","table","convertRowToTable","templates","convertTableToTemplates","map","index","arguments","interpolateVariables","Array","from","length","_","slice","reduce","acc","assign"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-each/build/table/template.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = template;\n\nvar _interpolation = require('./interpolation');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction template(title, headings, row) {\n  const table = convertRowToTable(row, headings);\n  const templates = convertTableToTemplates(table, headings);\n  return templates.map((template, index) => ({\n    arguments: [template],\n    title: (0, _interpolation.interpolateVariables)(title, template, index)\n  }));\n}\n\nconst convertRowToTable = (row, headings) =>\n  Array.from({\n    length: row.length / headings.length\n  }).map((_, index) =>\n    row.slice(\n      index * headings.length,\n      index * headings.length + headings.length\n    )\n  );\n\nconst convertTableToTemplates = (table, headings) =>\n  table.map(row =>\n    row.reduce(\n      (acc, value, index) =>\n        Object.assign(acc, {\n          [headings[index]]: value\n        }),\n      {}\n    )\n  );\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,QAAT,CAAkBG,KAAlB,EAAyBC,QAAzB,EAAmCC,GAAnC,EAAwC;EACtC,MAAMC,KAAK,GAAGC,iBAAiB,CAACF,GAAD,EAAMD,QAAN,CAA/B;EACA,MAAMI,SAAS,GAAGC,uBAAuB,CAACH,KAAD,EAAQF,QAAR,CAAzC;EACA,OAAOI,SAAS,CAACE,GAAV,CAAc,CAACV,QAAD,EAAWW,KAAX,MAAsB;IACzCC,SAAS,EAAE,CAACZ,QAAD,CAD8B;IAEzCG,KAAK,EAAE,CAAC,GAAGF,cAAc,CAACY,oBAAnB,EAAyCV,KAAzC,EAAgDH,QAAhD,EAA0DW,KAA1D;EAFkC,CAAtB,CAAd,CAAP;AAID;;AAED,MAAMJ,iBAAiB,GAAG,CAACF,GAAD,EAAMD,QAAN,KACxBU,KAAK,CAACC,IAAN,CAAW;EACTC,MAAM,EAAEX,GAAG,CAACW,MAAJ,GAAaZ,QAAQ,CAACY;AADrB,CAAX,EAEGN,GAFH,CAEO,CAACO,CAAD,EAAIN,KAAJ,KACLN,GAAG,CAACa,KAAJ,CACEP,KAAK,GAAGP,QAAQ,CAACY,MADnB,EAEEL,KAAK,GAAGP,QAAQ,CAACY,MAAjB,GAA0BZ,QAAQ,CAACY,MAFrC,CAHF,CADF;;AAUA,MAAMP,uBAAuB,GAAG,CAACH,KAAD,EAAQF,QAAR,KAC9BE,KAAK,CAACI,GAAN,CAAUL,GAAG,IACXA,GAAG,CAACc,MAAJ,CACE,CAACC,GAAD,EAAMtB,KAAN,EAAaa,KAAb,KACEhB,MAAM,CAAC0B,MAAP,CAAcD,GAAd,EAAmB;EACjB,CAAChB,QAAQ,CAACO,KAAD,CAAT,GAAmBb;AADF,CAAnB,CAFJ,EAKE,EALF,CADF,CADF"},"metadata":{},"sourceType":"script"}