{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = expectationResultFactory;\n\nvar _prettyFormat = require('pretty-format');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction messageFormatter(_ref) {\n  let {\n    error,\n    message,\n    passed\n  } = _ref;\n\n  if (passed) {\n    return 'Passed.';\n  }\n\n  if (message) {\n    return message;\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if ( // duck-type Error, see #2549\n  error && typeof error === 'object' && typeof error.message === 'string' && typeof error.name === 'string') {\n    if (error.message === '') {\n      return error.name;\n    }\n\n    return `${error.name}: ${error.message}`;\n  }\n\n  return `thrown: ${(0, _prettyFormat.format)(error, {\n    maxDepth: 3\n  })}`;\n}\n\nfunction stackFormatter(options, initError, errorMessage) {\n  if (options.passed) {\n    return '';\n  }\n\n  if (options.error) {\n    if (typeof options.error.stack === 'string') {\n      return options.error.stack;\n    }\n\n    if (options.error === errorMessage) {\n      return errorMessage;\n    }\n  }\n\n  if (initError) {\n    return errorMessage.trimRight() + '\\n\\n' + initError.stack;\n  }\n\n  return new Error(errorMessage).stack;\n}\n\nfunction expectationResultFactory(options, initError) {\n  const message = messageFormatter(options);\n  const stack = stackFormatter(options, initError, message);\n\n  if (options.passed) {\n    return {\n      error: options.error,\n      matcherName: options.matcherName,\n      message,\n      passed: options.passed,\n      stack\n    };\n  }\n\n  return {\n    actual: options.actual,\n    error: options.error,\n    expected: options.expected,\n    matcherName: options.matcherName,\n    message,\n    passed: options.passed,\n    stack\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","expectationResultFactory","_prettyFormat","require","messageFormatter","error","message","passed","name","format","maxDepth","stackFormatter","options","initError","errorMessage","stack","trimRight","Error","matcherName","actual","expected"],"sources":["/Users/lincolnkushwah/Desktop/All/React Projects/house_joy_new/node_modules/jest-jasmine2/build/expectationResultFactory.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = expectationResultFactory;\n\nvar _prettyFormat = require('pretty-format');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction messageFormatter({error, message, passed}) {\n  if (passed) {\n    return 'Passed.';\n  }\n\n  if (message) {\n    return message;\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (\n    // duck-type Error, see #2549\n    error &&\n    typeof error === 'object' &&\n    typeof error.message === 'string' &&\n    typeof error.name === 'string'\n  ) {\n    if (error.message === '') {\n      return error.name;\n    }\n\n    return `${error.name}: ${error.message}`;\n  }\n\n  return `thrown: ${(0, _prettyFormat.format)(error, {\n    maxDepth: 3\n  })}`;\n}\n\nfunction stackFormatter(options, initError, errorMessage) {\n  if (options.passed) {\n    return '';\n  }\n\n  if (options.error) {\n    if (typeof options.error.stack === 'string') {\n      return options.error.stack;\n    }\n\n    if (options.error === errorMessage) {\n      return errorMessage;\n    }\n  }\n\n  if (initError) {\n    return errorMessage.trimRight() + '\\n\\n' + initError.stack;\n  }\n\n  return new Error(errorMessage).stack;\n}\n\nfunction expectationResultFactory(options, initError) {\n  const message = messageFormatter(options);\n  const stack = stackFormatter(options, initError, message);\n\n  if (options.passed) {\n    return {\n      error: options.error,\n      matcherName: options.matcherName,\n      message,\n      passed: options.passed,\n      stack\n    };\n  }\n\n  return {\n    actual: options.actual,\n    error: options.error,\n    expected: options.expected,\n    matcherName: options.matcherName,\n    message,\n    passed: options.passed,\n    stack\n  };\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,wBAAlB;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,gBAAT,OAAoD;EAAA,IAA1B;IAACC,KAAD;IAAQC,OAAR;IAAiBC;EAAjB,CAA0B;;EAClD,IAAIA,MAAJ,EAAY;IACV,OAAO,SAAP;EACD;;EAED,IAAID,OAAJ,EAAa;IACX,OAAOA,OAAP;EACD;;EAED,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAOA,KAAP;EACD;;EAED,KACE;EACAA,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEA,OAAOA,KAAK,CAACC,OAAb,KAAyB,QAFzB,IAGA,OAAOD,KAAK,CAACG,IAAb,KAAsB,QALxB,EAME;IACA,IAAIH,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;MACxB,OAAOD,KAAK,CAACG,IAAb;IACD;;IAED,OAAQ,GAAEH,KAAK,CAACG,IAAK,KAAIH,KAAK,CAACC,OAAQ,EAAvC;EACD;;EAED,OAAQ,WAAU,CAAC,GAAGJ,aAAa,CAACO,MAAlB,EAA0BJ,KAA1B,EAAiC;IACjDK,QAAQ,EAAE;EADuC,CAAjC,CAEf,EAFH;AAGD;;AAED,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,SAAjC,EAA4CC,YAA5C,EAA0D;EACxD,IAAIF,OAAO,CAACL,MAAZ,EAAoB;IAClB,OAAO,EAAP;EACD;;EAED,IAAIK,OAAO,CAACP,KAAZ,EAAmB;IACjB,IAAI,OAAOO,OAAO,CAACP,KAAR,CAAcU,KAArB,KAA+B,QAAnC,EAA6C;MAC3C,OAAOH,OAAO,CAACP,KAAR,CAAcU,KAArB;IACD;;IAED,IAAIH,OAAO,CAACP,KAAR,KAAkBS,YAAtB,EAAoC;MAClC,OAAOA,YAAP;IACD;EACF;;EAED,IAAID,SAAJ,EAAe;IACb,OAAOC,YAAY,CAACE,SAAb,KAA2B,MAA3B,GAAoCH,SAAS,CAACE,KAArD;EACD;;EAED,OAAO,IAAIE,KAAJ,CAAUH,YAAV,EAAwBC,KAA/B;AACD;;AAED,SAASd,wBAAT,CAAkCW,OAAlC,EAA2CC,SAA3C,EAAsD;EACpD,MAAMP,OAAO,GAAGF,gBAAgB,CAACQ,OAAD,CAAhC;EACA,MAAMG,KAAK,GAAGJ,cAAc,CAACC,OAAD,EAAUC,SAAV,EAAqBP,OAArB,CAA5B;;EAEA,IAAIM,OAAO,CAACL,MAAZ,EAAoB;IAClB,OAAO;MACLF,KAAK,EAAEO,OAAO,CAACP,KADV;MAELa,WAAW,EAAEN,OAAO,CAACM,WAFhB;MAGLZ,OAHK;MAILC,MAAM,EAAEK,OAAO,CAACL,MAJX;MAKLQ;IALK,CAAP;EAOD;;EAED,OAAO;IACLI,MAAM,EAAEP,OAAO,CAACO,MADX;IAELd,KAAK,EAAEO,OAAO,CAACP,KAFV;IAGLe,QAAQ,EAAER,OAAO,CAACQ,QAHb;IAILF,WAAW,EAAEN,OAAO,CAACM,WAJhB;IAKLZ,OALK;IAMLC,MAAM,EAAEK,OAAO,CAACL,MANX;IAOLQ;EAPK,CAAP;AASD"},"metadata":{},"sourceType":"script"}